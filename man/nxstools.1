.\" Man page generated from reStructuredText.
.
.TH "NXSTOOLS" "1" "March 07, 2017" "2.23" "NXSTools"
.SH NAME
nxstools \- nxstools Documentation
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.sp
Authors: Jan Kotanski
.SH INTRODUCTION
.sp
Configuration tools for NeXDaTaS Tango Servers consists of the following command\-line scripts:
.INDENT 0.0
.IP \(bu 2
\fI\%nxscollect\fP uploads external images into the NeXus/HDF5 file
.IP \(bu 2
\fI\%nxsconfig\fP reads NeXus Configuration Server settings
.IP \(bu 2
\fI\%nxscreate\fP creates NeXus Configuration components
.IP \(bu 2
\fI\%nxsdata\fP runs NeXus Data Writer
.IP \(bu 2
\fI\%nxsfileinfo\fP shows nedadata of the NeXus/HDF5 file
.IP \(bu 2
\fI\%nxsetup\fP setups NeXDaTaS Tango Server environment
.UNINDENT
.sp
as well as the \fI\%nxstools\fP package which allows perform these operations
directly from a python code.
.nf
Source code: \fI\%https://github.com/nexdatas/tools\fP
Web page: \fI\%https://nexdatas.github.io/tools\fP
NexDaTaS Web page: \fI\%https://nexdatas.github.io\fP
.fi
.sp
.SH INSTALLATION
.sp
Install the dependencies:
.nf
PyTango, sphinx
.fi
.sp
.SS From sources
.sp
Download the latest NXS Tools version from
.nf
\fI\%https://github.com/nexdatas/tools\fP
.fi
.sp
.sp
Extract sources and run
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
$ python setup.py install
.ft P
.fi
.UNINDENT
.UNINDENT
.SS Debian packages
.sp
Debian Jessie (and Wheezy) packages can be found in the HDRI repository.
.sp
To install the debian packages, add the PGP repository key
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
$ sudo su
$ wget \-q \-O \- http://repos.pni\-hdri.de/debian_repo.pub.gpg | apt\-key add \-
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
and then download the corresponding source list
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
$ cd /etc/apt/sources.list.d
$ wget http://repos.pni\-hdri.de/jessie\-pni\-hdri.list
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Finally,
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
$ apt\-get update
$ apt\-get install python\-nxstools
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
To instal other NexDaTaS packages
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
$ apt\-get install python\-nxswriter nxsconfigserver\-db python\-nxsconfigserver nxsconfigtool
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
and
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
$ apt\-get install python\-nxsrecselector nxselector python\-sardana\-nxsrecorder
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
for Component Selector and Sardana related packages.
.SH NXCOLLECT
.SS Description
.sp
The nxsconfig is  a command\-line tool dedicated to collect detector images of external formats into the NeXus master file.  The images to collect should be denoted by postrun fields inside NXcollection groups.
.SS Synopsis
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
nxscollect [execute|test] [<options>] <command> <main_nexus_file>
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
execute               execute the collecting process
test                  exceute the process in test mode without changing any files
.INDENT 0.0
.TP
.B Options:
.INDENT 7.0
.TP
.B \-h\fP,\fB  \-\-help
show this help message and exit
.TP
.BI \-c \ COMPRESSION\fP,\fB \ \-\-compression\fB= COMPRESSION
deflate compression rate from 0 to 9 (default: 2)
.TP
.B \-s\fP,\fB  \-\-skip_missing
skip missing files
.TP
.B \-r\fP,\fB  \-\-replace_nexus_file
if it is set the old file is not copied into a file
with .__nxscollect__old__* extension
.UNINDENT
.UNINDENT
.SS Example
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
nxscollect \-x \-c1 /tmp/gpfs/raw/scan_234.nxs
.ft P
.fi
.UNINDENT
.UNINDENT
.SH NXSCONFIG
.SS Description
.sp
The nxsconfig program
is a command\-line interface to NXS Configuration Tango Server.
It allows one to read XML configuration datasources
and components. It also gives possibility to
perform the process of component merging.
.SS Synopsis
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
nxsconfig <command> [\-s <config_server>]  [\-d] [\-m] [\-n] [<name1>] [<name2>] [<name3>] ...
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Commands:
.INDENT 7.0
.TP
.B list [\-s <config_server>] [\-m]
list names of available components
.TP
.B list \-d [\-s <config_server>]
list names of available datasources
.TP
.B show [\-s <config_server>] [\-m] component_name1 component_name2 ...
show components with given names
.TP
.B show \-d [\-s <config_server>] dsource_name1 dsource_name2 ...
show datasources with given names
.TP
.B get [\-s <config_server>]  [\-m] component_name1 component_name2 ...
get merged configuration of components
.TP
.B sources [\-s <config_server>] [\-m] component_name1 component_name2 ...
get a list of component datasources
.TP
.B components [\-s <config_server>] component_name1 component_name2 ...
get a list of dependent components
.TP
.B variables [\-s <config_server>] [\-m] component_name1 component_name2 ...
get a list of component variables
.TP
.B data [\-s <config_server>] json_data
set values of component variables
.TP
.B record [\-s <config_server>]  component_name1
get a list of datasource record names from component
.TP
.B record \-d [\-s <config_server>] datasource_name1
get a list of datasource record names
.TP
.B servers [\-s <config_server/host>]
get lists of configuration servers from the current tango host
.TP
.B describe [\-s <config_server>] [\-m | \-p] component_name1 component_name2 ...
show all parameters of given components
.TP
.B describe|info \-d [\-s <config_server>] dsource_name1 dsource_name2 ...
show all parameters of given datasources
.TP
.B info [\-s <config_server>] [\-m | \-p] component_name1 component_name2 ...
show source parameters of given components
.TP
.B geometry [\-s <config_server>] [\-m | \-p] component_name1 component_name2 ...
show transformation parameters of given components
.UNINDENT
.TP
.B Options:
.INDENT 7.0
.TP
.B \-h\fP,\fB  \-\-help
show this help message and exit
.TP
.BI \-s \ SERVER\fP,\fB \ \-\-server\fB= SERVER
configuration server device name
.TP
.B \-d\fP,\fB  \-\-datasources
perform operation on datasources
.TP
.B \-m\fP,\fB  \-\-mandatory
make use mandatory components as well
.TP
.B \-p\fP,\fB  \-\-private
make use private components, i.e. starting with \(aq__\(aq
.TP
.B \-n\fP,\fB  \-\-no\-newlines
split result with space characters
.UNINDENT
.UNINDENT
.SS Example
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
nxsconfig list \-s p02/xmlconfigserver/exp.01 \-d
nxsconfig info
nxsconfig geometry
.ft P
.fi
.UNINDENT
.UNINDENT
.SH NXSCREATE
.SS Description
.sp
The nxscreate program allows one to create simple datasources and components.
.SS Synopsis
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
nxscreate  <command> [ <options>]  [<arg1> [<arg2>  ...]]
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
The following commands are available: clientds, tangods, deviceds, onlineds, onlinecp, comp.
.SS nxscreate clientds
.sp
It creates a set of CLIENT datasources.
.SS Synopsis
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
nxscreate clientds [options] [name1] [name2]
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.IP \(bu 2
with \-b: datasources are created in Configuration Server database
.IP \(bu 2
without \-b: datasources are created on the local filesystem in \-d <directory>
.IP \(bu 2
default <directory> is \(aq.\(aq
.IP \(bu 2
default <server> is taken from Tango DB
.UNINDENT
.INDENT 0.0
.TP
.B Options:
.INDENT 7.0
.TP
.B \-h\fP,\fB  \-\-help
show this help message and exit
.TP
.BI \-v \ DEVICE\fP,\fB \ \-\-device\-prefix\fB= DEVICE
device prefix, i.e. exp_c (mandatory w/o <name1>)
.TP
.BI \-f \ FIRST\fP,\fB \ \-\-first\fB= FIRST
first index (mandatory w/o <name1>)
.TP
.BI \-l \ LAST\fP,\fB \ \-\-last\fB= LAST
last index (mandatory w/o <name1>)
.TP
.B \-o\fP,\fB  \-\-overwrite
overwrite existing datasources
.TP
.BI \-d \ DIRECTORY\fP,\fB \ \-\-directory\fB= DIRECTORY
output datasource directory
.TP
.BI \-x \ FILE\fP,\fB \ \-\-file\-prefix\fB= FILE
file prefix, i.e. counter
.TP
.BI \-s \ DSOURCE\fP,\fB \ \-\-datasource\-prefix\fB= DSOURCE
datasource prefix, i.e. counter (useful for avoiding duplicated datasource names)
.TP
.B \-b\fP,\fB  \-\-database
store datasources in Configuration Server database
.TP
.B \-m\fP,\fB  \-\-minimal_device
device name without first \(aq0\(aq
.TP
.BI \-r \ SERVER\fP,\fB \ \-\-server\fB= SERVER
configuration server device name
.UNINDENT
.UNINDENT
.SS Example
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
nxscreate clientds starttime \-b
nxscreate clientds title \-d /home/user/xmldir
nxscreate clientds \-v exp_c \-f1 \-l4 \-b
nxscreate clientds \-v hasppXX:10000/expchan/vfcadc_exp/ \-f1 \-l8  \-m \-b \-s exp_vfc
.ft P
.fi
.UNINDENT
.UNINDENT
.SS nxscreate tangods
.sp
It creates a set of TANGO datasources.
.SS Synopsis
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
nxscreate tangods [options]
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.IP \(bu 2
with \-b: datasources are created in Configuration Server database
.IP \(bu 2
without \-b: datasources are created on the local filesystem in \-d <directory>
.IP \(bu 2
default <directory> is \(aq.\(aq
.IP \(bu 2
default <server> is taken from Tango DB
.IP \(bu 2
default <datasource> is \(aqexp_mot\(aq
.IP \(bu 2
default <host>, <port> are taken from <server>
.UNINDENT
.INDENT 0.0
.TP
.B Options:
.INDENT 7.0
.TP
.B \-h\fP,\fB  \-\-help
show this help message and exit
.TP
.BI \-v \ DEVICE\fP,\fB \ \-\-device\-prefix\fB= DEVICE
device prefix, i.e. exp_c (mandatory)
.TP
.BI \-f \ FIRST\fP,\fB \ \-\-first\fB= FIRST
first index
.TP
.BI \-l \ LAST\fP,\fB \ \-\-last\fB= LAST
last index
.TP
.BI \-a \ ATTRIBUTE\fP,\fB \ \-\-attribute\fB= ATTRIBUTE
tango attribute name
.TP
.BI \-s \ DATASOURCE\fP,\fB \ \-\-datasource\-prefix\fB= DATASOURCE
datasource\-prefix (useful for avoiding duplicated
datasource names)
.TP
.B \-o\fP,\fB  \-\-overwrite
overwrite existing datasources
.TP
.BI \-d \ DIRECTORY\fP,\fB \ \-\-directory\fB= DIRECTORY
output datasource directory
.TP
.BI \-x \ FILE\fP,\fB \ \-\-file\-prefix\fB= FILE
file prefix, i.e. counter
.TP
.BI \-u \ HOST\fP,\fB \ \-\-host\fB= HOST
tango host name
.TP
.BI \-t \ PORT\fP,\fB \ \-\-port\fB= PORT
tango host port
.TP
.B \-b\fP,\fB  \-\-database
store datasources in Configuration Server database
.TP
.BI \-g \ GROUP\fP,\fB \ \-\-group\fB= GROUP
device group name
.TP
.BI \-e \ ELEMENTTYPE\fP,\fB \ \-\-elementtype\fB= ELEMENTTYPE
element type, i.e. attribute, property or command
.TP
.BI \-r \ SERVER\fP,\fB \ \-\-server\fB= SERVER
configuration server device name
.UNINDENT
.UNINDENT
.SS Example
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
nxscreate tangods \-f1 \-l2  \-v p09/motor/exp. \-s exp_mot
nxscreate tangods \-f1 \-l32  \-v p02/motor/eh1a. \-s exp_mot \-b
nxscreate tangods \-f1 \-l32  \-v p01/motor/oh1. \-s exp_mot \-b
nxscreate tangods \-f1 \-l8  \-v pXX/slt/exp. \-s slt_exp_ \-u hasppXX.desy.de \-b
nxscreate tangods \-v petra/globals/keyword \-s source_current \-u haso228 \-t 10000 \e
                  \-a BeamCurrent \-b \-r p09/nxsconfigserver/haso228 \-o \-g __CLIENT__
.ft P
.fi
.UNINDENT
.UNINDENT
.SS nxscreate deviceds
.sp
It creates a set of TANGO datasources for all device attributes.
.SS Synopsis
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
nxscreate deviceds [options] [dv_attr1 [dv_attr2 [dv_attr3 ...]]]
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.IP \(bu 2
without <dv_attr1>: datasources for all attributes are created
.IP \(bu 2
with \-b: datasources are created in Configuration Server database
.IP \(bu 2
without \-b: datasources are created on the local filesystem in \-d <directory>
.IP \(bu 2
default <directory> is \(aq.\(aq
.IP \(bu 2
default <server> is taken from Tango DB
.IP \(bu 2
default <datasource> is \(aqexp_mot\(aq
.IP \(bu 2
default <host>, <port> are taken from <server>
.UNINDENT
.INDENT 0.0
.TP
.B Options:
.INDENT 7.0
.TP
.B \-h\fP,\fB  \-\-help
show this help message and exit
.TP
.BI \-v \ DEVICE\fP,\fB \ \-\-device\fB= DEVICE
device, i.e. p09/pilatus300k/01 (mandatory)
.TP
.BI \-o \ DATASOURCE\fP,\fB \ \-\-datasource\-prefix\fB= DATASOURCE
datasource\-prefix
.TP
.BI \-d \ DIRECTORY\fP,\fB \ \-\-directory\fB= DIRECTORY
output datasource directory
.TP
.BI \-x \ FILE\fP,\fB \ \-\-file\-prefix\fB= FILE
file prefix, i.e. counter
.TP
.BI \-s \ HOST\fP,\fB \ \-\-host\fB= HOST
tango host name
.TP
.BI \-t \ PORT\fP,\fB \ \-\-port\fB= PORT
tango host port
.TP
.B \-b\fP,\fB  \-\-database
store datasources in Configuration Server database
.TP
.B \-n\fP,\fB  \-\-no\-group
don\(aqt create common group with a name of datasource
prefix
.TP
.BI \-r \ SERVER\fP,\fB \ \-\-server\fB= SERVER
configuration server device name
.UNINDENT
.UNINDENT
.SS Example
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
nxscreate deviceds  \-v p09/pilatus/haso228k
nxscreate deviceds  \-v p09/lambda2m/haso228k  \-s haslambda \-b
nxscreate deviceds  \-v p09/pilatus300k/haso228k \-b \-o pilatus300k_ RoI Energy ExposureTime
.ft P
.fi
.UNINDENT
.UNINDENT
.SS nxscreate onlineds
.sp
It creates a set of motor datasources from an online xml file.
.SS Synopsis
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
nxscreate onlineds [options] inputFile
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.IP \(bu 2
with \-b: datasources are created in Configuration Server database
.IP \(bu 2
with \-d <directory>: datasources are created on the local filesystem
.IP \(bu 2
without \-b or \-d <directory>: run in the test mode
.IP \(bu 2
default <inputFile> is \(aq/online_dir/online.xml\(aq
.IP \(bu 2
default <server> is taken from Tango DB
.UNINDENT
.sp
\fIonlineds\fP overwrites existing datasources
.INDENT 0.0
.TP
.B Options:
.INDENT 7.0
.TP
.B \-h\fP,\fB  \-\-help
show this help message and exit
.TP
.B \-b\fP,\fB  \-\-database
store components in Configuration Server database
.TP
.BI \-d \ DIRECTORY\fP,\fB \ \-\-directory\fB= DIRECTORY
output directory where datasources will be saved
.TP
.B \-n\fP,\fB  \-\-nolower
do not change aliases into lower case
.TP
.BI \-r \ SERVER\fP,\fB \ \-\-server\fB= SERVER
configuration server device name
.TP
.BI \-x \ FILE\fP,\fB \ \-\-file\-prefix\fB= FILE
file prefix, i.e. counter
.TP
.BI \-e \ EXTERNAL\fP,\fB \ \-\-external\fB= EXTERNAL
external configuration server
.TP
.BI \-p \ XMLPACKAGE\fP,\fB \ \-\-xml\-package\fB= XMLPACKAGE
xml template package
.UNINDENT
.UNINDENT
.SS Example
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
nxscreate onlineds \-b
nxscreate onlineds \-d /home/user/xmldir
nxscreate onlineds
.ft P
.fi
.UNINDENT
.UNINDENT
.SS nxscreate onlinecp
.sp
It creates a detector component from the online.xml file
and its set of datasources.
.SS Synopsis
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
nxscreate onlinecp [options] inputFile
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.IP \(bu 2
without \(aq\-c <component>\(aq: show a list of possible components
.IP \(bu 2
with \-b: datasources are created in Configuration Server database
.IP \(bu 2
without \-b: datasources are created on the local filesystem in \-d <directory>
.IP \(bu 2
default <directory> is \(aq.\(aq
.IP \(bu 2
default <inputFile> is \(aq/online_dir/online.xml\(aq
.IP \(bu 2
default <server> is taken from Tango DB
.UNINDENT
.INDENT 0.0
.TP
.B Options:
.INDENT 7.0
.TP
.B \-h\fP,\fB  \-\-help
show this help message and exit
.TP
.BI \-c \ COMPONENT\fP,\fB \ \-\-component\fB= COMPONENT
component namerelated to the device name from
<inputFile>
.TP
.BI \-r \ SERVER\fP,\fB \ \-\-server\fB= SERVER
configuration server device name
.TP
.B \-n\fP,\fB  \-\-nolower
do not change aliases into lower case
.TP
.B \-o\fP,\fB  \-\-overwrite
overwrite existing component
.TP
.B \-b\fP,\fB  \-\-database
store datasources in Configuration Server database
.TP
.BI \-d \ DIRECTORY\fP,\fB \ \-\-directory\fB= DIRECTORY
output datasource directory
.TP
.BI \-x \ FILE\fP,\fB \ \-\-file\-prefix\fB= FILE
file prefix, i.e. counter
.TP
.BI \-e \ EXTERNAL\fP,\fB \ \-\-external\fB= EXTERNAL
external configuration server
.TP
.BI \-p \ XMLPACKAGE\fP,\fB \ \-\-xml\-package\fB= XMLPACKAGE
xml template package
.UNINDENT
.UNINDENT
.SS Example
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
nxscreate onlinecp
nxscreate onlinecp \-c lambda
nxscreate onlinecp \-c pilatus \-b
nxscreate onlinecp \-c lambda \-d /home/user/xmldir/
.ft P
.fi
.UNINDENT
.UNINDENT
.SS nxscreate stdcomp
.sp
It creates a standard component from the xml template files
and its set of datasources.
.SS Synopsis
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
nxscreate stdcomp [options] [name1 value1 [name2 value2] ...]
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.IP \(bu 2
without \(aq\-t <type>\(aq: show a list of possible component types
.IP \(bu 2
with \(aq\-t <type>  and without \-c <component>: show a list of component variables for the given component type
.IP \(bu 2
with \-b: datasources are created in Configuration Server database
.IP \(bu 2
without \-b: datasources are created on the local filesystem in \-d <directory>
.IP \(bu 2
default <directory> is \(aq.\(aq
.IP \(bu 2
[name1 value1 [name2 value2] ...] sequence  defines component variable values
.UNINDENT
.INDENT 0.0
.TP
.B Options:
.INDENT 7.0
.TP
.B \-h\fP,\fB  \-\-help
show this help message and exit
.TP
.BI \-c \ COMPONENT\fP,\fB \ \-\-component\fB= COMPONENT
component name
.TP
.BI \-t \ CPTYPE\fP,\fB \ \-\-type\fB= CPTYPE
component type
.TP
.BI \-r \ SERVER\fP,\fB \ \-\-server\fB= SERVER
configuration server device name
.TP
.BI \-p \ XMLPACKAGE\fP,\fB \ \-\-xml\-package\fB= XMLPACKAGE
xml template package
.TP
.B \-n\fP,\fB  \-\-nolower
do not change aliases into lower case
.TP
.B \-o\fP,\fB  \-\-overwrite
overwrite existing component
.TP
.B \-m\fP,\fB  \-\-mandatory
set the component as mandatory
.TP
.B \-b\fP,\fB  \-\-database
store datasources in Configuration Server database
.TP
.BI \-d \ DIRECTORY\fP,\fB \ \-\-directory\fB= DIRECTORY
output datasource directory
.TP
.BI \-e \ EXTERNAL\fP,\fB \ \-\-external\fB= EXTERNAL
external configuration server
.TP
.BI \-x \ FILE\fP,\fB \ \-\-file\-prefix\fB= FILE
file prefix, i.e. counter
.UNINDENT
.UNINDENT
.SS Example
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
nxscreate stdcomp
nxscreate stdcomp \-t source
nxscreate stdcomp \-t slit \-c \-b front_slit1 xgap slt1x ygap slt1y
nxscreate stdcomp \-t default \-c default \-b \-m
.ft P
.fi
.UNINDENT
.UNINDENT
.SS nxscreate comp
.sp
It creates a set of simple components.
.SS Synopsis
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
nxscreate comp [options] [name1] [name2] ...
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.IP \(bu 2
with \-b: datasources are created in Configuration Server database
.IP \(bu 2
without \-b: datasources are created on the local filesystem in \-d <directory>
.IP \(bu 2
default <directory> is \(aq.\(aq
.IP \(bu 2
default <server> is taken from Tango DB
.IP \(bu 2
default <strategy> is step
.IP \(bu 2
default <type> is NX_FLOAT
.IP \(bu 2
default <chunk> is SCALAR
.IP \(bu 2
default <nexuspath> is \(aq/entry$var.serialno:NXentry/instrument/collection/
.UNINDENT
.INDENT 0.0
.TP
.B Options:
.INDENT 7.0
.TP
.B \-h\fP,\fB  \-\-help
show this help message and exit
.TP
.BI \-v \ DEVICE\fP,\fB \ \-\-device\-prefix\fB= DEVICE
device prefix, i.e. exp_c
.TP
.BI \-f \ FIRST\fP,\fB \ \-\-first\fB= FIRST
first index
.TP
.BI \-l \ LAST\fP,\fB \ \-\-last\fB= LAST
last index
.TP
.B \-o\fP,\fB  \-\-overwrite
overwrite existing components
.TP
.BI \-d \ DIRECTORY\fP,\fB \ \-\-directory\fB= DIRECTORY
output component directory
.TP
.BI \-x \ FILE\fP,\fB \ \-\-file\-prefix\fB= FILE
file prefix, i.e. counter
.TP
.BI \-n \ NEXUSPATH\fP,\fB \ \-\-nexuspath\fB= NEXUSPATH
nexus path with field name
.TP
.BI \-g \ STRATEGY\fP,\fB \ \-\-strategy\fB= STRATEGY
writing strategy, i.e. STEP, INIT, FINAL, POSTRUN
.TP
.BI \-s \ DATASOURCE\fP,\fB \ \-\-datasource\-prefix \ DATASOURCE
datasource\-prefix or datasourcename
.TP
.BI \-t \ TYPE\fP,\fB \ \-\-type\fB= TYPE
nexus type of the field
.TP
.BI \-u \ UNITS\fP,\fB \ \-\-units\fB= UNITS
nexus units of the field
.TP
.B \-k\fP,\fB  \-\-links
create datasource links
.TP
.B \-b\fP,\fB  \-\-database
store components in Configuration Server database
.TP
.BI \-r \ SERVER\fP,\fB \ \-\-server\fB= SERVER
configuration server device name
.TP
.BI \-c \ CHUNK\fP,\fB \ \-\-chunk\fB= CHUNK
chunk format, i.e. SCALAR, SPECTRUM, IMAGE
.TP
.B \-m\fP,\fB  \-\-minimal_device
device name without first \(aq0\(aq
.UNINDENT
.UNINDENT
.SS Example
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
nxscreate comp counter
nxscreate comp \-f1 \-l3 \-v exp_c \-b
nxscreate comp lambda \-d /home/user/xmldir/
nxscreate comp \-n \(aq/entry$var.serialno:NXentry/instrument/sis3302:NXdetector/collection:NXcollection/\(aq \-v sis3302_1_roi \-f1 \-l4  \-g STEP \-t NX_FLOAT64 \-k \-b \-m
nxscreate comp \-n \(aq/entry$var.serialno:NXentry/instrument/eh1_mca01:NXdetector/data\(aq eh1_mca01 \-g STEP \-t NX_FLOAT64 \-i \-b \-c SPECTRUM
.ft P
.fi
.UNINDENT
.UNINDENT
.SS nxscreate compare
.sp
It compares two online.xml files
.SS Synopsis
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
nxscreate compare [\-h] [\-n] online_file [online_file]
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.IP \(bu 2
default: second <online_file> is \(aq/online_dir/online.xml\(aq if only file is given
.UNINDENT
.INDENT 0.0
.TP
.B positional arguments:
online_file    online.xml files
.TP
.B optional arguments:
.INDENT 7.0
.TP
.B \-h\fP,\fB  \-\-help
show this help message and exit
.TP
.B \-n\fP,\fB  \-\-nolower
do not change aliases into lower case
.UNINDENT
.UNINDENT
.SS Example
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
nxscreate onlineds /online_dir/online.xml online.xml
nxscreate compare online.xml
.ft P
.fi
.UNINDENT
.UNINDENT
.SH NXSDATA
.SS Description
.sp
The nxsdata program is a command\-line interface to Nexus Data Tango Server.
Program allows one to store NeXuS Data in H5 files.
The writer provides storing data from other Tango devices, various databases
as well as passed by a user client via JSON strings.
.SS Synopsis
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
nxsdata <command> [\-s <nexus_server>]  [<arg1> [<arg2>  ...]]
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Commands:
.INDENT 7.0
.TP
.B openfile [\-s <nexus_server>]  <file_name>
open new H5 file
.TP
.B setdata [\-s <nexus_server>] <json_data_string>
assign global JSON data
.TP
.B openentry [\-s <nexus_server>] <xml_config>
create new entry
.TP
.B record [\-s <nexus_server>]  <json_data_string>
record one step with step JSON data
.TP
.B closeentry [\-s <nexus_server>]
close the current entry
.TP
.B closefile [\-s <nexus_server>]
close the current file
.TP
.B servers [\-s <nexus_server/host>]
get lists of tango data servers from the current tango host
.UNINDENT
.TP
.B Options:
.INDENT 7.0
.TP
.B \-h\fP,\fB  \-\-help
show this help message and exit
.TP
.BI \-s \ SERVER\fP,\fB \ \-\-server\fB= SERVER
tango data server device name
.UNINDENT
.UNINDENT
.SS Example
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
nxsdata openfile \-s p02/tangodataserver/exp.01  /user/data/myfile.h5
.ft P
.fi
.UNINDENT
.UNINDENT
.SH NXSFILEINFO
.SS Description
.sp
The nxsfileinfo program show metadata from nexus files
.SS Synopsis
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
nxsfileinfo <command> [options] <nexus_file_name>
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
The following commands are available: general, field
.SS nxsfileinfo general
.sp
It shows general information for he nexus file.
.SS Synopsis
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
nxsfileinfo general <nexus_file_name>
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Options:
.INDENT 7.0
.TP
.B \-h\fP,\fB  \-\-help
show this help message and exit
.UNINDENT
.UNINDENT
.SS Example
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
nxsfileinfo general saxs_ref1_02.nxs
.ft P
.fi
.UNINDENT
.UNINDENT
.SS nxsfileinfo field
.sp
It shows field information for the nexus file.
.SS Synopsis
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
Usage: nxsfileinfo field <file_name>
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Options:
.INDENT 7.0
.TP
.B \-h\fP,\fB  \-\-help
show this help message and exit
.TP
.BI \-c \ HEADERS\fP,\fB \ \-\-columns\fB= HEADERS
names of column to be shown (separated by commas without spaces). The possible names are: depends_on, dtype, full_path, nexus_path, nexus_type, shape, source, source_name, source_type, strategy, trans_type, trans_offset, trans_vector, units, value
.TP
.BI \-f \ FILTERS\fP,\fB \ \-\-filters\fB= FILTERS
full_path filters (separated by commas without spaces). Default: \(aq*\(aq. E.g. \(aq\fI:NXsample/\fP\(aq
.TP
.BI \-v \ VALUES\fP,\fB \ \-\-values\fB= VALUES
field names which value should be stored (separated by commas without spaces). Default: depends_on
.TP
.B \-g\fP,\fB  \-\-geometry
show fields with geometry full_path filters, i.e. \fI:NXtransformations/\fP,*/depends_on. It works only when \-f is not defined
.TP
.B \-s\fP,\fB  \-\-source
show datasource parameters
.UNINDENT
.UNINDENT
.SS Example
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
nxsfileinfo field /tmp/saxs_ref1_02.nxs
.ft P
.fi
.UNINDENT
.UNINDENT
.SH NXSETUP
.SS Description
.sp
The nxsetup is is a command\-line setup tool for NeXus servers.  It allows to set NXSDataWriter, NXSConfigServer and NXSRecSelector in Tango environment, restart them or change property names.
.SS Synopsis
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
nxscreate  <command> [ <options>]  [<arg1> [<arg2>  ...]]
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
The following commands are available: set, restart, start, move\-prop, change\-prop, add\-recorder\-path
.SS nxsetup set
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
usage: nxsetup set [\-h] [\-b BEAMLINE] [\-m MASTERHOST] [\-u USER] [\-d DBNAME]
                   [\-j CSJSON]
                   [server_name [server_name ...]]

set up NXSConfigServer NXSDataWriter and NXSRecSelector servers

positional arguments:
  server_name           server names, e.g.: NXSRecSelector NXSDataWriter/TDW1

optional arguments:
  \-h, \-\-help            show this help message and exit
  \-b BEAMLINE, \-\-beamline BEAMLINE
                        name of the beamline ( default: \(aqnxs\(aq )
  \-m MASTERHOST, \-\-masterHost MASTERHOST
                        the host that stores the Mg ( default: <localhost> )
  \-u USER, \-\-user USER  the local user ( default: \(aqtango\(aq )
  \-d DBNAME, \-\-database DBNAME
                        the database name ( default: \(aqnxsconfig\(aq)
  \-j CSJSON, \-\-csjson CSJSON
                        JSONSettings for the configuration server. ( default:
                        \(aq{"host": "localhost","db": <DBNAME>, "use_unicode":
                        true\(aq, "read_default_file": <MY_CNF_FILE>}\(aq where
                        <MY_CNF_FILE> stays for "/home/<USER>/.my.cnf" or
                        "/var/lib/nxsconfigserver/.my.cnf" )

 examples:
       nxsetup set
       nxsetup set \-b p09 \-m haso228 \-u p09user \-d nxsconfig NXSConfigServer
.ft P
.fi
.UNINDENT
.UNINDENT
.SS nxsetup restart
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
usage: nxsetup restart [\-h] [\-l LEVEL] [server_name [server_name ...]]

restart tango server

positional arguments:
  server_name           server names, e.g.: NXSRecSelector NXSDataWriter/TDW1

optional arguments:
  \-h, \-\-help            show this help message and exit
  \-l LEVEL, \-\-level LEVEL
                        startup level

 examples:
       nxsetup restart Pool/haso228 \-l 2
.ft P
.fi
.UNINDENT
.UNINDENT
.SS nxsetup start
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
usage: nxsetup start [\-h] [\-l LEVEL] [server_name [server_name ...]]

start tango server

positional arguments:
  server_name           server names, e.g.: NXSRecSelector NXSDataWriter/TDW1

optional arguments:
  \-h, \-\-help            show this help message and exit
  \-l LEVEL, \-\-level LEVEL
                        startup level

 examples:
       nxsetup start Pool/haso228 \-l 2
.ft P
.fi
.UNINDENT
.UNINDENT
.SS nxsetup move\-prop
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
usage: nxsetup move\-prop [\-h] [\-n NEWNAME] [\-o OLDNAME]
                         [server_name [server_name ...]]

change property name

positional arguments:
  server_name           server names, e.g.: NXSRecSelector NXSDataWriter/TDW1

optional arguments:
  \-h, \-\-help            show this help message and exit
  \-n NEWNAME, \-\-newname NEWNAME
                        (new) property name
  \-o OLDNAME, \-\-oldname OLDNAME
                        old property name

 examples:
       nxsetup move\-prop \-n DefaultPreselectedComponents \-o DefaultAutomaticComponents NXSRecSelector
.ft P
.fi
.UNINDENT
.UNINDENT
.SS nxsetup change\-prop
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
usage: nxsetup change\-prop [\-h] [\-n NEWNAME] [\-w PROPVALUE]
                           [server_name [server_name ...]]

change property value

positional arguments:
  server_name           server names, e.g.: NXSRecSelector NXSDataWriter/TDW1

optional arguments:
  \-h, \-\-help            show this help message and exit
  \-n NEWNAME, \-\-newname NEWNAME
                        (new) property name
  \-w PROPVALUE, \-\-propvalue PROPVALUE
                        new property value

 examples:
       nxsetup change\-prop \-n DefaultPreselectedComponents \-w "[\e"pinhole1\e",\e"slit2\e"]" NXSRecSelector/r228
.ft P
.fi
.UNINDENT
.UNINDENT
.SS nxsetup add\-recorder\-path
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
usage: nxsetup add\-recorder\-path [\-h] recorder_path

add\-recorder\-path into MacroServer(s) property

positional arguments:
  recorder_path  sardana recorder path

optional arguments:
  \-h, \-\-help     show this help message and exit

 examples:
       nxsetup add\-recorder\-path /usr/share/pyshared/sardananxsrecorder
.ft P
.fi
.UNINDENT
.UNINDENT
.SH NXSTOOLS PACKAGE
.SS Submodules
.SS nxstools.nxscollect module
.sp
Command\-line tool to merge images of external file\-formats
into the master NeXus file
.INDENT 0.0
.TP
.B class nxstools.nxscollect.Collector(nexusfilename, compression=2, skipmissing=False, storeold=False, testmode=False)
Bases: \fI\%object\fP
.sp
Collector merge images of external file\-formats
into the master NeXus file
.sp
The constructor creates the collector object
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBnexusfilename\fP (\fI\%str\fP) \-\- the nexus file name
.IP \(bu 2
\fBcompression\fP (\fI\%int\fP) \-\- compression rate
.IP \(bu 2
\fBskipmissing\fP (\fI\%bool\fP) \-\- if skip missing images
.IP \(bu 2
\fBstoreold\fP (\fI\%bool\fP) \-\- if backup the input file
.IP \(bu 2
\fBtestmode\fP (\fI\%bool\fP) \-\- if run in a test mode
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B collect()
creates a temporary file,
collects the all image files defined by hdf5
postrun fields of NXcollection groups and renames the temporary file
to the origin one if the action was successful
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class nxstools.nxscollect.Execute(parser)
Bases: \fBnxstools.nxsargparser.Runner\fP
.sp
Execute runner
.sp
parser creator
.INDENT 7.0
.TP
.B Parameters
\fBparser\fP (\fBNXSFileInfoArgParser\fP) \-\- option parser
.UNINDENT
.INDENT 7.0
.TP
.B create()
creates parser
.UNINDENT
.INDENT 7.0
.TP
.B description = \(aqexecute the collection process\(aq
(\fI\%str\fP) command description
.UNINDENT
.INDENT 7.0
.TP
.B epilog = \(aq examples:\en       nxscollect execute \-c1 /tmp/gpfs/raw/scan_234.nxs \en\en\en\(aq
(\fI\%str\fP) command epilog
.UNINDENT
.INDENT 7.0
.TP
.B postauto()
creates parser
.UNINDENT
.INDENT 7.0
.TP
.B run(options)
the main program function
.INDENT 7.0
.TP
.B Parameters
\fBoptions\fP (\fI\%argparse.Namespace\fP) \-\- parser options
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.nxscollect.PNIIO = True
(\fI\%bool\fP) True if pni.io.nx.h5 available
.UNINDENT
.INDENT 0.0
.TP
.B class nxstools.nxscollect.Test(parser)
Bases: \fBnxstools.nxscollect.Execute\fP
.sp
Test runner
.sp
parser creator
.INDENT 7.0
.TP
.B Parameters
\fBparser\fP (\fBNXSFileInfoArgParser\fP) \-\- option parser
.UNINDENT
.INDENT 7.0
.TP
.B description = \(aqexecute the process in the test mode without changing any files\(aq
(\fI\%str\fP) command description
.UNINDENT
.INDENT 7.0
.TP
.B epilog = \(aq examples:\en       nxscollect test /tmp/gpfs/raw/scan_234.nxs \en\en\en\(aq
(\fI\%str\fP) command epilog
.UNINDENT
.INDENT 7.0
.TP
.B run(options)
the main program function
.INDENT 7.0
.TP
.B Parameters
\fBoptions\fP (\fI\%argparse.Namespace\fP) \-\- parser options
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.nxscollect.main()
the main program function
.UNINDENT
.SS nxstools.nxsconfig module
.sp
Command\-line tool for ascess to the nexdatas configuration server
.INDENT 0.0
.TP
.B class nxstools.nxsconfig.Components(parser)
Bases: \fBnxstools.nxsargparser.Runner\fP
.sp
Components runner
.sp
parser creator
.INDENT 7.0
.TP
.B Parameters
\fBparser\fP (\fBNXSFileInfoArgParser\fP) \-\- option parser
.UNINDENT
.INDENT 7.0
.TP
.B create()
creates parser
.UNINDENT
.INDENT 7.0
.TP
.B description = \(aqget a list of dependent components\(aq
(\fI\%str\fP) command description
.UNINDENT
.INDENT 7.0
.TP
.B epilog = \(aq examples:\en       nxsconfig components dcm\en\en\(aq
(\fI\%str\fP) command epilog
.UNINDENT
.INDENT 7.0
.TP
.B run(options)
the main program function
.INDENT 7.0
.TP
.B Parameters
\fBoptions\fP (\fI\%argparse.Namespace\fP) \-\- parser options
.TP
.B Returns
output information
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class nxstools.nxsconfig.ConfigServer(device, nonewline=False)
Bases: \fI\%object\fP
.sp
configuration server adapter
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBdevice\fP (\fI\%str\fP) \-\- device name of the configuration server
.IP \(bu 2
\fBnonewline\fP (\fI\%bool\fP) \-\- if the output should not be separated
by the new line character
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B char = None
(\fI\%str\fP) spliting character
.UNINDENT
.INDENT 7.0
.TP
.B componentsCmd(components)
lists components of the components
.INDENT 7.0
.TP
.B Parameters
\fBcomponents\fP (\fI\%list\fP <\fI\%str\fP>) \-\- given components
.TP
.B Returns
list of component names
.TP
.B Return type
\fI\%list\fP <\fI\%str\fP>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B dataCmd(args)
provides varaible values
.INDENT 7.0
.TP
.B Parameters
\fBargs\fP (\fI\%list\fP <\fI\%str\fP>) \-\- list of item names
.TP
.B Returns
JSON with variables
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B describeCmd(ds, args, md, pr)
provides description of configuration elements
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBds\fP (\fI\%bool\fP) \-\- flag set True for datasources
.IP \(bu 2
\fBargs\fP (\fI\%list\fP <\fI\%str\fP>) \-\- list of item names
.IP \(bu 2
\fBmd\fP (\fI\%bool\fP) \-\- flag set True for mandatory components
.IP \(bu 2
\fBpr\fP (\fI\%bool\fP) \-\- flag set True for private components
.UNINDENT
.TP
.B Returns
list with description
.TP
.B Return type
\fI\%list\fP <\fI\%str\fP>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B geometryCmd(ds, args, md, pr)
provides geometry info for given elements
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBds\fP (\fI\%bool\fP) \-\- flag set True for datasources
.IP \(bu 2
\fBargs\fP (\fI\%list\fP <\fI\%str\fP>) \-\- list of item names
.IP \(bu 2
\fBmd\fP (\fI\%bool\fP) \-\- flag set True for mandatory components
.IP \(bu 2
\fBpr\fP (\fI\%bool\fP) \-\- flag set True for private components
.UNINDENT
.TP
.B Returns
list with description
.TP
.B Return type
\fI\%list\fP <\fI\%str\fP>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B getCmd(args)
provides final configuration
.INDENT 7.0
.TP
.B Parameters
\fBargs\fP (\fI\%list\fP <\fI\%str\fP>) \-\- list of item names
.TP
.B Returns
XML configuration string
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B infoCmd(ds, args, md, pr)
Provides info for given elements
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBds\fP (\fI\%bool\fP) \-\- flag set True for datasources
.IP \(bu 2
\fBargs\fP (\fI\%list\fP <\fI\%str\fP>) \-\- list of item names
.IP \(bu 2
\fBmd\fP (\fI\%bool\fP) \-\- flag set True for mandatory components
.IP \(bu 2
\fBpr\fP (\fI\%bool\fP) \-\- flag set True for private components
.UNINDENT
.TP
.B Returns
list with description
.TP
.B Return type
\fI\%list\fP <\fI\%str\fP>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B listCmd(ds, mandatory=False, private=False)
lists the DB item names
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBds\fP (\fI\%bool\fP) \-\- flag set True for datasources
.IP \(bu 2
\fBmandatory\fP (\fI\%bool\fP) \-\- flag set True for mandatory components
.IP \(bu 2
\fBprivate\fP (\fI\%bool\fP) \-\- flag set True for components starting with \(aq__\(aq
.UNINDENT
.TP
.B Returns
list op item names
.TP
.B Return type
\fI\%list\fP <\fI\%str\fP>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B mergeCmd(args)
provides merged components
.INDENT 7.0
.TP
.B Parameters
\fBargs\fP (\fI\%list\fP <\fI\%str\fP>) \-\- list of item names
.TP
.B Returns
XML configuration string with merged components
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B recordCmd(ds, name)
lists datasources of the component
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBds\fP (\fI\%bool\fP) \-\- flag set True for datasources
.IP \(bu 2
\fBname\fP (\fI\%str\fP) \-\- given component or datasource
.UNINDENT
.TP
.B Returns
list of record names
.TP
.B Return type
\fI\%list\fP <\fI\%str\fP>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B showCmd(ds, args, mandatory=False)
shows the DB items
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBds\fP (\fI\%bool\fP) \-\- flag set True for datasources
.IP \(bu 2
\fBargs\fP (\fI\%list\fP <\fI\%str\fP>) \-\- list of item names
.IP \(bu 2
\fBmandatory\fP (\fI\%bool\fP) \-\- flag set True for mandatory components
.UNINDENT
.TP
.B Returns
list of XML items
.TP
.B Return type
\fI\%list\fP <\fI\%str\fP>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B sourcesCmd(components, mandatory=False)
lists datasources of the components
.INDENT 7.0
.TP
.B Parameters
\fBcomponents\fP (\fI\%list\fP <\fI\%str\fP>) \-\- given components
.TP
.B Returns
list of datasource names
.TP
.B Return type
\fI\%list\fP <\fI\%str\fP>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B variablesCmd(components, mandatory=False)
lists variable of the components
.INDENT 7.0
.TP
.B Parameters
\fBcomponents\fP (\fI\%list\fP <\fI\%str\fP>) \-\- given components
.TP
.B Returns
list of datasource names
.TP
.B Return type
\fI\%list\fP <\fI\%str\fP>
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class nxstools.nxsconfig.Data(parser)
Bases: \fBnxstools.nxsargparser.Runner\fP
.sp
Data runner
.sp
parser creator
.INDENT 7.0
.TP
.B Parameters
\fBparser\fP (\fBNXSFileInfoArgParser\fP) \-\- option parser
.UNINDENT
.INDENT 7.0
.TP
.B create()
creates parser
.UNINDENT
.INDENT 7.0
.TP
.B description = \(aqget/set values of component variables\(aq
(\fI\%str\fP) command description
.UNINDENT
.INDENT 7.0
.TP
.B epilog = \(aq examples:\en       nxsconfig data \en       nxsconfig data \e\(aq{"sample_name":"H2O"}\e\(aq\en\en\(aq
(\fI\%str\fP) command epilog
.UNINDENT
.INDENT 7.0
.TP
.B run(options)
the main program function
.INDENT 7.0
.TP
.B Parameters
\fBoptions\fP (\fI\%argparse.Namespace\fP) \-\- parser options
.TP
.B Returns
output information
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class nxstools.nxsconfig.Describe(parser)
Bases: \fBnxstools.nxsargparser.Runner\fP
.sp
Describe runner
.sp
parser creator
.INDENT 7.0
.TP
.B Parameters
\fBparser\fP (\fBNXSFileInfoArgParser\fP) \-\- option parser
.UNINDENT
.INDENT 7.0
.TP
.B create()
creates parser
.UNINDENT
.INDENT 7.0
.TP
.B description = \(aqshow all parameters of given components (or datasources)\(aq
(\fI\%str\fP) command description
.UNINDENT
.INDENT 7.0
.TP
.B epilog = \(aq examples:\en       nxsconfig describe pilatus\en\en\(aq
(\fI\%str\fP) command epilog
.UNINDENT
.INDENT 7.0
.TP
.B run(options)
the main program function
.INDENT 7.0
.TP
.B Parameters
\fBoptions\fP (\fI\%argparse.Namespace\fP) \-\- parser options
.TP
.B Returns
output information
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class nxstools.nxsconfig.Geometry(parser)
Bases: \fBnxstools.nxsargparser.Runner\fP
.sp
List runner
.sp
parser creator
.INDENT 7.0
.TP
.B Parameters
\fBparser\fP (\fBNXSFileInfoArgParser\fP) \-\- option parser
.UNINDENT
.INDENT 7.0
.TP
.B create()
creates parser
.UNINDENT
.INDENT 7.0
.TP
.B description = \(aqshow transformation parameters of given components (or datasources)\(aq
(\fI\%str\fP) command description
.UNINDENT
.INDENT 7.0
.TP
.B epilog = \(aq examples:\en       nxsconfig geometry dcm\en\en\(aq
.UNINDENT
.INDENT 7.0
.TP
.B run(options)
the main program function
.INDENT 7.0
.TP
.B Parameters
\fBoptions\fP (\fI\%argparse.Namespace\fP) \-\- parser options
.TP
.B Returns
output information
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class nxstools.nxsconfig.Get(parser)
Bases: \fBnxstools.nxsargparser.Runner\fP
.sp
Get runner
.sp
parser creator
.INDENT 7.0
.TP
.B Parameters
\fBparser\fP (\fBNXSFileInfoArgParser\fP) \-\- option parser
.UNINDENT
.INDENT 7.0
.TP
.B create()
creates parser
.UNINDENT
.INDENT 7.0
.TP
.B description = \(aqget full configuration of components (or datasources)\(aq
(\fI\%str\fP) command description
.UNINDENT
.INDENT 7.0
.TP
.B epilog = \(aq examples:\en       nxsconfig get  dcm source slit1 slit2\en\en\(aq
(\fI\%str\fP) command epilog
.UNINDENT
.INDENT 7.0
.TP
.B run(options)
the main program function
.INDENT 7.0
.TP
.B Parameters
\fBoptions\fP (\fI\%argparse.Namespace\fP) \-\- parser options
.TP
.B Returns
output information
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class nxstools.nxsconfig.Info(parser)
Bases: \fBnxstools.nxsargparser.Runner\fP
.sp
List runner
.sp
parser creator
.INDENT 7.0
.TP
.B Parameters
\fBparser\fP (\fBNXSFileInfoArgParser\fP) \-\- option parser
.UNINDENT
.INDENT 7.0
.TP
.B create()
creates parser
.UNINDENT
.INDENT 7.0
.TP
.B description = \(aqshow source parameters of given components (or datasources)\(aq
(\fI\%str\fP) command description
.UNINDENT
.INDENT 7.0
.TP
.B epilog = \(aq examples:\en       nxsconfig info slit1\en\en\(aq
(\fI\%str\fP) command epilog
.UNINDENT
.INDENT 7.0
.TP
.B run(options)
the main program function
.INDENT 7.0
.TP
.B Parameters
\fBoptions\fP (\fI\%argparse.Namespace\fP) \-\- parser options
.TP
.B Returns
output information
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class nxstools.nxsconfig.List(parser)
Bases: \fBnxstools.nxsargparser.Runner\fP
.sp
List runner
.sp
parser creator
.INDENT 7.0
.TP
.B Parameters
\fBparser\fP (\fBNXSFileInfoArgParser\fP) \-\- option parser
.UNINDENT
.INDENT 7.0
.TP
.B create()
creates parser
.UNINDENT
.INDENT 7.0
.TP
.B description = \(aqlist names of available components (or datasources)\(aq
(\fI\%str\fP) command description
.UNINDENT
.INDENT 7.0
.TP
.B epilog = \(aq examples:\en       nxsconfig list\en\en\(aq
(\fI\%str\fP) command epilog
.UNINDENT
.INDENT 7.0
.TP
.B run(options)
the main program function
.INDENT 7.0
.TP
.B Parameters
\fBoptions\fP (\fI\%argparse.Namespace\fP) \-\- parser options
.TP
.B Returns
output information
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class nxstools.nxsconfig.Merge(parser)
Bases: \fBnxstools.nxsargparser.Runner\fP
.sp
Merge runner
.sp
parser creator
.INDENT 7.0
.TP
.B Parameters
\fBparser\fP (\fBNXSFileInfoArgParser\fP) \-\- option parser
.UNINDENT
.INDENT 7.0
.TP
.B create()
creates parser
.UNINDENT
.INDENT 7.0
.TP
.B description = \(aqget merged configuration of components (or datasources)\(aq
(\fI\%str\fP) command description
.UNINDENT
.INDENT 7.0
.TP
.B epilog = \(aq examples:\en       nxsconfig merge  slit1 dcm \en\en\(aq
(\fI\%str\fP) command epilog
.UNINDENT
.INDENT 7.0
.TP
.B run(options)
the main program function
.INDENT 7.0
.TP
.B Parameters
\fBoptions\fP (\fI\%argparse.Namespace\fP) \-\- parser options
.TP
.B Returns
output information
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class nxstools.nxsconfig.Record(parser)
Bases: \fBnxstools.nxsargparser.Runner\fP
.sp
Record runner
.sp
parser creator
.INDENT 7.0
.TP
.B Parameters
\fBparser\fP (\fBNXSFileInfoArgParser\fP) \-\- option parser
.UNINDENT
.INDENT 7.0
.TP
.B create()
creates parser
.UNINDENT
.INDENT 7.0
.TP
.B description = \(aqget a list of datasource record names for components or datasources\(aq
(\fI\%str\fP) command description
.UNINDENT
.INDENT 7.0
.TP
.B epilog = \(aq examples:\en       nxsconfig record \-d exp_mot01 \en       nxsconfig record dcm \en\en\(aq
(\fI\%str\fP) command epilog
.UNINDENT
.INDENT 7.0
.TP
.B run(options)
the main program function
.INDENT 7.0
.TP
.B Parameters
\fBoptions\fP (\fI\%argparse.Namespace\fP) \-\- parser options
.TP
.B Returns
output information
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class nxstools.nxsconfig.Servers(parser)
Bases: \fBnxstools.nxsargparser.Runner\fP
.sp
Servers runner
.sp
parser creator
.INDENT 7.0
.TP
.B Parameters
\fBparser\fP (\fBNXSFileInfoArgParser\fP) \-\- option parser
.UNINDENT
.INDENT 7.0
.TP
.B create()
creates parser
.UNINDENT
.INDENT 7.0
.TP
.B description = \(aqget a list of configuration servers from the current tango host\(aq
(\fI\%str\fP) command description
.UNINDENT
.INDENT 7.0
.TP
.B epilog = \(aq examples:\en       nxsconfig servers\en\en\(aq
(\fI\%str\fP) command epilog
.UNINDENT
.INDENT 7.0
.TP
.B run(options)
the main program function
.INDENT 7.0
.TP
.B Parameters
\fBoptions\fP (\fI\%argparse.Namespace\fP) \-\- parser options
.TP
.B Returns
output information
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class nxstools.nxsconfig.Show(parser)
Bases: \fBnxstools.nxsargparser.Runner\fP
.sp
Show runner
.sp
parser creator
.INDENT 7.0
.TP
.B Parameters
\fBparser\fP (\fBNXSFileInfoArgParser\fP) \-\- option parser
.UNINDENT
.INDENT 7.0
.TP
.B create()
creates parser
.UNINDENT
.INDENT 7.0
.TP
.B description = \(aqshow components (or datasources) with given names\(aq
(\fI\%str\fP) command description
.UNINDENT
.INDENT 7.0
.TP
.B epilog = \(aq examples:\en       nxsconfig show dcm\en\en\(aq
(\fI\%str\fP) command epilog
.UNINDENT
.INDENT 7.0
.TP
.B run(options)
the main program function
.INDENT 7.0
.TP
.B Parameters
\fBoptions\fP (\fI\%argparse.Namespace\fP) \-\- parser options
.TP
.B Returns
output information
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class nxstools.nxsconfig.Sources(parser)
Bases: \fBnxstools.nxsargparser.Runner\fP
.sp
Sources runner
.sp
parser creator
.INDENT 7.0
.TP
.B Parameters
\fBparser\fP (\fBNXSFileInfoArgParser\fP) \-\- option parser
.UNINDENT
.INDENT 7.0
.TP
.B create()
creates parser
.UNINDENT
.INDENT 7.0
.TP
.B description = \(aqget a list of component datasources\(aq
(\fI\%str\fP) command description
.UNINDENT
.INDENT 7.0
.TP
.B epilog = \(aq examples:\en       nxsconfig sources slit1\en\en\(aq
(\fI\%str\fP) command epilog
.UNINDENT
.INDENT 7.0
.TP
.B run(options)
the main program function
.INDENT 7.0
.TP
.B Parameters
\fBoptions\fP (\fI\%argparse.Namespace\fP) \-\- parser options
.TP
.B Returns
output information
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class nxstools.nxsconfig.Variables(parser)
Bases: \fBnxstools.nxsargparser.Runner\fP
.sp
Variables runner
.sp
parser creator
.INDENT 7.0
.TP
.B Parameters
\fBparser\fP (\fBNXSFileInfoArgParser\fP) \-\- option parser
.UNINDENT
.INDENT 7.0
.TP
.B create()
creates parser
.UNINDENT
.INDENT 7.0
.TP
.B description = \(aqget a list of component variables\(aq
(\fI\%str\fP) command description
.UNINDENT
.INDENT 7.0
.TP
.B epilog = \(aq examples:\en       nxsconfig variables dcm\en\en\(aq
(\fI\%str\fP) command epilog
.UNINDENT
.INDENT 7.0
.TP
.B run(options)
the main program function
.INDENT 7.0
.TP
.B Parameters
\fBoptions\fP (\fI\%argparse.Namespace\fP) \-\- parser options
.TP
.B Returns
output information
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.nxsconfig.main()
the main program function
.UNINDENT
.SS nxstools.nxscreate module
.sp
Command\-line tool for creating NXSConfigServer configuration of Nexus Files
.INDENT 0.0
.TP
.B class nxstools.nxscreate.ClientDS(parser)
Bases: \fBnxstools.nxsargparser.Runner\fP
.sp
clientds runner
.sp
parser creator
.INDENT 7.0
.TP
.B Parameters
\fBparser\fP (\fBNXSFileInfoArgParser\fP) \-\- option parser
.UNINDENT
.INDENT 7.0
.TP
.B create()
parser creator
.UNINDENT
.INDENT 7.0
.TP
.B description = \(aqcreate client datasources\(aq
(\fI\%str\fP) command description
.UNINDENT
.INDENT 7.0
.TP
.B epilog = "\en * with \-b: datasources are created in Configuration Server database\en * without \-b: datasources are created on the local filesystem in \-d <directory> \en * default: <directory> is \(aq.\(aq \en            <server> is taken from Tango DB\en examples:\en       nxscreate clientds starttime \-b  \en       nxscreate clientds title \-d /home/user/xmldir \en       nxscreate clientds \-v exp_c \-f1 \-l4 \-b  \en       nxscreate clientds \-v hasppXX:10000/expchan/vfcadc_exp/ \-f1 \-l8  \-m \-b \-s exp_vfc\en"
(\fI\%str\fP) command epilog
.UNINDENT
.INDENT 7.0
.TP
.B run(options)
the main program function
.INDENT 7.0
.TP
.B Parameters
\fBoptions\fP (\fI\%argparse.Namespace\fP) \-\- parser options
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class nxstools.nxscreate.Comp(parser)
Bases: \fBnxstools.nxsargparser.Runner\fP
.sp
comp runner
.sp
parser creator
.INDENT 7.0
.TP
.B Parameters
\fBparser\fP (\fBNXSFileInfoArgParser\fP) \-\- option parser
.UNINDENT
.INDENT 7.0
.TP
.B create()
creates parser
.UNINDENT
.INDENT 7.0
.TP
.B description = \(aqcreate simple components\(aq
(\fI\%str\fP) command description
.UNINDENT
.INDENT 7.0
.TP
.B epilog = " * with \-b: components are created (without datasources) in Configuration Server database\en * without \-b: components are created (without datasources) on the local filesystem in \-d <directory> \en * default: <directory> is \(aq.\(aq \en            <server> is taken from Tango DB\en            <strategy> is step\en            <type> is NX_FLOAT\en            <chunk> is SCALAR\en            <nexuspath> is \(aq/entry$var.serialno:NXentry/instrument/collection/\en examples:\en       nxscreate comp counter \en       nxscreate comp \-f1 \-l \-v exp_c01 \-b \en       nxscreate comp lambda \-d /home/user/xmldir/ \en       nxscreate comp \-n \(aq/entry$var.serialno:NXentry/instrument/sis3302:NXdetector/collection:NXcollection/\(aq \-v sis3302_1_roi \-f1 \-l4  \-g STEP \-t NX_FLOAT64 \-k \-b \-m \en       nxscreate comp \-n \(aq/entry$var.serialno:NXentry/instrument/eh1_mca01:NXdetector/data\(aq eh1_mca01 \-g STEP \-t NX_FLOAT64 \-i \-b \-c SPECTRUM\en\en"
(\fI\%str\fP) command epilog
.UNINDENT
.INDENT 7.0
.TP
.B run(options)
the main program function
.INDENT 7.0
.TP
.B Parameters
\fBoptions\fP (\fI\%argparse.Namespace\fP) \-\- parser options
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class nxstools.nxscreate.Compare(parser)
Bases: \fBnxstools.nxsargparser.Runner\fP
.sp
compare runner
.sp
parser creator
.INDENT 7.0
.TP
.B Parameters
\fBparser\fP (\fBNXSFileInfoArgParser\fP) \-\- option parser
.UNINDENT
.INDENT 7.0
.TP
.B create()
creates parser
.UNINDENT
.INDENT 7.0
.TP
.B description = \(aqcompare two online.xml files\(aq
(\fI\%str\fP) command description
.UNINDENT
.INDENT 7.0
.TP
.B epilog = " * default: second file <online_file> is \(aq/online_dir/online.xml\(aq \en            if only file is given\en\en examples:\en       nxscreate onlineds /online_dir/online.xml online.xml \en       nxscreate compare online.xml \en"
(\fI\%str\fP) command epilog
.UNINDENT
.INDENT 7.0
.TP
.B postauto()
creates parser
.UNINDENT
.INDENT 7.0
.TP
.B run(options)
the main program function
.INDENT 7.0
.TP
.B Parameters
\fBoptions\fP (\fI\%argparse.Namespace\fP) \-\- parser options
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class nxstools.nxscreate.DeviceDS(parser)
Bases: \fBnxstools.nxsargparser.Runner\fP
.sp
deviceds runner
.sp
parser creator
.INDENT 7.0
.TP
.B Parameters
\fBparser\fP (\fBNXSFileInfoArgParser\fP) \-\- option parser
.UNINDENT
.INDENT 7.0
.TP
.B create()
creates parser
.UNINDENT
.INDENT 7.0
.TP
.B description = \(aqcreate datasources for all device attributes\(aq
(\fI\%str\fP) command description
.UNINDENT
.INDENT 7.0
.TP
.B epilog = " * without <dv_attr1>: datasources for all attributes are created\en * with \-b: datasources are created in Configuration Server database\en * without \-b: datasources are created on the local filesystem in \-d <directory> \en * default: <directory> is \(aq.\(aq \en            <server> is taken from Tango DB\en            <datasource> is \(aqexp_mot\(aq \en            <host>, <port> are taken from <server>\en examples:\en       nxscreate deviceds  \-v p09/pilatus/haso228k \en       nxscreate deviceds  \-v p09/lambda2m/haso228k \-uhaslambda \-b \en       nxscreate deviceds  \-v p09/pilatus300k/haso228k \-b \-s pilatus300k_ RoI Energy ExposureTime\en"
(\fI\%str\fP) command epilog
.UNINDENT
.INDENT 7.0
.TP
.B run(options)
the main program function
.INDENT 7.0
.TP
.B Parameters
\fBoptions\fP (\fI\%argparse.Namespace\fP) \-\- parser options
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class nxstools.nxscreate.OnlineCP(parser)
Bases: \fBnxstools.nxsargparser.Runner\fP
.sp
onlinecp runner
.sp
parser creator
.INDENT 7.0
.TP
.B Parameters
\fBparser\fP (\fBNXSFileInfoArgParser\fP) \-\- option parser
.UNINDENT
.INDENT 7.0
.TP
.B create()
creates parser
.UNINDENT
.INDENT 7.0
.TP
.B description = \(aqcreate component from online.xml file\(aq
(\fI\%str\fP) command description
.UNINDENT
.INDENT 7.0
.TP
.B epilog = " * without \(aq\-c <component>\(aq: show a list of possible components\en * with \-b: datasources are created in Configuration Server database\en * without \-b: datasources are created on the local filesystem in \-d <directory> \en * default: <directory> is \(aq.\(aq \en * default: <inputFile> is \(aq/online_dir/online.xml\(aq \en            <server> is taken from Tango DB\en examples:\en       nxscreate onlinecp  \en       nxscreate onlinecp \-c pilatus \-b \en       nxscreate onlinecp \-c lambda \-d /home/user/xmldir/ \en\en"
(\fI\%str\fP) command epilog
.UNINDENT
.INDENT 7.0
.TP
.B postauto()
creates parser
.UNINDENT
.INDENT 7.0
.TP
.B run(options)
the main program function
.INDENT 7.0
.TP
.B Parameters
\fBoptions\fP (\fI\%argparse.Namespace\fP) \-\- parser options
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class nxstools.nxscreate.OnlineDS(parser)
Bases: \fBnxstools.nxsargparser.Runner\fP
.sp
onlineds runner
.sp
parser creator
.INDENT 7.0
.TP
.B Parameters
\fBparser\fP (\fBNXSFileInfoArgParser\fP) \-\- option parser
.UNINDENT
.INDENT 7.0
.TP
.B create()
creates parser
.UNINDENT
.INDENT 7.0
.TP
.B description = \(aqcreate datasources from online.xml file\(aq
(\fI\%str\fP) command description
.UNINDENT
.INDENT 7.0
.TP
.B epilog = " * with \-b: datasources are created in Configuration Server database\en * with \-d <directory>: datasources are created on the local filesystem\en * without \-b or \-d <directory>: run in the test mode\en * default: <inputFile> is \(aq/online_dir/online.xml\(aq \en            <server> is taken from Tango DB\en\en \(gaonlineds\(ga overwrites existing datasources\en\en examples:\en       nxscreate onlineds \-b  \en       nxscreate onlineds \-d /home/user/xmldir \en       nxscreate onlineds \en"
(\fI\%str\fP) command epilog
.UNINDENT
.INDENT 7.0
.TP
.B postauto()
creates parser
.UNINDENT
.INDENT 7.0
.TP
.B run(options)
the main program function
.INDENT 7.0
.TP
.B Parameters
\fBoptions\fP (\fI\%argparse.Namespace\fP) \-\- parser options
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.nxscreate.PYTANGO = True
(\fI\%bool\fP) True if PyTango available
.UNINDENT
.INDENT 0.0
.TP
.B class nxstools.nxscreate.StdComp(parser)
Bases: \fBnxstools.nxsargparser.Runner\fP
.sp
stdcomp runner
.sp
parser creator
.INDENT 7.0
.TP
.B Parameters
\fBparser\fP (\fBNXSFileInfoArgParser\fP) \-\- option parser
.UNINDENT
.INDENT 7.0
.TP
.B create()
creates parser
.UNINDENT
.INDENT 7.0
.TP
.B description = \(aqcreate component from the standard templates\(aq
(\fI\%str\fP) command description
.UNINDENT
.INDENT 7.0
.TP
.B epilog = " * without \(aq\-t <type>\(aq: show a list of possible component types\en * with \(aq\-t <type>  and without \-c <component>: show a list of component variables for the given component type\en * with \-b: datasources are created in Configuration Server database\en * without \-b: datasources are created on the local filesystem in \-d <directory> \en * default: <directory> is \(aq.\(aq \en * [name1 value1 [name2 value2] ...] sequence  defines component variable values \en examples:\en       nxscreate stdcomp  \en       nxscreate stdcomp \-t source \en       nxscreate stdcomp \-t default \-c default \-m \-b\en       nxscreate stdcomp \-t slit \-c front_slit1 \-b xgap slt1x ygap slt1y\en\en"
(\fI\%str\fP) command epilog
.UNINDENT
.INDENT 7.0
.TP
.B run(options)
the main program function
.INDENT 7.0
.TP
.B Parameters
\fBoptions\fP (\fI\%argparse.Namespace\fP) \-\- parser options
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class nxstools.nxscreate.TangoDS(parser)
Bases: \fBnxstools.nxsargparser.Runner\fP
.sp
tangods runner
.sp
parser creator
.INDENT 7.0
.TP
.B Parameters
\fBparser\fP (\fBNXSFileInfoArgParser\fP) \-\- option parser
.UNINDENT
.INDENT 7.0
.TP
.B create()
creates parser
.UNINDENT
.INDENT 7.0
.TP
.B description = \(aqcreate tango datasources\(aq
(\fI\%str\fP) command description
.UNINDENT
.INDENT 7.0
.TP
.B epilog = " * with \-b: datasources are created in Configuration Server database\en * without \-b: datasources are created on the local filesystem in \-d <directory> \en * default: <directory> is \(aq.\(aq \en            <server> is taken from Tango DB\en            <datasource> is \(aqexp_mot\(aq \en            <host>, <port> are taken from <server>\en examples:\en       nxscreate tangods \-f1 \-l2 \-v p09/motor/exp. \-s exp_mot \en       nxscreate tangods \-f1 \-l32 \-v p02/motor/eh1a. \-s exp_mot\-b \en       nxscreate tangods \-f1 \-l32 \-v p01/motor/oh1. \-s exp_mot \-b\en       nxscreate tangods \-v petra/globals/keyword \-s source_current \-u haso228 \-t 10000 \e\e \en                         \-a BeamCurrent \-b \-r p09/nxsconfigserver/haso228 \-o \-g __CLIENT__\en       nxscreate tangods \-f1 \-l8  \-v pXX/slt/exp. \-s slt_exp_ \-u hasppXX.desy.de \-b \en\en"
(\fI\%str\fP) command epilog
.UNINDENT
.INDENT 7.0
.TP
.B run(options)
the main program function
.INDENT 7.0
.TP
.B Parameters
\fBoptions\fP (\fI\%argparse.Namespace\fP) \-\- parser options
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.nxscreate.main()
the main program function
.UNINDENT
.SS nxstools.nxsdata module
.sp
Command\-line tool to ascess to Tango Data Server
.INDENT 0.0
.TP
.B class nxstools.nxsdata.CloseEntry(parser)
Bases: \fBnxstools.nxsargparser.Runner\fP
.sp
CloseEntry runner
.sp
parser creator
.INDENT 7.0
.TP
.B Parameters
\fBparser\fP (\fBNXSFileInfoArgParser\fP) \-\- option parser
.UNINDENT
.INDENT 7.0
.TP
.B create()
creates parser
.UNINDENT
.INDENT 7.0
.TP
.B description = \(aqclose the current entry\(aq
(\fI\%str\fP) command description
.UNINDENT
.INDENT 7.0
.TP
.B epilog = \(aq examples:\en       nxsdata closeentry \en\en\(aq
.UNINDENT
.INDENT 7.0
.TP
.B run(options)
the main program function
.INDENT 7.0
.TP
.B Parameters
\fBoptions\fP (\fI\%argparse.Namespace\fP) \-\- parser options
.TP
.B Returns
output information
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class nxstools.nxsdata.CloseFile(parser)
Bases: \fBnxstools.nxsargparser.Runner\fP
.sp
CloseFile runner
.sp
parser creator
.INDENT 7.0
.TP
.B Parameters
\fBparser\fP (\fBNXSFileInfoArgParser\fP) \-\- option parser
.UNINDENT
.INDENT 7.0
.TP
.B create()
creates parser
.UNINDENT
.INDENT 7.0
.TP
.B description = \(aqclose the current file\(aq
(\fI\%str\fP) command description
.UNINDENT
.INDENT 7.0
.TP
.B epilog = \(aq examples:\en       nxsdata closefile \en\en\(aq
.UNINDENT
.INDENT 7.0
.TP
.B run(options)
the main program function
.INDENT 7.0
.TP
.B Parameters
\fBoptions\fP (\fI\%argparse.Namespace\fP) \-\- parser options
.TP
.B Returns
output information
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class nxstools.nxsdata.NexusServer(device)
Bases: \fI\%object\fP
.sp
configuration server adapter
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
\fBdevice\fP (\fI\%str\fP) \-\- device name of configuration server
.UNINDENT
.INDENT 7.0
.TP
.B closeEntry()
closes the entry
.UNINDENT
.INDENT 7.0
.TP
.B closeFile()
closes the file
.UNINDENT
.INDENT 7.0
.TP
.B openEntry(xmlconfig)
opens an entry
.INDENT 7.0
.TP
.B Parameters
\fBxmlconfig\fP (\fI\%str\fP) \-\- xml configuration string
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B openFile(filename)
opens the h5 file
.INDENT 7.0
.TP
.B Parameters
\fBfilename\fP (\fI\%str\fP) \-\- h5 file name
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B record(jsondata)
records one step
.INDENT 7.0
.TP
.B Parameters
\fBjsondata\fP (\fI\%str\fP) \-\- step JSON data
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B setData(jsondata)
sets the global JSON data
.INDENT 7.0
.TP
.B Parameters
\fBjsondata\fP (\fI\%str\fP) \-\- global JSON data
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B tdwServer = None
(\fI\%PyTango.DeviceProxy\fP) NeXus writer device proxy
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class nxstools.nxsdata.OpenEntry(parser)
Bases: \fBnxstools.nxsargparser.Runner\fP
.sp
OpenEntry runner
.sp
parser creator
.INDENT 7.0
.TP
.B Parameters
\fBparser\fP (\fBNXSFileInfoArgParser\fP) \-\- option parser
.UNINDENT
.INDENT 7.0
.TP
.B create()
creates parser
.UNINDENT
.INDENT 7.0
.TP
.B description = \(aqcreate new entry\(aq
(\fI\%str\fP) command description
.UNINDENT
.INDENT 7.0
.TP
.B epilog = \(aq examples:\en       nxsdata openentry ... \en\en\(aq
.UNINDENT
.INDENT 7.0
.TP
.B run(options)
the main program function
.INDENT 7.0
.TP
.B Parameters
\fBoptions\fP (\fI\%argparse.Namespace\fP) \-\- parser options
.TP
.B Returns
output information
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class nxstools.nxsdata.OpenFile(parser)
Bases: \fBnxstools.nxsargparser.Runner\fP
.sp
OpenFile runner
.sp
parser creator
.INDENT 7.0
.TP
.B Parameters
\fBparser\fP (\fBNXSFileInfoArgParser\fP) \-\- option parser
.UNINDENT
.INDENT 7.0
.TP
.B create()
creates parser
.UNINDENT
.INDENT 7.0
.TP
.B description = \(aqopen a new H5 file\(aq
(\fI\%str\fP) command description
.UNINDENT
.INDENT 7.0
.TP
.B epilog = \(aq examples:\en       nxsdata openfile /tmp/watertest.nxs \en       nxsdata openfile \-s p02/tangodataserver/exp.01  /user/data/myfile.h5\en\en\(aq
.UNINDENT
.INDENT 7.0
.TP
.B postauto()
parser creator after autocomplete run
.UNINDENT
.INDENT 7.0
.TP
.B run(options)
the main program function
.INDENT 7.0
.TP
.B Parameters
\fBoptions\fP (\fI\%argparse.Namespace\fP) \-\- parser options
.TP
.B Returns
output information
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class nxstools.nxsdata.Record(parser)
Bases: \fBnxstools.nxsargparser.Runner\fP
.sp
Record runner
.sp
parser creator
.INDENT 7.0
.TP
.B Parameters
\fBparser\fP (\fBNXSFileInfoArgParser\fP) \-\- option parser
.UNINDENT
.INDENT 7.0
.TP
.B create()
creates parser
.UNINDENT
.INDENT 7.0
.TP
.B description = \(aqrecord one step with step JSON data\(aq
(\fI\%str\fP) command description
.UNINDENT
.INDENT 7.0
.TP
.B epilog = \(aq examples:\en       nxsdata record ... \en\en\(aq
.UNINDENT
.INDENT 7.0
.TP
.B run(options)
the main program function
.INDENT 7.0
.TP
.B Parameters
\fBoptions\fP (\fI\%argparse.Namespace\fP) \-\- parser options
.TP
.B Returns
output information
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class nxstools.nxsdata.Servers(parser)
Bases: \fBnxstools.nxsargparser.Runner\fP
.sp
Servers runner
.sp
parser creator
.INDENT 7.0
.TP
.B Parameters
\fBparser\fP (\fBNXSFileInfoArgParser\fP) \-\- option parser
.UNINDENT
.INDENT 7.0
.TP
.B create()
creates parser
.UNINDENT
.INDENT 7.0
.TP
.B description = \(aqget lists of tango data servers from the current tango host\(aq
(\fI\%str\fP) command description
.UNINDENT
.INDENT 7.0
.TP
.B epilog = \(aq examples:\en       nxsdata servers \en\en\(aq
.UNINDENT
.INDENT 7.0
.TP
.B run(options)
the main program function
.INDENT 7.0
.TP
.B Parameters
\fBoptions\fP (\fI\%argparse.Namespace\fP) \-\- parser options
.TP
.B Returns
output information
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class nxstools.nxsdata.SetData(parser)
Bases: \fBnxstools.nxsargparser.Runner\fP
.sp
SetData runner
.sp
parser creator
.INDENT 7.0
.TP
.B Parameters
\fBparser\fP (\fBNXSFileInfoArgParser\fP) \-\- option parser
.UNINDENT
.INDENT 7.0
.TP
.B create()
creates parser
.UNINDENT
.INDENT 7.0
.TP
.B description = \(aqassign global JSON data\(aq
(\fI\%str\fP) command description
.UNINDENT
.INDENT 7.0
.TP
.B epilog = \(aq examples:\en       nxsdata setdata ... \en\en\(aq
.UNINDENT
.INDENT 7.0
.TP
.B run(options)
the main program function
.INDENT 7.0
.TP
.B Parameters
\fBoptions\fP (\fI\%argparse.Namespace\fP) \-\- parser options
.TP
.B Returns
output information
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.nxsdata.main()
the main program function
.UNINDENT
.SS nxstools.nxsetup module
.sp
Set Up NeXus Tango Servers
.INDENT 0.0
.TP
.B class nxstools.nxsetup.AddRecorderPath(parser)
Bases: \fBnxstools.nxsargparser.Runner\fP
.sp
add\-recorder\-path runner
.sp
parser creator
.INDENT 7.0
.TP
.B Parameters
\fBparser\fP (\fBNXSFileInfoArgParser\fP) \-\- option parser
.UNINDENT
.INDENT 7.0
.TP
.B description = \(aqadd\-recorder\-path into MacroServer(s) property\(aq
(\fI\%str\fP) command description
.UNINDENT
.INDENT 7.0
.TP
.B epilog = \(aq examples:\en       nxsetup add\-recorder\-path /usr/share/pyshared/sardananxsrecorder\en\en\(aq
(\fI\%str\fP) command epilog
.UNINDENT
.INDENT 7.0
.TP
.B postauto()
creates parser
.UNINDENT
.INDENT 7.0
.TP
.B run(options)
the main program function
.INDENT 7.0
.TP
.B Parameters
\fBoptions\fP (\fI\%argparse.Namespace\fP) \-\- parser options
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class nxstools.nxsetup.ChangeProp(parser)
Bases: \fBnxstools.nxsargparser.Runner\fP
.sp
change\-prop runner
.sp
parser creator
.INDENT 7.0
.TP
.B Parameters
\fBparser\fP (\fBNXSFileInfoArgParser\fP) \-\- option parser
.UNINDENT
.INDENT 7.0
.TP
.B create()
creates parser
.UNINDENT
.INDENT 7.0
.TP
.B description = \(aqchange property value\(aq
(\fI\%str\fP) command description
.UNINDENT
.INDENT 7.0
.TP
.B epilog = \(aq examples:\en       nxsetup change\-prop \-n DefaultPreselectedComponents \-w "[\e\e"pinhole1\e\e",\e\e"slit2\e\e"]" NXSRecSelector/r228\en\en\(aq
(\fI\%str\fP) command epilog
.UNINDENT
.INDENT 7.0
.TP
.B run(options)
the main program function
.INDENT 7.0
.TP
.B Parameters
\fBoptions\fP (\fI\%argparse.Namespace\fP) \-\- parser options
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class nxstools.nxsetup.MoveProp(parser)
Bases: \fBnxstools.nxsargparser.Runner\fP
.sp
move\-prop runner
.sp
parser creator
.INDENT 7.0
.TP
.B Parameters
\fBparser\fP (\fBNXSFileInfoArgParser\fP) \-\- option parser
.UNINDENT
.INDENT 7.0
.TP
.B create()
creates parser
.UNINDENT
.INDENT 7.0
.TP
.B description = \(aqchange property name\(aq
(\fI\%str\fP) command description
.UNINDENT
.INDENT 7.0
.TP
.B epilog = \(aq examples:\en       nxsetup move\-prop \-n DefaultPreselectedComponents \-o DefaultAutomaticComponents NXSRecSelector\en\en\(aq
(\fI\%str\fP) command epilog
.UNINDENT
.INDENT 7.0
.TP
.B run(options)
the main program function
.INDENT 7.0
.TP
.B Parameters
\fBoptions\fP (\fI\%argparse.Namespace\fP) \-\- parser options
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class nxstools.nxsetup.Restart(parser)
Bases: \fBnxstools.nxsargparser.Runner\fP
.sp
restart runner
.sp
parser creator
.INDENT 7.0
.TP
.B Parameters
\fBparser\fP (\fBNXSFileInfoArgParser\fP) \-\- option parser
.UNINDENT
.INDENT 7.0
.TP
.B create()
creates parser
.UNINDENT
.INDENT 7.0
.TP
.B description = \(aqrestart tango server\(aq
(\fI\%str\fP) command description
.UNINDENT
.INDENT 7.0
.TP
.B epilog = \(aq examples:\en       nxsetup restart Pool/haso228 \-l 2\en\en\(aq
(\fI\%str\fP) command epilog
.UNINDENT
.INDENT 7.0
.TP
.B run(options)
the main program function
.INDENT 7.0
.TP
.B Parameters
\fBoptions\fP (\fI\%argparse.Namespace\fP) \-\- parser options
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class nxstools.nxsetup.Set(parser)
Bases: \fBnxstools.nxsargparser.Runner\fP
.sp
set runner
.sp
parser creator
.INDENT 7.0
.TP
.B Parameters
\fBparser\fP (\fBNXSFileInfoArgParser\fP) \-\- option parser
.UNINDENT
.INDENT 7.0
.TP
.B create()
creates parser
.UNINDENT
.INDENT 7.0
.TP
.B description = \(aqset up NXSConfigServer NXSDataWriter and NXSRecSelector servers\(aq
(\fI\%str\fP) command description
.UNINDENT
.INDENT 7.0
.TP
.B epilog = \(aq examples:\en       nxsetup set\en       nxsetup set \-b p09 \-m haso228 \-u p09user \-d nxsconfig NXSConfigServer\en\en\(aq
(\fI\%str\fP) command epilog
.UNINDENT
.INDENT 7.0
.TP
.B run(options)
the main program function
.INDENT 7.0
.TP
.B Parameters
\fBoptions\fP (\fI\%argparse.Namespace\fP) \-\- parser options
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class nxstools.nxsetup.SetUp
Bases: \fI\%object\fP
.sp
setup NXSDataWriter, NXSConfigServer and NXSRecSelector Tango servers
.sp
constructor
.INDENT 7.0
.TP
.B changePropertyName(server, oldname, newname, sclass=None)
changes property name
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBserver\fP (\fI\%str\fP) \-\- server name
.IP \(bu 2
\fBoldname\fP (\fI\%str\fP) \-\- old property name
.IP \(bu 2
\fBnewname\fP (\fI\%str\fP) \-\- new property name
.IP \(bu 2
\fBsclass\fP (\fI\%str\fP) \-\- server class name
.UNINDENT
.TP
.B Returns
True if property name was changed
.TP
.B Return type
\fI\%bool\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B changePropertyValue(server, newname, newvalue, sclass=None)
changes/sets property value
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBserver\fP (\fI\%str\fP) \-\- server name
.IP \(bu 2
\fBnewvalue\fP (\fI\%str\fP) \-\- new property value
.IP \(bu 2
\fBnewname\fP (\fI\%str\fP) \-\- new property name
.IP \(bu 2
\fBsclass\fP (\fI\%str\fP) \-\- server class name
.UNINDENT
.TP
.B Returns
True if property name was changed
.TP
.B Return type
\fI\%bool\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B changeRecorderPath(path)
adds a new recorder path
.INDENT 7.0
.TP
.B Parameters
\fBpath\fP (\fI\%str\fP) \-\- new recorder path
.TP
.B Returns
True if record path was added
.TP
.B Return type
\fI\%bool\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B createConfigServer(beamline, masterHost, jsonsettings=None)
creates configuration server
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBbeamline\fP (\fI\%str\fP) \-\- beamline name
.IP \(bu 2
\fBmasterHost\fP (\fI\%str\fP) \-\- master host of data writer
.IP \(bu 2
\fBjsonsettings\fP (\fI\%str\fP) \-\- connection settings to DB in json
.UNINDENT
.TP
.B Returns
True if server was created
.TP
.B Return type
\fI\%bool\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B createDataWriter(beamline, masterHost)
creates data writer
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBbeamline\fP (\fI\%str\fP) \-\- beamline name
.IP \(bu 2
\fBmasterHost\fP (\fI\%str\fP) \-\- master host of data writer
.UNINDENT
.TP
.B Returns
True if server was created
.TP
.B Return type
\fI\%bool\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B createSelector(beamline, masterHost, writer=None, cserver=None)
creates selector server
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBbeamline\fP (\fI\%str\fP) \-\- beamline name
.IP \(bu 2
\fBmasterHost\fP (\fI\%str\fP) \-\- master host of data writer
.IP \(bu 2
\fBwriter\fP (\fI\%str\fP) \-\- writer device name
.IP \(bu 2
\fBcserver\fP (\fI\%str\fP) \-\- configuration server device name
.UNINDENT
.TP
.B Returns
True if server was created
.TP
.B Return type
\fI\%bool\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B cserver_name = None
(\fI\%str\fP) NeXus config server device name
.UNINDENT
.INDENT 7.0
.TP
.B db = None
(\fI\%PyTango.Database\fP) tango database server
.UNINDENT
.INDENT 7.0
.TP
.B restartServer(name, host=None, level=None, restart=True)
restarts server
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBname\fP (\fI\%str\fP) \-\- server name
.IP \(bu 2
\fBhost\fP (\fI\%str\fP) \-\- server host name
.IP \(bu 2
\fBlevel\fP (\fI\%int\fP) \-\- start up level
.IP \(bu 2
\fBrestart\fP (\fI\%bool\fP) \-\- if server should be restarted
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B writer_name = None
(\fI\%str\fP) NeXus writer device name
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class nxstools.nxsetup.Start(parser)
Bases: \fBnxstools.nxsargparser.Runner\fP
.sp
start runner
.sp
parser creator
.INDENT 7.0
.TP
.B Parameters
\fBparser\fP (\fBNXSFileInfoArgParser\fP) \-\- option parser
.UNINDENT
.INDENT 7.0
.TP
.B create()
creates parser
.UNINDENT
.INDENT 7.0
.TP
.B description = \(aqstart tango server\(aq
(\fI\%str\fP) command description
.UNINDENT
.INDENT 7.0
.TP
.B epilog = \(aq examples:\en       nxsetup start Pool/haso228 \-l 2\en\en\(aq
(\fI\%str\fP) command epilog
.UNINDENT
.INDENT 7.0
.TP
.B run(options)
the main program function
.INDENT 7.0
.TP
.B Parameters
\fBoptions\fP (\fI\%argparse.Namespace\fP) \-\- parser options
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.nxsetup.knownHosts = {\(aqhzgpp07eh4\(aq: {\(aqmasterHost\(aq: \(aqhzgpp07eh4\(aq, \(aquser\(aq: \(aqp07user\(aq, \(aqdbname\(aq: \(aqnxsconfig\(aq, \(aqbeamline\(aq: \(aqp07\(aq}, \(aqhaspp06ctrl\(aq: {\(aqmasterHost\(aq: \(aqhaspp06ctrl\(aq, \(aquser\(aq: \(aqp06user\(aq, \(aqdbname\(aq: \(aqnxsconfig\(aq, \(aqbeamline\(aq: \(aqp06\(aq}, \(aqhaspecsicl4\(aq: {\(aqmasterHost\(aq: \(aqhaspecsicl4\(aq, \(aquser\(aq: \(aqlacluser\(aq, \(aqdbname\(aq: \(aqnxsconfig\(aq, \(aqbeamline\(aq: \(aqp02\(aq}, \(aqhaspp02ch2\(aq: {\(aqmasterHost\(aq: \(aqhaspp02ch2\(aq, \(aquser\(aq: \(aqp02user\(aq, \(aqdbname\(aq: \(aqnxsconfig\(aq, \(aqbeamline\(aq: \(aqp02\(aq}, \(aqhasep24\(aq: {\(aqmasterHost\(aq: \(aqhasep24\(aq, \(aquser\(aq: \(aqp24user\(aq, \(aqdbname\(aq: \(aqnxsconfig\(aq, \(aqbeamline\(aq: \(aqp24\(aq}, \(aqhaso107d1\(aq: {\(aqmasterHost\(aq: \(aqhaso107d1\(aq, \(aquser\(aq: \(aqkracht\(aq, \(aqdbname\(aq: \(aqnxsconfig\(aq, \(aqbeamline\(aq: \(aqp09\(aq}, \(aqhaspp11oh\(aq: {\(aqmasterHost\(aq: \(aqhaspp11oh\(aq, \(aquser\(aq: \(aqp11user\(aq, \(aqdbname\(aq: \(aqnxsconfig\(aq, \(aqbeamline\(aq: \(aqp11\(aq}, \(aqhasmlqj\(aq: {\(aqmasterHost\(aq: \(aqhasmlqj\(aq, \(aquser\(aq: \(aqlqjuser\(aq, \(aqdbname\(aq: \(aqnxsconfig\(aq, \(aqbeamline\(aq: \(aqlqj\(aq}, \(aqhaspp06nc1\(aq: {\(aqmasterHost\(aq: \(aqhaspp06nc1\(aq, \(aquser\(aq: \(aqp06user\(aq, \(aqdbname\(aq: \(aqnxsconfig\(aq, \(aqbeamline\(aq: \(aqp06\(aq}, \(aqhaspp03nano\(aq: {\(aqmasterHost\(aq: \(aqhaspp03nano\(aq, \(aquser\(aq: \(aqp03nano\(aq, \(aqdbname\(aq: \(aqnxsconfig\(aq, \(aqbeamline\(aq: \(aqp03nano\(aq}, \(aqhascmexp\(aq: {\(aqmasterHost\(aq: \(aqhascmexp\(aq, \(aquser\(aq: \(aqcmexp\(aq, \(aqdbname\(aq: \(aqnxsconfig\(aq, \(aqbeamline\(aq: \(aqcmexp\(aq}, \(aqhaspp02ch1a\(aq: {\(aqmasterHost\(aq: \(aqhaspp02ch1a\(aq, \(aquser\(aq: \(aqp02user\(aq, \(aqdbname\(aq: \(aqnxsconfig\(aq, \(aqbeamline\(aq: \(aqp02\(aq}, \(aqhaspp10e1\(aq: {\(aqmasterHost\(aq: \(aqhaspp10e1\(aq, \(aquser\(aq: \(aqp10user\(aq, \(aqdbname\(aq: \(aqnxsconfig\(aq, \(aqbeamline\(aq: \(aqp10\(aq}, \(aqhaso113b\(aq: {\(aqmasterHost\(aq: \(aqhaso113b\(aq, \(aquser\(aq: \(aqblume\(aq, \(aqdbname\(aq: \(aqnxsconfig\(aq, \(aqbeamline\(aq: \(aqp09\(aq}, \(aqhaspp10e2\(aq: {\(aqmasterHost\(aq: \(aqhaspp10e2\(aq, \(aquser\(aq: \(aqp10user\(aq, \(aqdbname\(aq: \(aqnxsconfig\(aq, \(aqbeamline\(aq: \(aqp10\(aq}, \(aqhaspp09dif\(aq: {\(aqmasterHost\(aq: \(aqhaspp09dif\(aq, \(aquser\(aq: \(aqp09user\(aq, \(aqdbname\(aq: \(aqnxsconfig\(aq, \(aqbeamline\(aq: \(aqp09\(aq}, \(aqhaso113u\(aq: {\(aqmasterHost\(aq: \(aqhaso113u\(aq, \(aquser\(aq: \(aqkracht\(aq, \(aqdbname\(aq: \(aqnxsconfig\(aq, \(aqbeamline\(aq: \(aqp09\(aq}, \(aqhaso228k\(aq: {\(aqmasterHost\(aq: \(aqhaso228k\(aq, \(aquser\(aq: \(aqjkotan\(aq, \(aqdbname\(aq: \(aqnxsconfig\(aq, \(aqbeamline\(aq: \(aqp09\(aq}, \(aqhaspp03\(aq: {\(aqmasterHost\(aq: \(aqhaspp03\(aq, \(aquser\(aq: \(aqp03user\(aq, \(aqdbname\(aq: \(aqnxsconfig\(aq, \(aqbeamline\(aq: \(aqp03\(aq}, \(aqhaspp10lcx\(aq: {\(aqmasterHost\(aq: \(aqhaspp10lcx\(aq, \(aquser\(aq: \(aqp10user\(aq, \(aqdbname\(aq: \(aqnxsconfig\(aq, \(aqbeamline\(aq: \(aqp10\(aq}, \(aqhaspp11user02\(aq: {\(aqmasterHost\(aq: \(aqhaspp11user02\(aq, \(aquser\(aq: \(aqp11user\(aq, \(aqdbname\(aq: \(aqnxsconfig\(aq, \(aqbeamline\(aq: \(aqp11\(aq}, \(aqhaspp02ch1\(aq: {\(aqmasterHost\(aq: \(aqhaspp02ch1\(aq, \(aquser\(aq: \(aqp02user\(aq, \(aqdbname\(aq: \(aqnxsconfig\(aq, \(aqbeamline\(aq: \(aqp02\(aq}, \(aqhaspp09haxps\(aq: {\(aqmasterHost\(aq: \(aqhaspp09maxps\(aq, \(aquser\(aq: \(aqp09haxps\(aq, \(aqdbname\(aq: \(aqnxsconfig\(aq, \(aqbeamline\(aq: \(aqp09\(aq}, \(aqhaspp04exp1\(aq: {\(aqmasterHost\(aq: \(aqhaspp04exp1\(aq, \(aquser\(aq: \(aqp04user\(aq, \(aqdbname\(aq: \(aqnxsconfig\(aq, \(aqbeamline\(aq: \(aqp04\(aq}, \(aqhaspp04exp2\(aq: {\(aqmasterHost\(aq: \(aqhaspp04exp2\(aq, \(aquser\(aq: \(aqp04user\(aq, \(aqdbname\(aq: \(aqnxsconfig\(aq, \(aqbeamline\(aq: \(aqp04\(aq}, \(aqhaso107klx\(aq: {\(aqmasterHost\(aq: \(aqhaso107klx\(aq, \(aquser\(aq: \(aqkracht\(aq, \(aqdbname\(aq: \(aqnxsconfig\(aq, \(aqbeamline\(aq: \(aqp09\(aq}, \(aqhasp029rack\(aq: {\(aqmasterHost\(aq: \(aqhasp029rack\(aq, \(aquser\(aq: \(aqp06user\(aq, \(aqdbname\(aq: \(aqnxsconfig\(aq, \(aqbeamline\(aq: \(aqp06\(aq}, \(aqhasnp64oh\(aq: {\(aqmasterHost\(aq: \(aqhasnp64oh\(aq, \(aquser\(aq: \(aqp64user\(aq, \(aqdbname\(aq: \(aqnxsconfig\(aq, \(aqbeamline\(aq: \(aqp64\(aq}, \(aqhaspp09\(aq: {\(aqmasterHost\(aq: \(aqhaspp09\(aq, \(aquser\(aq: \(aqp09user\(aq, \(aqdbname\(aq: \(aqnxsconfig\(aq, \(aqbeamline\(aq: \(aqp09\(aq}, \(aqhaspp08\(aq: {\(aqmasterHost\(aq: \(aqhaspp08\(aq, \(aquser\(aq: \(aqp08user\(aq, \(aqdbname\(aq: \(aqnxsconfig\(aq, \(aqbeamline\(aq: \(aqp08\(aq}, \(aqhaso111tb\(aq: {\(aqmasterHost\(aq: \(aqhaso111tb\(aq, \(aquser\(aq: \(aqtnunez\(aq, \(aqdbname\(aq: \(aqnxsconfig\(aq, \(aqbeamline\(aq: \(aqp09\(aq}, \(aqhaspp09mag\(aq: {\(aqmasterHost\(aq: \(aqhaspp09mag\(aq, \(aquser\(aq: \(aqp09user\(aq, \(aqdbname\(aq: \(aqnxsconfig\(aq, \(aqbeamline\(aq: \(aqp09\(aq}, \(aqhasnp66\(aq: {\(aqmasterHost\(aq: \(aqhasnp66\(aq, \(aquser\(aq: \(aqp66user\(aq, \(aqdbname\(aq: \(aqnxsconfig\(aq, \(aqbeamline\(aq: \(aqp66\(aq}, \(aqhasnp65\(aq: {\(aqmasterHost\(aq: \(aqhasnp65\(aq, \(aquser\(aq: \(aqp65user\(aq, \(aqdbname\(aq: \(aqnxsconfig\(aq, \(aqbeamline\(aq: \(aqp65\(aq}, \(aqhasnp64\(aq: {\(aqmasterHost\(aq: \(aqhasnp64\(aq, \(aquser\(aq: \(aqp64user\(aq, \(aqdbname\(aq: \(aqnxsconfig\(aq, \(aqbeamline\(aq: \(aqp64\(aq}, \(aqhaspp11sardana\(aq: {\(aqmasterHost\(aq: \(aqhaspp11sardana\(aq, \(aquser\(aq: \(aqp11user\(aq, \(aqdbname\(aq: \(aqnxsconfig\(aq, \(aqbeamline\(aq: \(aqp11\(aq}, \(aqhzgpp07eh1\(aq: {\(aqmasterHost\(aq: \(aqhzgpp07eh1\(aq, \(aquser\(aq: \(aqp07user\(aq, \(aqdbname\(aq: \(aqnxsconfig\(aq, \(aqbeamline\(aq: \(aqp07\(aq}, \(aqhaspp10lab\(aq: {\(aqmasterHost\(aq: \(aqhaspp10lab\(aq, \(aquser\(aq: \(aqp10user\(aq, \(aqdbname\(aq: \(aqnxsconfig\(aq, \(aqbeamline\(aq: \(aqp10\(aq}, \(aqhastodt\(aq: {\(aqmasterHost\(aq: \(aqhastodt\(aq, \(aquser\(aq: \(aqkracht\(aq, \(aqdbname\(aq: \(aqnxsconfig\(aq, \(aqbeamline\(aq: \(aqp09\(aq}, \(aqhzgpp07eh3\(aq: {\(aqmasterHost\(aq: \(aqhzgpp07eh3\(aq, \(aquser\(aq: \(aqp07user\(aq, \(aqdbname\(aq: \(aqnxsconfig\(aq, \(aqbeamline\(aq: \(aqp07\(aq}, \(aqhaso111n\(aq: {\(aqmasterHost\(aq: \(aqhaso111n\(aq, \(aquser\(aq: \(aqtnunez\(aq, \(aqdbname\(aq: \(aqnxsconfig\(aq, \(aqbeamline\(aq: \(aqp09\(aq}, \(aqhaspp07eh2\(aq: {\(aqmasterHost\(aq: \(aqhaspp07eh2\(aq, \(aquser\(aq: \(aqp07user\(aq, \(aqdbname\(aq: \(aqnxsconfig\(aq, \(aqbeamline\(aq: \(aqp07\(aq}, \(aqhaspp21lab\(aq: {\(aqmasterHost\(aq: \(aqhaspp21lab\(aq, \(aquser\(aq: \(aqp21user\(aq, \(aqdbname\(aq: \(aqnxsconfig\(aq, \(aqbeamline\(aq: \(aqp21\(aq}, \(aqhas6117b\(aq: {\(aqmasterHost\(aq: \(aqhas6117b\(aq, \(aquser\(aq: \(aqp02user\(aq, \(aqdbname\(aq: \(aqnxsconfig\(aq, \(aqbeamline\(aq: \(aqp02\(aq}, \(aqhasep211eh\(aq: {\(aqmasterHost\(aq: \(aqhasep211eh\(aq, \(aquser\(aq: \(aqp211user\(aq, \(aqdbname\(aq: \(aqnxsconfig\(aq, \(aqbeamline\(aq: \(aqp211\(aq}, \(aqhasmfmc\(aq: {\(aqmasterHost\(aq: \(aqhasmfmc\(aq, \(aquser\(aq: \(aqdelayusr\(aq, \(aqdbname\(aq: \(aqnxsconfig\(aq, \(aqbeamline\(aq: \(aqfmc\(aq}, \(aqhasdelay\(aq: {\(aqmasterHost\(aq: \(aqhasdelay\(aq, \(aquser\(aq: \(aqdelayusr\(aq, \(aqdbname\(aq: \(aqnxsconfig\(aq, \(aqbeamline\(aq: \(aqdelay\(aq}, \(aqhaspp06mc01\(aq: {\(aqmasterHost\(aq: \(aqhaspp06mc01\(aq, \(aquser\(aq: \(aqp06user\(aq, \(aqdbname\(aq: \(aqnxsconfig\(aq, \(aqbeamline\(aq: \(aqp06\(aq}, \(aqhaspp01eh1\(aq: {\(aqmasterHost\(aq: \(aqhaspp01eh1\(aq, \(aquser\(aq: \(aqp01user\(aq, \(aqdbname\(aq: \(aqnxsconfig\(aq, \(aqbeamline\(aq: \(aqp01\(aq}, \(aqhaspp01eh2\(aq: {\(aqmasterHost\(aq: \(aqhaspp01eh2\(aq, \(aquser\(aq: \(aqp01user\(aq, \(aqdbname\(aq: \(aqnxsconfig\(aq, \(aqbeamline\(aq: \(aqp01\(aq}, \(aqhaspp01eh3\(aq: {\(aqmasterHost\(aq: \(aqhaspp01eh3\(aq, \(aquser\(aq: \(aqp01user\(aq, \(aqdbname\(aq: \(aqnxsconfig\(aq, \(aqbeamline\(aq: \(aqp01\(aq}}
.INDENT 7.0
.TP
.B (\fI\%dict\fP <\fI\%dict\fP <\fI\%str\fP , \fI\%str\fP > > )
all SardanaHosts and DataBaseHosts should be known
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.nxsetup.main()
the main program function
.UNINDENT
.SS nxstools.nxscreator module
.sp
Command\-line tool for creating to the nexdatas configuration server
.INDENT 0.0
.TP
.B class nxstools.nxscreator.CPCreator(options, args, printouts=True)
Bases: \fBnxstools.nxscreator.Creator\fP
.sp
component creator of all online.xml complex devices
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBoptions\fP (\fBoptparse.Values\fP) \-\- command options
.IP \(bu 2
\fBargs\fP (\fI\%list\fP <\fI\%str\fP >) \-\- command arguments
.IP \(bu 2
\fBprintouts\fP (\fI\%bool\fP) \-\- if printout is enable
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B components = None
(\fI\%dict\fP <\fI\%str\fP, \fI\%str\fP >) component xml dictionary
.UNINDENT
.INDENT 7.0
.TP
.B create()
creates components of all online.xml complex devices
.UNINDENT
.INDENT 7.0
.TP
.B createXMLs()
creates component xmls of all online.xml complex devices
abstract method
.UNINDENT
.INDENT 7.0
.TP
.B datasources = None
(\fI\%dict\fP <\fI\%str\fP, \fI\%str\fP >) datasource xml dictionary
.UNINDENT
.INDENT 7.0
.TP
.B xmlpackage = None
(\fI\%str\fP) xml template component package
.UNINDENT
.INDENT 7.0
.TP
.B xmltemplatepath = None
(\fI\%str\fP) xml template component package path
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B exception nxstools.nxscreator.CPExistsException
Bases: \fI\%exceptions.Exception\fP
.sp
Component already exists exception
.UNINDENT
.INDENT 0.0
.TP
.B class nxstools.nxscreator.ClientDSCreator(options, args, printouts=True)
Bases: \fBnxstools.nxscreator.Creator\fP
.sp
client datasource creator
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBoptions\fP (\fBoptparse.Values\fP) \-\- command options
.IP \(bu 2
\fBargs\fP (\fI\%list\fP < \fI\%str\fP >) \-\- command arguments
.IP \(bu 2
\fBprintouts\fP (\fI\%bool\fP) \-\- if printout is enable
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B create()
creates a client datasource xml and stores it in DB or filesytem
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class nxstools.nxscreator.CompareOnlineDS(options, args, printouts=True)
Bases: \fI\%object\fP
.sp
comparing tool for online.xml files
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBoptions\fP (\fBoptparse.Values\fP) \-\- command options
.IP \(bu 2
\fBargs\fP (\fI\%list\fP < \fI\%str\fP >) \-\- command arguments
.IP \(bu 2
\fBprintouts\fP (\fI\%bool\fP) \-\- if printout is enable
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B args = None
(\fI\%list\fP < \fI\%str\fP >) creator arguments
.UNINDENT
.INDENT 7.0
.TP
.B compare()
.UNINDENT
.INDENT 7.0
.TP
.B options = None
(\fBoptparse.Values\fP) creator options
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class nxstools.nxscreator.ComponentCreator(options, args, printouts=True)
Bases: \fBnxstools.nxscreator.Creator\fP
.sp
component creator
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBoptions\fP (\fBoptparse.Values\fP) \-\- command options
.IP \(bu 2
\fBargs\fP (\fI\%list\fP < \fI\%str\fP >) \-\- command arguments
.IP \(bu 2
\fBprintouts\fP (\fI\%bool\fP) \-\- if printout is enable
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B create()
creates a component xml and stores it in DB or filesytem
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class nxstools.nxscreator.Creator(options, args, printouts=True)
Bases: \fI\%object\fP
.sp
configuration server adapter
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBoptions\fP (\fBoptparse.Values\fP) \-\- command options
.IP \(bu 2
\fBargs\fP (\fI\%list\fP < \fI\%str\fP >) \-\- command arguments
.IP \(bu 2
\fBprintouts\fP (\fI\%bool\fP) \-\- if printout is enable
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B args = None
(\fI\%list\fP < \fI\%str\fP >) creator arguments
.UNINDENT
.INDENT 7.0
.TP
.B options = None
(\fBoptparse.Values\fP) creator options
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B exception nxstools.nxscreator.DSExistsException
Bases: \fI\%exceptions.Exception\fP
.sp
DataSource already exists exception
.UNINDENT
.INDENT 0.0
.TP
.B class nxstools.nxscreator.Device
Bases: \fI\%object\fP
.sp
device from online.xml
.INDENT 7.0
.TP
.B attribute
(\fI\%str\fP) attribute name
.UNINDENT
.INDENT 7.0
.TP
.B compare(dv)
.UNINDENT
.INDENT 7.0
.TP
.B dtype
(\fI\%str\fP) device type
.UNINDENT
.INDENT 7.0
.TP
.B findAttribute(tangohost)
sets attribute and datasource group of online.xml device
.INDENT 7.0
.TP
.B Parameters
\fBtangohost\fP (\fI\%str\fP) \-\- tango host
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B findDevice(tangohost)
sets sardana device name and sardana host/port of online.xml device
.INDENT 7.0
.TP
.B Parameters
\fBtangohost\fP (\fI\%str\fP) \-\- tango host
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B group
(\fI\%str\fP) datasource tango group
.UNINDENT
.INDENT 7.0
.TP
.B host
(\fI\%str\fP) host without port
.UNINDENT
.INDENT 7.0
.TP
.B hostname
(\fI\%str\fP) host name with port
.UNINDENT
.INDENT 7.0
.TP
.B module
(\fI\%str\fP) device module
.UNINDENT
.INDENT 7.0
.TP
.B name
(\fI\%str\fP) device name
.UNINDENT
.INDENT 7.0
.TP
.B port
(\fI\%str\fP) tango port
.UNINDENT
.INDENT 7.0
.TP
.B sardanahostname
(\fI\%str\fP) sardana host name
.UNINDENT
.INDENT 7.0
.TP
.B sardananame
(\fI\%str\fP) sardana name with port
.UNINDENT
.INDENT 7.0
.TP
.B sdevice
(\fI\%str\fP) sardana device name
.UNINDENT
.INDENT 7.0
.TP
.B setSardanaName(tolower)
sets sardana name
.INDENT 7.0
.TP
.B Parameters
\fBtolower\fP (\fI\%bool\fP) \-\- If True name in lowercase
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B shost
(\fI\%str\fP) sardana host without port
.UNINDENT
.INDENT 7.0
.TP
.B splitHostPort()
spilts host name from port
.UNINDENT
.INDENT 7.0
.TP
.B sport
(\fI\%str\fP) sardana tango port
.UNINDENT
.INDENT 7.0
.TP
.B tdevice
(\fI\%str\fP) tango device name
.UNINDENT
.INDENT 7.0
.TP
.B tolower()
converts \fIname\fP, \fImodule\fP, \fItdevice\fP, \fIhostname\fP into lower case
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class nxstools.nxscreator.DeviceDSCreator(options, args, printouts=True)
Bases: \fBnxstools.nxscreator.Creator\fP
.sp
device datasource creator
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBoptions\fP (\fBoptparse.Values\fP) \-\- command options
.IP \(bu 2
\fBargs\fP (\fI\%list\fP < \fI\%str\fP >) \-\- command arguments
.IP \(bu 2
\fBprintouts\fP (\fI\%bool\fP) \-\- if printout is enable
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B create()
creates a tango datasources xml of given device
and stores it in DB or filesytem
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class nxstools.nxscreator.OnlineCPCreator(options, args, printouts=True)
Bases: \fBnxstools.nxscreator.CPCreator\fP
.sp
component creator of online components
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBoptions\fP (\fBoptparse.Values\fP) \-\- command options
.IP \(bu 2
\fBargs\fP (\fI\%list\fP < \fI\%str\fP >) \-\- command arguments
.IP \(bu 2
\fBprintouts\fP (\fI\%bool\fP) \-\- if printout is enable
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B createXMLs()
creates component xmls of all online.xml complex devices
.UNINDENT
.INDENT 7.0
.TP
.B listcomponents()
provides a list of components with xml templates
.INDENT 7.0
.TP
.B Returns
list of components with xml templates
.TP
.B Return type
\fI\%list\fP <\fI\%str\fP >
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class nxstools.nxscreator.OnlineDSCreator(options, args, printouts=True)
Bases: \fBnxstools.nxscreator.Creator\fP
.sp
datasource creator of all online.xml simple devices
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBoptions\fP (\fBoptparse.Values\fP) \-\- command options
.IP \(bu 2
\fBargs\fP (\fI\%list\fP <\fI\%str\fP >) \-\- command arguments
.IP \(bu 2
\fBprintouts\fP (\fI\%bool\fP) \-\- if printout is enable
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B create()
creates datasources of all online.xml simple devices
.UNINDENT
.INDENT 7.0
.TP
.B createXMLs()
creates datasource xmls of all online.xml simple devices
.UNINDENT
.INDENT 7.0
.TP
.B datasources = None
(\fI\%dict\fP <\fI\%str\fP, \fI\%str\fP >) datasource xml dictionary
.UNINDENT
.INDENT 7.0
.TP
.B xmlpackage = None
(\fI\%str\fP) xml template component package
.UNINDENT
.INDENT 7.0
.TP
.B xmltemplatepath = None
(\fI\%str\fP) xml template component package path
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.nxscreator.PYTANGO = True
(\fI\%bool\fP) True if PyTango available
.UNINDENT
.INDENT 0.0
.TP
.B class nxstools.nxscreator.StandardCPCreator(options, args, printouts=True)
Bases: \fBnxstools.nxscreator.CPCreator\fP
.sp
component creator of standard templates
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBoptions\fP (\fBoptparse.Values\fP) \-\- command options
.IP \(bu 2
\fBargs\fP (\fI\%list\fP < \fI\%str\fP >) \-\- command arguments
.IP \(bu 2
\fBprintouts\fP (\fI\%bool\fP) \-\- if printout is enable
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B createXMLs()
creates component xmls of all online.xml complex devices
.UNINDENT
.INDENT 7.0
.TP
.B listcomponenttypes()
provides a list of standard component types
.INDENT 7.0
.TP
.B Returns
list of standard component types
.TP
.B Return type
\fI\%list\fP <\fI\%str\fP>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B listcomponentvariables()
provides a list of standard component types
.INDENT 7.0
.TP
.B Returns
list of standard component types
.TP
.B Return type
\fI\%list\fP <\fI\%str\fP>
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class nxstools.nxscreator.TangoDSCreator(options, args, printouts=True)
Bases: \fBnxstools.nxscreator.Creator\fP
.sp
tango datasource creator
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBoptions\fP (\fBoptparse.Values\fP) \-\- command options
.IP \(bu 2
\fBargs\fP (\fI\%list\fP < \fI\%str\fP >) \-\- command arguments
.IP \(bu 2
\fBprintouts\fP (\fI\%bool\fP) \-\- if printout is enable
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B create()
creates a tango datasource xml and stores it in DB or filesytem
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B exception nxstools.nxscreator.WrongParameterError
Bases: \fI\%exceptions.Exception\fP
.sp
wrong parameter exception
.UNINDENT
.SS nxstools.nxsfileinfo module
.sp
Command\-line tool for showing meta data from Nexus Files
.INDENT 0.0
.TP
.B class nxstools.nxsfileinfo.Field(parser)
Bases: \fBnxstools.nxsargparser.Runner\fP
.sp
Field runner
.sp
parser creator
.INDENT 7.0
.TP
.B Parameters
\fBparser\fP (\fBNXSFileInfoArgParser\fP) \-\- option parser
.UNINDENT
.INDENT 7.0
.TP
.B create()
creates parser
.UNINDENT
.INDENT 7.0
.TP
.B description = \(aqshow field information for the nexus file\(aq
(\fI\%str\fP) command description
.UNINDENT
.INDENT 7.0
.TP
.B epilog = \(aq examples:\en       nxsfileinfo field /user/data/myfile.nxs\en       nxsfileinfo field /user/data/myfile.nxs \-g\en       nxsfileinfo field /user/data/myfile.nxs \-s\en\en\(aq
(\fI\%str\fP) command epilog
.UNINDENT
.INDENT 7.0
.TP
.B postauto()
parser creator after autocomplete run
.UNINDENT
.INDENT 7.0
.TP
.B run(options)
the main program function
.INDENT 7.0
.TP
.B Parameters
\fBoptions\fP (\fI\%argparse.Namespace\fP) \-\- parser options
.TP
.B Returns
output information
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B show(root, options)
the main function
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBoptions\fP (\fI\%argparse.Namespace\fP) \-\- parser options
.IP \(bu 2
\fBroot\fP (class:\fIpni.io.nx.h5.nxroot\fP) \-\- nexus file root
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class nxstools.nxsfileinfo.General(parser)
Bases: \fBnxstools.nxsargparser.Runner\fP
.sp
General runner
.sp
parser creator
.INDENT 7.0
.TP
.B Parameters
\fBparser\fP (\fBNXSFileInfoArgParser\fP) \-\- option parser
.UNINDENT
.INDENT 7.0
.TP
.B description = \(aqshow general information for the nexus file\(aq
(\fI\%str\fP) command description
.UNINDENT
.INDENT 7.0
.TP
.B epilog = \(aq examples:\en       nxsfileinfo general /user/data/myfile.nxs\en\en\(aq
(\fI\%str\fP) command epilog
.UNINDENT
.INDENT 7.0
.TP
.B classmethod parseentry(entry, description, keyvalue)
parse entry of nexus file
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBentry\fP (\fBpni.io.nx.h5.nxgroup\fP) \-\- nexus entry node
.IP \(bu 2
\fBdescription\fP (\fI\%list\fP <\fI\%dict\fP <\fI\%str\fP, \fIany\fP > >) \-\- dict description list
.IP \(bu 2
\fBkeyvalue\fP ([\fI\%str\fP, \fI\%str\fP]) \-\- (key, value) name pair of table headers
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B postauto()
parser creator after autocomplete run
.UNINDENT
.INDENT 7.0
.TP
.B run(options)
the main program function
.INDENT 7.0
.TP
.B Parameters
\fBoptions\fP (\fI\%argparse.Namespace\fP) \-\- parser options
.TP
.B Returns
output information
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B show(root)
show general informations
.INDENT 7.0
.TP
.B Parameters
\fBroot\fP (class:\fIpni.io.nx.h5.nxroot\fP) \-\- nexus file root
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.nxsfileinfo.PNIIO = True
(\fI\%bool\fP) True if pni.io.nx.h5 available
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.nxsfileinfo.main()
the main program function
.UNINDENT
.SS nxstools.nxsfileparser module
.sp
NeXus main metadata viewer
.INDENT 0.0
.TP
.B class nxstools.nxsfileparser.NXSFileParser(root)
Bases: \fI\%object\fP
.sp
Metadata parser for NeXus files
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
\fBroot\fP (\fBpni.io.nx.h5.nxroot\fP) \-\- nexus root node
.UNINDENT
.INDENT 7.0
.TP
.B attrdesc = None
(<\fI\%dict\fP <\fI\%str\fP, 
.UNINDENT
.INDENT 7.0
.TP
.B description = None
(\fI\%list\fP <\fI\%dict\fP <\fI\%str\fP, \fIany\fP> >) 
.UNINDENT
.INDENT 7.0
.TP
.B filters = None
(\fBlist\(ga< :obj:\(gastr\fP>)  filters for \fIfull_path\fP names
.UNINDENT
.INDENT 7.0
.TP
.B classmethod getpath(path)
converts full_path with NX_classes into nexus_path
.INDENT 7.0
.TP
.B Parameters
\fBpath\fP (\fI\%str\fP) \-\- nexus full_path
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B parse()
parses the file and creates the filtered description list
.UNINDENT
.INDENT 7.0
.TP
.B valuestostore = None
(\fBlist\(ga< :obj:\(gastr\fP>)  field names which value should be stored
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.nxsfileparser.getdsname(xmlstring)
provides datasource name from datasource xml string
.INDENT 7.0
.TP
.B Parameters
\fBxmlstring\fP (\fI\%str\fP) \-\- datasource xml string
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.nxsfileparser.getdssource(xmlstring)
provides source from datasource xml string
.INDENT 7.0
.TP
.B Parameters
\fBxmlstring\fP (\fI\%str\fP) \-\- datasource xml string
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.nxsfileparser.getdstype(xmlstring)
provides datasource type from datasource xml string
.INDENT 7.0
.TP
.B Parameters
\fBxmlstring\fP (\fI\%str\fP) \-\- datasource xml string
.UNINDENT
.UNINDENT
.SS nxstools.nxsargparser module
.sp
NeXus tool argumen parser
.INDENT 0.0
.TP
.B exception nxstools.nxsargparser.ErrorException
Bases: \fI\%exceptions.Exception\fP
.sp
error parser exception
.UNINDENT
.INDENT 0.0
.TP
.B class nxstools.nxsargparser.NXSArgParser(**kwargs)
Bases: \fI\%argparse.ArgumentParser\fP
.sp
Argument parser with error exception
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
\fBkwargs\fP \-\- \fI\%argparse.ArgumentParser\fP
parameter dictionary
.UNINDENT
.INDENT 7.0
.TP
.B cmdrunners = None
(\fI\%dict\fP <\fI\%str\fP, \fBRunner\fP>) 
.UNINDENT
.INDENT 7.0
.TP
.B createSubParsers()
creates command\-line parameters parser
.INDENT 7.0
.TP
.B Returns
command runner
.TP
.B Return type
\fBRunner\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B error(message)
error handler
.INDENT 7.0
.TP
.B Parameters
\fBmessage\fP (\fI\%str\fP) \-\- error message
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class nxstools.nxsargparser.Runner(parser)
Bases: \fI\%object\fP
.sp
abstract runner
.sp
parser creator
.INDENT 7.0
.TP
.B Parameters
\fBparser\fP (\fBNXSFileInfoArgParser\fP) \-\- option parser
.UNINDENT
.INDENT 7.0
.TP
.B create()
parser creator
.UNINDENT
.INDENT 7.0
.TP
.B description = \(aqabstract runner\(aq
(\fI\%str\fP) command description
.UNINDENT
.INDENT 7.0
.TP
.B epilog = None
(\fI\%str\fP) command epilog
.UNINDENT
.INDENT 7.0
.TP
.B postauto()
parser creator after autocomplete run
.UNINDENT
.INDENT 7.0
.TP
.B run(options)
run commandthe main program function
.INDENT 7.0
.TP
.B Parameters
\fBoptions\fP (\fI\%argparse.Namespace\fP) \-\- parser options
.UNINDENT
.UNINDENT
.UNINDENT
.SS nxstools.nxsparser module
.sp
Command\-line tool for ascess to the nexdatas configuration server
.INDENT 0.0
.TP
.B class nxstools.nxsparser.ParserTools
Bases: \fI\%object\fP
.sp
configuration server adapter
.INDENT 7.0
.TP
.B classmethod getRecord(node)
fetches record name or query from datasource node
.INDENT 7.0
.TP
.B Parameters
\fBnode\fP (\fBxml.dom.minidom.Node\fP) \-\- datasource node
.TP
.B Returns
record name or query
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B classmethod mergeDefinitions(xmls)
.INDENT 7.0
.TP
.B merges the xmls list of definitions xml strings
to one output xml string
.UNINDENT
.INDENT 7.0
.TP
.B Parameters
\fBxmls\fP (\fI\%list\fP <\fI\%str\fP>) \-\- a list of xml string with definitions
.TP
.B Returns
one output xml string
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B classmethod parseDataSources(xmlc)
provides datasources and its records from xml string
.INDENT 7.0
.TP
.B Parameters
\fBxmlc\fP (\fI\%str\fP) \-\- xml string
.TP
.B Returns
list of datasource descriptions
.TP
.B Return type
\fI\%list\fP <\fI\%dict\fP <\fI\%str\fP, \fI\%str\fP>>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B classmethod parseFields(xmlc)
provides datasources and its records from xml string
.INDENT 7.0
.TP
.B Parameters
\fBxmlc\fP (\fI\%str\fP) \-\- xml string
.TP
.B Returns
list of datasource descriptions
.TP
.B Return type
\fI\%list\fP < \fI\%dict\fP <\fI\%str\fP, \fIany\fP> >
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B classmethod parseLinks(xmlc)
provides datasources and its records from xml string
.INDENT 7.0
.TP
.B Parameters
\fBxmlc\fP (\fI\%str\fP) \-\- xml string
.TP
.B Returns
list of datasource descriptions
.TP
.B Return type
\fI\%list\fP < \fI\%dict\fP <\fI\%str\fP, \fIany\fP> >
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B classmethod parseRecord(xmlc)
provides source record from xml string
.INDENT 7.0
.TP
.B Parameters
\fBxmlc\fP (\fI\%str\fP) \-\- xml string
.TP
.B Returns
source record
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class nxstools.nxsparser.TableTools(description, nonone=None)
Bases: \fI\%object\fP
.sp
configuration server adapter
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBdescription\fP (\fI\%list\fP <\fI\%str\fP>) \-\- description list
.IP \(bu 2
\fBnonone\fP (\fI\%list\fP <\fI\%str\fP>) \-\- list of parameters which have to exist to be shown
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B generateList()
generate row lists of table
.INDENT 7.0
.TP
.B Returns
table rows
.TP
.B Return type
\fI\%list\fP <\fI\%str\fP>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B headers = None
(\fI\%list\fP <\fI\%str\fP>) table headers
.UNINDENT
.INDENT 7.0
.TP
.B title = None
(\fI\%str\fP) table title
.UNINDENT
.UNINDENT
.SS nxstools.nxsxml module
.sp
Creator of XML configuration files
.INDENT 0.0
.TP
.B class nxstools.nxsxml.NAttr(parent, nameAttr, typeAttr=\(aq\(aq)
Bases: \fBnxstools.nxsxml.NTag\fP
.sp
Attribute tag wrapper
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBparent\fP (\fBNTag\fP) \-\- parent tag element
.IP \(bu 2
\fBnameAttr\fP (\fI\%str\fP) \-\- name attribute
.IP \(bu 2
\fBtypeAttr\fP (\fI\%str\fP) \-\- type attribute
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B setStrategy(mode=\(aqSTEP\(aq, trigger=None, value=None)
sets the attribute strategy
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBmode\fP (\fI\%str\fP) \-\- mode data writing, i.e. INIT, STEP, FINAL, POSTRUN
.IP \(bu 2
\fBtrigger\fP (\fI\%str\fP) \-\- for asynchronous writting,
e.g. with different subentries
.IP \(bu 2
\fBvalue\fP (\fI\%str\fP) \-\- label for postrun mode
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class nxstools.nxsxml.NDSource(parent)
Bases: \fBnxstools.nxsxml.NTag\fP
.sp
Source tag wrapper
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
\fBparent\fP (\fBNTag\fP) \-\- parent tag element
.UNINDENT
.INDENT 7.0
.TP
.B addDoc(doc)
adds doc tag content
.INDENT 7.0
.TP
.B Parameters
\fBdoc\fP (\fI\%str\fP) \-\- doc tag content
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B initClient(name, recordName)
sets paramters for Client data
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBname\fP (\fI\%str\fP) \-\- name of datasource
.IP \(bu 2
\fBrecordName\fP (\fI\%str\fP) \-\- name of the data object
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B initDBase(name, dbtype, query, dbname=None, rank=None, mycnf=None, user=None, passwd=None, dsn=None, mode=None, host=None, port=None)
sets parameters of DataBase
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBname\fP (\fI\%str\fP) \-\- name of datasource
.IP \(bu 2
\fBdbname\fP (\fI\%str\fP) \-\- name of used DataBase
.IP \(bu 2
\fBquery\fP (\fI\%str\fP) \-\- database query
.IP \(bu 2
\fBdbtype\fP (\fI\%str\fP) \-\- type of the database, i.e. MYSQL, PGSQL, ORACLE
.IP \(bu 2
\fBrank\fP (\fI\%str\fP) \-\- rank of the query output, i.e. SCALAR, SPECTRUM, IMAGE
.IP \(bu 2
\fBmycnf\fP (\fI\%str\fP) \-\- MYSQL config file
.IP \(bu 2
\fBuser\fP (\fI\%str\fP) \-\- database user name
.IP \(bu 2
\fBpasswd\fP (\fI\%str\fP) \-\- database user password
.IP \(bu 2
\fBdsn\fP (\fI\%str\fP) \-\- DSN string to initialize ORACLE and PGSQL databases
.IP \(bu 2
\fBmode\fP (\fI\%str\fP) \-\- mode for ORACLE databases, i.e. SYSDBA or SYSOPER
.IP \(bu 2
\fBhost\fP (\fI\%str\fP) \-\- name of the host
.IP \(bu 2
\fBport\fP (\fI\%str\fP) \-\- port number
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B initTango(name, device, memberType, recordName, host=None, port=None, encoding=None, group=None)
sets paramters for Tango device
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBname\fP (\fI\%str\fP) \-\- name of datasource
.IP \(bu 2
\fBdevice\fP (\fI\%str\fP) \-\- device name
.IP \(bu 2
\fBmemberType\fP (\fI\%str\fP) \-\- type of the data object, i.e. attribute,
property, command
.IP \(bu 2
\fBrecordName\fP (\fI\%str\fP) \-\- name of the data object
.IP \(bu 2
\fBhost\fP (\fI\%str\fP) \-\- host name
.IP \(bu 2
\fBport\fP (\fI\%str\fP) \-\- port
.IP \(bu 2
\fBencoding\fP (\fI\%str\fP) \-\- encoding of DevEncoded data
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class nxstools.nxsxml.NDeviceGroup(parent, deviceName, nameAttr, typeAttr=\(aq\(aq, commands=True, blackAttrs=None)
Bases: \fBnxstools.nxsxml.NGroup\fP
.sp
Tango device tag creator
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBparent\fP (\fBNTag\fP) \-\- parent tag element
.IP \(bu 2
\fBdeviceName\fP (\fI\%str\fP) \-\- tango device name
.IP \(bu 2
\fBnameAttr\fP (\fI\%str\fP) \-\- name attribute
.IP \(bu 2
\fBtypeAttr\fP (\fI\%str\fP) \-\- type attribute
.IP \(bu 2
\fBcommands\fP (\fI\%bool\fP) \-\- if we call the commands
.IP \(bu 2
\fBblackAttrs\fP (\fI\%list\fP <\fI\%str\fP>) \-\- list of excluded attributes
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B nTypes = [\(aqNX_CHAR\(aq, \(aqNX_BOOLEAN\(aq, \(aqNX_INT32\(aq, \(aqNX_INT32\(aq, \(aqNX_FLOAT32\(aq, \(aqNX_FLOAT64\(aq, \(aqNX_UINT32\(aq, \(aqNX_UINT32\(aq, \(aqNX_CHAR\(aq, \(aqNX_CHAR\(aq, \(aqNX_INT32\(aq, \(aqNX_INT32\(aq, \(aqNX_FLOAT32\(aq, \(aqNX_FLOAT64\(aq, \(aqNX_UINT32\(aq, \(aqNX_UINT32\(aq, \(aqNX_CHAR\(aq, \(aqNX_CHAR\(aq, \(aqNX_CHAR\(aq, \(aqNX_CHAR\(aq, \(aqNX_CHAR\(aq, \(aqNX_BOOLEAN\(aq, \(aqNX_CHAR\(aq, \(aqNX_INT64\(aq, \(aqNX_UINT64\(aq, \(aqNX_INT64\(aq, \(aqNX_UINT64\(aq, \(aqNX_INT32\(aq, \(aqNX_CHAR\(aq]
(\fI\%list\fP <\fI\%str\fP>) NeXuS types corresponding to the Tango types
.UNINDENT
.INDENT 7.0
.TP
.B tTypes = [\(aqDevVoid\(aq, \(aqDevBoolean\(aq, \(aqDevShort\(aq, \(aqDevLong\(aq, \(aqDevFloat\(aq, \(aqDevDouble\(aq, \(aqDevUShort\(aq, \(aqDevULong\(aq, \(aqDevString\(aq, \(aqDevVarCharArray\(aq, \(aqDevVarShortArray\(aq, \(aqDevVarLongArray\(aq, \(aqDevVarFloatArray\(aq, \(aqDevVarDoubleArray\(aq, \(aqDevVarUShortArray\(aq, \(aqDevVarULongArray\(aq, \(aqDevVarStringArray\(aq, \(aqDevVarLongStringArray\(aq, \(aqDevVarDoubleStringArray\(aq, \(aqDevState\(aq, \(aqConstDevString\(aq, \(aqDevVarBooleanArray\(aq, \(aqDevUChar\(aq, \(aqDevLong64\(aq, \(aqDevULong64\(aq, \(aqDevVarLong64Array\(aq, \(aqDevVarULong64Array\(aq, \(aqDevInt\(aq, \(aqDevEncoded\(aq]
(\fI\%list\fP < \fI\%str\fP>) Tango types
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class nxstools.nxsxml.NDim(parent, indexAttr, valueAttr)
Bases: \fBnxstools.nxsxml.NTag\fP
.sp
Dim tag wrapper
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBparent\fP (\fBNTag\fP) \-\- parent tag element
.IP \(bu 2
\fBindexAttr\fP (\fI\%str\fP) \-\- index attribute
.IP \(bu 2
\fBvalueAttr\fP (\fI\%str\fP) \-\- value attribute
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class nxstools.nxsxml.NDimensions(parent, rankAttr)
Bases: \fBnxstools.nxsxml.NTag\fP
.sp
Dimensions tag wrapper
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBparent\fP (\fBNTag\fP) \-\- parent tag element
.IP \(bu 2
\fBrankAttr\fP (\fI\%str\fP) \-\- rank attribute
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B dim(indexAttr, valueAttr)
adds dim tag
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBindexAttr\fP (\fI\%str\fP) \-\- index attribute
.IP \(bu 2
\fBvalueAttr\fP (\fI\%str\fP) \-\- value attribute
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B dims = None
.INDENT 7.0
.TP
.B (\fI\%dict\fP <\fI\%str\fP, \fBNDim\fP>)
container with dim tag wrapper
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class nxstools.nxsxml.NField(parent, nameAttr, typeAttr=\(aq\(aq)
Bases: \fBnxstools.nxsxml.NTag\fP
.sp
Field tag wrapper
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBparent\fP (\fBNTag\fP) \-\- parent tag element
.IP \(bu 2
\fBnameAttr\fP (\fI\%str\fP) \-\- name attribute
.IP \(bu 2
\fBtypeAttr\fP (\fI\%str\fP) \-\- type attribute
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B addAttr(attrName, attrType, attrValue=\(aq\(aq)
adds attribute tag
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBattrName\fP (\fI\%str\fP) \-\- name attribute
.IP \(bu 2
\fBattrType\fP (\fI\%str\fP) \-\- type attribute
.IP \(bu 2
\fBattrValue\fP (\fI\%str\fP) \-\- content of the attribute tag
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B addDoc(doc)
adds doc tag content
.INDENT 7.0
.TP
.B Parameters
\fBdoc\fP (\fI\%str\fP) \-\- doc tag content
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B setStrategy(mode=\(aqSTEP\(aq, trigger=None, value=None, grows=None, compression=False, rate=None, shuffle=None)
sets the field strategy
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBmode\fP (\fI\%str\fP) \-\- mode data writing, i.e. INIT, STEP, FINAL, POSTRUN
.IP \(bu 2
\fBtrigger\fP (\fI\%str\fP) \-\- for asynchronous writting,
e.g. with different subentries
.IP \(bu 2
\fBvalue\fP (\fI\%str\fP) \-\- label for postrun mode
.IP \(bu 2
\fBgrows\fP (\fI\%str\fP) \-\- growing dimension
.IP \(bu 2
\fBcompression\fP (\fI\%str\fP) \-\- flag if compression shuold be applied
.IP \(bu 2
\fBrate\fP (\fI\%str\fP) \-\- compression rate
.IP \(bu 2
\fBshuffle\fP (\fI\%str\fP) \-\- flag if compression shuffle
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B setUnits(unitsAttr)
sets the field unit
.INDENT 7.0
.TP
.B Parameters
\fBunitsAttr\fP (\fI\%str\fP) \-\- the field unit
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class nxstools.nxsxml.NGroup(parent, nameAttr, typeAttr=\(aq\(aq)
Bases: \fBnxstools.nxsxml.NTag\fP
.sp
Group tag wrapper
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBparent\fP (\fBNTag\fP) \-\- parent tag element
.IP \(bu 2
\fBnameAttr\fP (\fI\%str\fP) \-\- name attribute
.IP \(bu 2
\fBtypeAttr\fP (\fI\%str\fP) \-\- type attribute
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B addAttr(attrName, attrType, attrValue=\(aq\(aq)
adds attribute: tag
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBattrName\fP (\fI\%str\fP) \-\- name attribute
.IP \(bu 2
\fBattrType\fP (\fI\%str\fP) \-\- type attribute
.IP \(bu 2
\fBattrValue\fP (\fI\%str\fP) \-\- content of the attribute tag
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B addDoc(doc)
adds doc tag content
.INDENT 7.0
.TP
.B Parameters
\fBdoc\fP (\fI\%str\fP) \-\- doc tag content
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class nxstools.nxsxml.NLink(parent, nameAttr, gTarget)
Bases: \fBnxstools.nxsxml.NTag\fP
.sp
Link tag wrapper
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBparent\fP (\fBNTag\fP) \-\- parent tag element
.IP \(bu 2
\fBnameAttr\fP (\fI\%str\fP) \-\- name attribute
.IP \(bu 2
\fBgTarget\fP (\fI\%str\fP) \-\- target attribute
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B addDoc(doc)
adds doc tag content
.INDENT 7.0
.TP
.B Parameters
\fBdoc\fP (\fI\%str\fP) \-\- doc tag content
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class nxstools.nxsxml.NTag(parent, tagName, nameAttr=\(aq\(aq, typeAttr=\(aq\(aq)
Bases: \fI\%object\fP
.sp
tag wrapper
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBparent\fP (\fBNTag\fP) \-\- parent tag element
.IP \(bu 2
\fBtagName\fP (\fI\%str\fP) \-\- tag name
.IP \(bu 2
\fBnameAttr\fP (\fI\%str\fP) \-\- value of name attribute
.IP \(bu 2
\fBtypeAttr\fP (\fI\%str\fP) \-\- value of type attribute
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B addTagAttr(name, value)
adds tag attribute
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBname\fP (\fI\%str\fP) \-\- attribute name
.IP \(bu 2
\fBvalue\fP (\fI\%str\fP) \-\- attribute value
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B addText(text)
adds tag content
.INDENT 7.0
.TP
.B Parameters
\fBtext\fP (\fI\%str\fP) \-\- tag content
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B elem = None
(\fBxml.dom.minidom.Element\fP) tag element from minidom
.UNINDENT
.INDENT 7.0
.TP
.B root = None
(\fBxml.dom.minidom.Node\fP) XML minidom root
.UNINDENT
.INDENT 7.0
.TP
.B setText(text)
sets tag content
.INDENT 7.0
.TP
.B Parameters
\fBtext\fP (\fI\%str\fP) \-\- tag content
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class nxstools.nxsxml.XMLFile(fname)
Bases: \fI\%object\fP
.sp
XML file object
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
\fBfname\fP (\fI\%str\fP) \-\- XML file name
.UNINDENT
.INDENT 7.0
.TP
.B dump()
dumps XML structure into the XML file
.INDENT 7.0
.TP
.B Brief
It opens XML file, calls prettyPrint and closes the XML file
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B elem = None
(\fBxml.dom.minidom.Element\fP) XML definition element
.UNINDENT
.INDENT 7.0
.TP
.B fname = None
(\fI\%str\fP) XML file name
.UNINDENT
.INDENT 7.0
.TP
.B prettyPrint(etNode=None)
prints pretty XML making use of minidom
.INDENT 7.0
.TP
.B Parameters
\fBetNode\fP (\fBxml.dom.minidom\fP) \-\- node
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B root = None
(\fBxml.dom.minidom.Document\fP) XML root instance
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.nxsxml.main()
the main function
.UNINDENT
.SS nxstools.nxsdevicetools module
.sp
NDTS TANGO device tools
.INDENT 0.0
.TP
.B nxstools.nxsdevicetools.PYTANGO = True
(\fI\%bool\fP) True if PyTango available
.UNINDENT
.INDENT 0.0
.TP
.B class nxstools.nxsdevicetools.PackageHandler(packagename=\(aqnxstools.xmltemplates\(aq)
Bases: \fI\%object\fP
.sp
xml templates package loader
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
\fBpackagename\fP (\fI\%str\fP) \-\- full package name
.UNINDENT
.INDENT 7.0
.TP
.B loadXMLTemplates(packagename)
load xml template module variables
.INDENT 7.0
.TP
.B Parameters
\fBpackagename\fP (\fI\%str\fP) \-\- full package name
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.nxsdevicetools.checkServer(name=\(aqNXSConfigServer\(aq)
provides server device name if only one or error in the other case
.INDENT 7.0
.TP
.B Parameters
\fBname\fP (\fI\%str\fP) \-\- server name
.TP
.B Returns
server device name or empty string if error appears
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.nxsdevicetools.ctModules = [\(aqmca8715roi\(aq, \(aqonedroi\(aq, \(aqsis3820\(aq, \(aqsis3302roi\(aq, \(aqxmcd\(aq, \(aqvfcadc\(aq, \(aqmythenroi\(aq, \(aqmhzdaqp01\(aq, \(aqdgg2\(aq, \(aqtangoattributectctrl\(aq]
(\fI\%list\fP <\fI\%str\fP>) counter/timer modules
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.nxsdevicetools.findClassName(server, name)
finds class name
.INDENT 7.0
.TP
.B Parameters
\fBname\fP (\fI\%str\fP) \-\- device name
.TP
.B Returns
class name
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.nxsdevicetools.generateDeviceNames(prefix, first, last, minimal=False)
generates device names
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBprefix\fP (\fI\%str\fP) \-\- device name prefix
.IP \(bu 2
\fBfirst\fP (\fI\%int\fP) \-\- first device index
.IP \(bu 2
\fBlast\fP (\fI\%int\fP) \-\- last device index
.UNINDENT
.TP
.B Returns
device names
.TP
.B Return type
\fI\%list\fP <\fI\%str\fP>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.nxsdevicetools.getAttributes(device, host=None, port=10000)
provides a list of device attributes
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBdevice\fP (\fI\%str\fP) \-\- tango device name
.IP \(bu 2
\fBhost\fP (\fI\%str\fP) \-\- device host
.IP \(bu 2
\fBport\fP (\fI\%int\fP) \-\- device port
.UNINDENT
.TP
.B Returns
list of device attributes
.TP
.B Return type
\fI\%list\fP <\fI\%str\fP>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.nxsdevicetools.getClassName(devicename)
provides device class name
.INDENT 7.0
.TP
.B Parameters
\fBdevicename\fP (\fI\%str\fP) \-\- device name
.TP
.B Returns
class name
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.nxsdevicetools.getDataSourceComponents(server)
gets datasource components
.INDENT 7.0
.TP
.B Parameters
\fBserver\fP (\fI\%str\fP) \-\- configuration server
.TP
.B Returns
dictionary with datasource components
.TP
.B Return type
\fI\%dict\fP <\fI\%str\fP, \fI\%list\fP <\fI\%str\fP>>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.nxsdevicetools.getServerTangoHost(server)
fetches the server tango_host:tango_port
.INDENT 7.0
.TP
.B Parameters
\fBserver\fP (\fI\%str\fP) \-\- tango server
.TP
.B Returns
tango host
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.nxsdevicetools.getServers(name=\(aqNXSConfigServer\(aq)
provides server device names
.INDENT 7.0
.TP
.B Parameters
\fBname\fP (\fI\%str\fP) \-\- server instance name
.TP
.B Returns
list of the server device names
.TP
.B Return type
\fI\%list\fP <\fI\%str\fP>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.nxsdevicetools.ioRegModules = [\(aqsis3610\(aq]
(\fI\%list\fP <\fI\%str\fP>) IO register modules
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.nxsdevicetools.listServers(server, name=\(aqNXSConfigServer\(aq)
finds server names
.INDENT 7.0
.TP
.B Parameters
\fBname\fP (\fI\%str\fP) \-\- server instance name
.TP
.B Returns
server list
.TP
.B Return type
\fI\%list\fP <\fI\%str\fP>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.nxsdevicetools.moduleAttributes = {\(aqtip551\(aq: [\(aqValue\(aq, \(aqVoltage\(aq], \(aqe6c\(aq: [\(aqPosition\(aq, \(aqPosition\(aq], \(aqpie710\(aq: [\(aqPosition\(aq, \(aqPosition\(aq], \(aqvfcadc\(aq: [\(aqValue\(aq, \(aqCounts\(aq], \(aqpie712\(aq: [\(aqPosition\(aq, \(aqPosition\(aq], \(aqsis3820\(aq: [\(aqValue\(aq, \(aqCounts\(aq], \(aqmca_sis3302new\(aq: [\(aqValue\(aq, \(aqData\(aq], \(aqsis3302roi\(aq: [\(aqValue\(aq, None], \(aqspk\(aq: [\(aqPosition\(aq, \(aqPosition\(aq], \(aqmca_sis3302\(aq: [\(aqValue\(aq, \(aqData\(aq], \(aqabsbox\(aq: [\(aqPosition\(aq, \(aqPosition\(aq], \(aqmca_8701\(aq: [\(aqValue\(aq, \(aqData\(aq], \(aqsmchydra\(aq: [\(aqPosition\(aq, \(aqPosition\(aq], \(aqxmcd\(aq: [\(aqValue\(aq, None], \(aqoms58\(aq: [\(aqPosition\(aq, \(aqPosition\(aq], \(aqonedroi\(aq: [\(aqValue\(aq, None], \(aqmca8715roi\(aq: [\(aqValue\(aq, None], \(aqmotor_tango\(aq: [\(aqPosition\(aq, \(aqPosition\(aq], \(aqcounter_tango\(aq: [\(aqValue\(aq, \(aqCounts\(aq], \(aqdgg2\(aq: [\(aqValue\(aq, \(aqSampleTime\(aq], \(aqomsmaxv\(aq: [\(aqPosition\(aq, \(aqPosition\(aq], \(aqtangoattributectctrl\(aq: [\(aqValue\(aq, None], \(aqe6c_p09_eh2\(aq: [\(aqPosition\(aq, \(aqPosition\(aq], \(aqmca_xia\(aq: [\(aqValue\(aq, None], \(aqmythenroi\(aq: [\(aqValue\(aq, None], \(aqlom\(aq: [\(aqPosition\(aq, \(aqPosition\(aq], \(aqtip830\(aq: [\(aqValue\(aq, \(aqCounts\(aq], \(aqmhzdaqp01\(aq: [\(aqValue\(aq, None], \(aqkohzu\(aq: [\(aqPosition\(aq, \(aqPosition\(aq], \(aqsis3610\(aq: [\(aqValue\(aq, \(aqValue\(aq]}
attributes of device modules to acquire with elements:
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.nxsdevicetools.moduleMultiAttributes = {\(aqmythen2\(aq: [\(aqCounts1\(aq, \(aqCounts2\(aq, \(aqCountsMax\(aq, \(aqCountsTotal\(aq, \(aqExposureTime\(aq, \(aqFileDir\(aq, \(aqFileIndex\(aq, \(aqFilePrefix\(aq, \(aqData\(aq, \(aqEnergy\(aq, \(aqNbFrames\(aq, \(aqRoI1End\(aq, \(aqRoI2End\(aq, \(aqRoI1Start\(aq, \(aqRoI2Start\(aq, \(aqThreshold\(aq], \(aqperkinelmer\(aq: [\(aqBinningMode\(aq, \(aqFileIndex\(aq, \(aqExposureTime\(aq, \(aqSkippedAtStart\(aq, \(aqSummedSaveImages\(aq, \(aqSkippedBetweenSaved\(aq, \(aqFilesAfterTrigger\(aq, \(aqFilesBeforeTrigger\(aq, \(aqSummedDarkImages\(aq, \(aqOutputDirectory\(aq, \(aqFilePattern\(aq, \(aqFileName\(aq, \(aqLogFile\(aq, \(aqUserComment1\(aq, \(aqCameraGain\(aq, \(aqUserComment2\(aq, \(aqUserComment3\(aq, \(aqUserComment4\(aq, \(aqSaveRawImages\(aq, \(aqSaveDarkImages\(aq, \(aqPerformIntegration\(aq, \(aqSaveIntegratedData\(aq, \(aqSaveSubtracted\(aq, \(aqPerformDarkSubtraction\(aq], \(aqpilatus2m\(aq: [\(aqDelayTime\(aq, \(aqExposurePeriod\(aq, \(aqExposureTime\(aq, \(aqFileDir\(aq, \(aqFilePostfix\(aq, \(aqFilePrefix\(aq, \(aqFileStartNum\(aq, \(aqLastImageTaken\(aq, \(aqNbExposures\(aq, \(aqNbFrames\(aq], \(aqpilatus1m\(aq: [\(aqDelayTime\(aq, \(aqExposurePeriod\(aq, \(aqExposureTime\(aq, \(aqFileDir\(aq, \(aqFilePostfix\(aq, \(aqFilePrefix\(aq, \(aqFileStartNum\(aq, \(aqLastImageTaken\(aq, \(aqNbExposures\(aq, \(aqNbFrames\(aq], \(aqpco4000\(aq: [\(aqDelayTime\(aq, \(aqExposureTime\(aq, \(aqNbFrames\(aq, \(aqTriggerMode\(aq, \(aqFileDir\(aq, \(aqFilePostfix\(aq, \(aqFilePrefix\(aq, \(aqFileStartNum\(aq, \(aqBinning_x\(aq, \(aqBinning_y\(aq, \(aqROI_x_min\(aq, \(aqROI_x_max\(aq, \(aqROI_y_min\(aq, \(aqROI_y_max\(aq, \(aqPixelrate\(aq, \(aqADCs\(aq, \(aqCoolingTemp\(aq, \(aqCoolingTempSet\(aq, \(aqImageTimeStamp\(aq, \(aqRecorderMode\(aq], \(aqmythen\(aq: [\(aqCounts1\(aq, \(aqCounts2\(aq, \(aqCountsMax\(aq, \(aqCountsTotal\(aq, \(aqExposureTime\(aq, \(aqFileDir\(aq, \(aqFileIndex\(aq, \(aqFilePrefix\(aq, \(aqData\(aq, \(aqRoI1\(aq, \(aqRoI2\(aq], \(aqlambda2m\(aq: [\(aqTriggerMode\(aq, \(aqShutterTime\(aq, \(aqDelayTime\(aq, \(aqFrameNumbers\(aq, \(aqThreadNo\(aq, \(aqEnergyThreshold\(aq, \(aqOperatingMode\(aq, \(aqConfigFilePath\(aq, \(aqSaveAllImages\(aq, \(aqFilePrefix\(aq, \(aqFileStartNum\(aq, \(aqFilePreExt\(aq, \(aqFilePostfix\(aq, \(aqSaveFilePath\(aq, \(aqSaveFileName\(aq, \(aqLatestImageNumber\(aq, \(aqLiveMode\(aq, \(aqTotalLossFrames\(aq, \(aqCompressorShuffle\(aq, \(aqCompressionRate\(aq, \(aqCompressionEnabled\(aq, \(aqLayout\(aq, \(aqShutterTimeMax\(aq, \(aqShutterTimeMin\(aq, \(aqWidth\(aq, \(aqHeight\(aq, \(aqDepth\(aq, \(aqLiveFrameNo\(aq, \(aqDistortionCorrection\(aq, \(aqLiveLastImageData\(aq], \(aqmca_xia\(aq: [], \(aqpilatus300k\(aq: [\(aqDelayTime\(aq, \(aqExposurePeriod\(aq, \(aqExposureTime\(aq, \(aqFileDir\(aq, \(aqFilePostfix\(aq, \(aqFilePrefix\(aq, \(aqFileStartNum\(aq, \(aqLastImageTaken\(aq, \(aqNbExposures\(aq, \(aqNbFrames\(aq], \(aqeigerdectris\(aq: [\(aqTriggerMode\(aq, \(aqNbTriggers\(aq, \(aqDescription\(aq, \(aqNbImages\(aq, \(aqBitDepth\(aq, \(aqReadoutTime\(aq, \(aqCountTime\(aq, \(aqEnergyThreshold\(aq, \(aqFrameTime\(aq, \(aqRateCorrectionEnabled\(aq, \(aqFlatFieldEnabled\(aq, \(aqTemperature\(aq, \(aqAutoSummationEnabled\(aq, \(aqHumidity\(aq, \(aqPhotonEnergy\(aq, \(aqWavelength\(aq], \(aqsamplehkl\(aq: [\(aqsamplehkl.xml\(aq], \(aqperkinelmerdetector\(aq: [\(aqBinningMode\(aq, \(aqFileIndex\(aq, \(aqExposureTime\(aq, \(aqSkippedAtStart\(aq, \(aqSummedSaveImages\(aq, \(aqSkippedBetweenSaved\(aq, \(aqFilesAfterTrigger\(aq, \(aqFilesBeforeTrigger\(aq, \(aqSummedDarkImages\(aq, \(aqOutputDirectory\(aq, \(aqFilePattern\(aq, \(aqFileName\(aq, \(aqLogFile\(aq, \(aqUserComment1\(aq, \(aqCameraGain\(aq, \(aqUserComment2\(aq, \(aqUserComment3\(aq, \(aqUserComment4\(aq, \(aqSaveRawImages\(aq, \(aqSaveDarkImages\(aq, \(aqPerformIntegration\(aq, \(aqSaveIntegratedData\(aq, \(aqSaveSubtracted\(aq, \(aqPerformDarkSubtraction\(aq], \(aqmca_xia@pool\(aq: [\(aqCountsRoI\(aq, \(aqRoIEnd\(aq, \(aqRoIStart\(aq, \(aqValue\(aq], \(aqpco\(aq: [\(aqDelayTime\(aq, \(aqExposureTime\(aq, \(aqNbFrames\(aq, \(aqTriggerMode\(aq, \(aqFileDir\(aq, \(aqFilePostfix\(aq, \(aqFilePrefix\(aq, \(aqFileStartNum\(aq, \(aqBinning_x\(aq, \(aqBinning_y\(aq, \(aqROI_x_min\(aq, \(aqROI_x_max\(aq, \(aqROI_y_min\(aq, \(aqROI_y_max\(aq, \(aqPixelrate\(aq, \(aqADCs\(aq, \(aqCoolingTemp\(aq, \(aqCoolingTempSet\(aq, \(aqImageTimeStamp\(aq, \(aqRecorderMode\(aq], \(aqpilatus\(aq: [\(aqDelayTime\(aq, \(aqExposurePeriod\(aq, \(aqExposureTime\(aq, \(aqFileDir\(aq, \(aqFilePostfix\(aq, \(aqFilePrefix\(aq, \(aqFileStartNum\(aq, \(aqLastImageTaken\(aq, \(aqNbExposures\(aq, \(aqNbFrames\(aq], \(aqpilatus6m\(aq: [\(aqDelayTime\(aq, \(aqExposurePeriod\(aq, \(aqExposureTime\(aq, \(aqFileDir\(aq, \(aqFilePostfix\(aq, \(aqFilePrefix\(aq, \(aqFileStartNum\(aq, \(aqLastImageTaken\(aq, \(aqNbExposures\(aq, \(aqNbFrames\(aq], \(aqlambda\(aq: [\(aqTriggerMode\(aq, \(aqShutterTime\(aq, \(aqDelayTime\(aq, \(aqFrameNumbers\(aq, \(aqThreadNo\(aq, \(aqEnergyThreshold\(aq, \(aqOperatingMode\(aq, \(aqConfigFilePath\(aq, \(aqSaveAllImages\(aq, \(aqFilePrefix\(aq, \(aqFileStartNum\(aq, \(aqFilePreExt\(aq, \(aqFilePostfix\(aq, \(aqSaveFilePath\(aq, \(aqSaveFileName\(aq, \(aqLatestImageNumber\(aq, \(aqLiveMode\(aq, \(aqTotalLossFrames\(aq, \(aqCompressorShuffle\(aq, \(aqCompressionRate\(aq, \(aqCompressionEnabled\(aq, \(aqLayout\(aq, \(aqShutterTimeMax\(aq, \(aqShutterTimeMin\(aq, \(aqWidth\(aq, \(aqHeight\(aq, \(aqDepth\(aq, \(aqLiveFrameNo\(aq, \(aqDistortionCorrection\(aq, \(aqLiveLastImageData\(aq], \(aqmarccd\(aq: [\(aqFrameShift\(aq, \(aqSavingDirectory\(aq, \(aqSavingPostfix\(aq, \(aqSavingPrefix\(aq], \(aqpedetector\(aq: [\(aqBinningMode\(aq, \(aqFileIndex\(aq, \(aqExposureTime\(aq, \(aqSkippedAtStart\(aq, \(aqSummedSaveImages\(aq, \(aqSkippedBetweenSaved\(aq, \(aqFilesAfterTrigger\(aq, \(aqFilesBeforeTrigger\(aq, \(aqSummedDarkImages\(aq, \(aqOutputDirectory\(aq, \(aqFilePattern\(aq, \(aqFileName\(aq, \(aqLogFile\(aq, \(aqUserComment1\(aq, \(aqCameraGain\(aq, \(aqUserComment2\(aq, \(aqUserComment3\(aq, \(aqUserComment4\(aq, \(aqSaveRawImages\(aq, \(aqSaveDarkImages\(aq, \(aqPerformIntegration\(aq, \(aqSaveIntegratedData\(aq, \(aqSaveSubtracted\(aq, \(aqPerformDarkSubtraction\(aq], \(aqpcoedge\(aq: [\(aqDelayTime\(aq, \(aqExposureTime\(aq, \(aqNbFrames\(aq, \(aqTriggerMode\(aq, \(aqFileDir\(aq, \(aqFilePostfix\(aq, \(aqFilePrefix\(aq, \(aqFileStartNum\(aq, \(aqBinning_x\(aq, \(aqBinning_y\(aq, \(aqROI_x_min\(aq, \(aqROI_x_max\(aq, \(aqROI_y_min\(aq, \(aqROI_y_max\(aq, \(aqPixelrate\(aq, \(aqADCs\(aq, \(aqCoolingTemp\(aq, \(aqCoolingTempSet\(aq, \(aqImageTimeStamp\(aq, \(aqRecorderMode\(aq], \(aqpilatus100k\(aq: [\(aqDelayTime\(aq, \(aqExposurePeriod\(aq, \(aqExposureTime\(aq, \(aqFileDir\(aq, \(aqFilePostfix\(aq, \(aqFilePrefix\(aq, \(aqFileStartNum\(aq, \(aqLastImageTaken\(aq, \(aqNbExposures\(aq, \(aqNbFrames\(aq]}
.INDENT 7.0
.TP
.B (\fI\%dict\fP <\fI\%str\fP , \fI\%list\fP <\fI\%str\fP> >)
important attributes of modules
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.nxsdevicetools.moduleTemplateFiles = {\(aqmythen2\(aq: [\(aqmythen2.xml\(aq], \(aqmythen\(aq: [\(aqmythen.xml\(aq, \(aqmythen_postrun.ds.xml\(aq, \(aqmythen_filestartnumber.ds.xml\(aq], \(aqeigerdectris\(aq: [\(aqeigerdectris.xml\(aq, \(aqeigerdectris_stepindex.ds.xml\(aq, \(aqeigerdectris_description_cb.ds.xml\(aq, \(aqeigerdectris_triggermode_cb.ds.xml\(aq], \(aqpilatus1m\(aq: [\(aqpilatus.xml\(aq, \(aqpilatus_postrun.ds.xml\(aq, \(aqpilatus1m_description.ds.xml\(aq, \(aqpilatus_filestartnum_cb.ds.xml\(aq], \(aqpco4000\(aq: [\(aqpco.xml\(aq, \(aqpco_postrun.ds.xml\(aq, \(aqpco_description.ds.xml\(aq, \(aqpco_filestartnum_cb.ds.xml\(aq], \(aqperkinelmer\(aq: [\(aqperkinelmerdetector.xml\(aq, \(aqperkinelmerdetector_postrun.ds.xml\(aq, \(aqperkinelmerdetector_description.ds.xml\(aq, \(aqperkinelmerdetector_fileindex_cb.ds.xml\(aq], \(aqlambda2m\(aq: [\(aqlambda2m.xml\(aq, \(aqlambda2m_m1_external_data.ds.xml\(aq, \(aqlambda2m_m2_external_data.ds.xml\(aq, \(aqlambda2m_m3_external_data.ds.xml\(aq], \(aqpco\(aq: [\(aqpco.xml\(aq, \(aqpco_postrun.ds.xml\(aq, \(aqpco_description.ds.xml\(aq, \(aqpco_filestartnum_cb.ds.xml\(aq], \(aqpilatus2m\(aq: [\(aqpilatus.xml\(aq, \(aqpilatus_postrun.ds.xml\(aq, \(aqpilatus2m_description.ds.xml\(aq, \(aqpilatus_filestartnum_cb.ds.xml\(aq], \(aqmca_xia\(aq: [\(aqmcaxia.xml\(aq], \(aqpilatus\(aq: [\(aqpilatus.xml\(aq, \(aqpilatus_postrun.ds.xml\(aq, \(aqpilatus_description.ds.xml\(aq, \(aqpilatus_filestartnum_cb.ds.xml\(aq], \(aqperkinelmerdetector\(aq: [\(aqperkinelmerdetector.xml\(aq, \(aqperkinelmerdetector_postrun.ds.xml\(aq, \(aqperkinelmerdetector_description.ds.xml\(aq, \(aqperkinelmerdetector_fileindex_cb.ds.xml\(aq], \(aqpilatus300k\(aq: [\(aqpilatus.xml\(aq, \(aqpilatus_postrun.ds.xml\(aq, \(aqpilatus300k_description.ds.xml\(aq, \(aqpilatus_filestartnum_cb.ds.xml\(aq], \(aqpilatus6m\(aq: [\(aqpilatus.xml\(aq, \(aqpilatus_postrun.ds.xml\(aq, \(aqpilatus6m_description.ds.xml\(aq, \(aqpilatus_filestartnum_cb.ds.xml\(aq], \(aqlambda\(aq: [\(aqlambda.xml\(aq, \(aqlambda_external_data.ds.xml\(aq], \(aqmarccd\(aq: [\(aqmarccd.xml\(aq, \(aqmarccd_postrun.ds.xml\(aq], \(aqpedetector\(aq: [\(aqperkinelmerdetector.xml\(aq, \(aqperkinelmerdetector_postrun.ds.xml\(aq, \(aqperkinelmerdetector_description.ds.xml\(aq, \(aqperkinelmerdetector_fileindex_cb.ds.xml\(aq], \(aqpcoedge\(aq: [\(aqpco.xml\(aq, \(aqpco_postrun.ds.xml\(aq, \(aqpco_description.ds.xml\(aq, \(aqpco_filestartnum_cb.ds.xml\(aq], \(aqpilatus100k\(aq: [\(aqpilatus.xml\(aq, \(aqpilatus_postrun.ds.xml\(aq, \(aqpilatus100k_description.ds.xml\(aq, \(aqpilatus_filestartnum_cb.ds.xml\(aq]}
.INDENT 7.0
.TP
.B (\fI\%dict\fP <\fI\%str\fP , \fI\%list\fP <\fI\%str\fP> >)
xml template files of modules
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.nxsdevicetools.motorModules = [\(aqabsbox\(aq, \(aqmotor_tango\(aq, \(aqkohzu\(aq, \(aqsmchydra\(aq, \(aqlom\(aq, \(aqoms58\(aq, \(aqe6c\(aq, \(aqomsmaxv\(aq, \(aqspk\(aq, \(aqpie710\(aq, \(aqpie712\(aq, \(aqe6c_p09_eh2\(aq]
(\fI\%list\fP <\fI\%str\fP>) modules of motors
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.nxsdevicetools.oneDModules = [\(aqmca_xia\(aq]
(\fI\%list\fP <\fI\%str\fP>) modules of 1D detectors
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.nxsdevicetools.openServer(device)
opens connection to the configuration server
.INDENT 7.0
.TP
.B Parameters
\fBconfiguration\fP (\fI\%str\fP) \-\- server device name
.TP
.B Returns
configuration server proxy
.TP
.B Return type
\fI\%PyTango.DeviceProxy\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.nxsdevicetools.standardComponentTemplateFiles = {\(aqqbpm\(aq: [\(aqqbpm.xml\(aq, \(aqqbpm_foil.ds.xml\(aq], \(aqkeithley\(aq: [\(aqkeithley.xml\(aq], \(aqabsorber\(aq: [\(aqabsorber.xml\(aq, \(aqabsorber_foil.ds.xml\(aq, \(aqabsorber_thickness.ds.xml\(aq], \(aqdcm\(aq: [\(aqdcm.xml\(aq, \(aqdcm_reflection.ds.xml\(aq, \(aqdcm_unitcalibration.ds.xml\(aq, \(aqdcm_crystal.ds.xml\(aq], \(aqpinhole\(aq: [\(aqpinhole.xml\(aq], \(aqbeamstop\(aq: [\(aqbeamstop.xml\(aq], \(aqundulator\(aq: [\(aqundulator.xml\(aq], \(aqdefault\(aq: [\(aqdefault.xml\(aq, \(aqsample_name.ds.xml\(aq, \(aqchemical_formula.ds.xml\(aq, \(aqbeamtime_id.ds.xml\(aq, \(aqstart_time.ds.xml\(aq, \(aqend_time.ds.xml\(aq, \(aqnexdatas_version.ds.xml\(aq, \(aqnexdatas_configuration.ds.xml\(aq, \(aqtitle.ds.xml\(aq], \(aqcommon2\(aq: [\(aqcommon2_common.ds.xml\(aq], \(aqcommon3\(aq: [\(aqcommon3_common.ds.xml\(aq], \(aqchcut\(aq: [\(aqchcut.xml\(aq, \(aqchcut_unitcalibration.ds.xml\(aq, \(aqchcut_crystal.ds.xml\(aq], \(aqsource\(aq: [\(aqsource.xml\(aq], \(aqslit\(aq: [\(aqslit.xml\(aq], \(aqcollect2\(aq: [\(aqcollect2.xml\(aq], \(aqcollect3\(aq: [\(aqcollect3.xml\(aq], \(aqbeamtimeid\(aq: [\(aqbeamtimeid.xml\(aq, \(aqbeamtimeid.ds.xml\(aq, \(aqstart_time.ds.xml\(aq]}
.INDENT 7.0
.TP
.B (\fI\%dict\fP <\fI\%str\fP , \fI\%list\fP <\fI\%str\fP> >)
xml template files of modules
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.nxsdevicetools.standardComponentVariables = {\(aqqbpm\(aq: {\(aqdependstop\(aq: {\(aqdefault\(aq: \(aqx\(aq, \(aqdoc\(aq: \(aqthe first transformation, e.g. distance (string)\(aq}, \(aqdistance\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqdistance for the sample in m, e.g. 0 (string)\(aq}, \(aqfoil\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqfoil type, i.e. standard <cpname>_foil (datasource)\(aq}, \(aqfoilposdict\(aq: {\(aqdefault\(aq: \(aq{"Ti": 43, "Ni": 23, "Out": 3}\(aq, \(aqdoc\(aq: \(aqfoil_type position json dictionary (string)\(aq}, \(aqdistanceoffset\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aq3\-vector distance offset in m, e.g. sample\-source offset if the distance is taken from the source (string)\(aq}, \(aqdependsony\(aq: {\(aqdefault\(aq: \(aq\(aq, \(aqdoc\(aq: \(aqthe  depends_on y field value,  e.g. distance (string)\(aq}, \(aqy\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqvertical position (datasource)\(aq}, \(aqx\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqhorizontal position (datasource)\(aq}, \(aqfoilpos\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqfoil position (datasource)\(aq}}, \(aqkeithley\(aq: {\(aqcurrent\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqcurrent in A (datasource)\(aq}, \(aqsourvoltlevel\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqsource voltage level in V (datasource)\(aq}, \(aqrisetime\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqrise time (datasource)\(aq}, \(aqgain\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqgain in V/A (datasource)\(aq}, \(aqvoltage\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqvoltage in V (datasource)\(aq}}, \(aqabsorber\(aq: {\(aqthicknesslist\(aq: {\(aqdefault\(aq: \(aq[0.5, 0.05, 0.025, 0.0125, 0, 0.1, 0.3, 0.5, 1.0]\(aq, \(aqdoc\(aq: \(aqfoil_type position json dictionary (string)\(aq}, \(aqdependstop\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqthe first transformation, e.g. distance (string)\(aq}, \(aqfoil\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqfoil type, i.e. standard <cpname>_foil (datasource)\(aq}, \(aqattenfactor\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqattenuation factor (datasource)\(aq}, \(aqdistance\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqdistance for the sample in m, e.g. 0 (string)\(aq}, \(aqtransformations\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: "transformations group name i.e. \(aqtransformations\(aq. If it is  not set it is not created (string)"}, \(aqthickness\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqfoil thickness, i.e. standard <cpname>_thickness (datasource)\(aq}, \(aqfoillist\(aq: {\(aqdefault\(aq: \(aq["Ag", "Ag", "Ag", "Ag", "", "Al", "Al", "Al", "Al"]\(aq, \(aqdoc\(aq: \(aqfoil_type position json dictionary (string)\(aq}, \(aqdistanceoffset\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aq3\-vector distance offset in m, e.g. sample\-source offset if the distance is taken from the source (string)\(aq}, \(aqy\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqvertical position (datasource)\(aq}, \(aqposition\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqwhich sliders are in [bitarray] (datasource)\(aq}}, \(aqdcm\(aq: {\(aqpitch1\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqtheta rotation of the first cristal (datasource)\(aq}, \(aqpitch2\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqtheta rotation of the second cristal (datasource)\(aq}, \(aqjack2\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqsecond vertical jack of table (datasource)\(aq}, \(aqjack3\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqthird vertical jack of table (datasource)\(aq}, \(aqjack1\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqfirst vertical jack of table (datasource)\(aq}, \(aqenergy\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqsynchronized monochromator energy (datasource)\(aq}, \(aqyaw2\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqphi rotation of the second cristal (datasource)\(aq}, \(aqpar2\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqbeam parallel translation of the second cristal (datasource)\(aq}, \(aqdcmdevice\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqFMBOxfDCMEnergy tango device (string)\(aq}, \(aqtable\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqvertical position of table (datasource)\(aq}, \(aqyaw\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqphi rotation of the first cristal (datasource)\(aq}, \(aqchi2dependson\(aq: {\(aqdefault\(aq: \(aqtheta\(aq, \(aqdoc\(aq: \(aqthe depends_on field of the second cristal chi, e.g. phi (string)\(aq}, \(aqusage\(aq: {\(aqdefault\(aq: \(aqBragg\(aq, \(aqdoc\(aq: \(aqthe crystall usage, e.g. Laue (string)\(aq}, \(aqunitcalibration\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqunit calibration from dcmmotor (datasource)\(aq}, \(aqtopdependson2\(aq: {\(aqdefault\(aq: \(aqchi\(aq, \(aqdoc\(aq: \(aqthe first transformation of the second crystal, e.g. lat (string)\(aq}, \(aqbend2\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqbending of the second cristal (datasource)\(aq}, \(aqbend1\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqbending of the first cristal (datasource)\(aq}, \(aqexitoffset\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aq exit offset (datasource)\(aq}, \(aqperp2\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqvertical translation of the second cristal (datasource)\(aq}, \(aqtheta\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqtheta angle (datasource)\(aq}, \(aqlat\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqhorizontal lattice translation of the first cristal (datasource)\(aq}, \(aqphi1dependson\(aq: {\(aqdefault\(aq: \(aq../../transformations/bragg\(aq, \(aqdoc\(aq: \(aqthe depends_on field of the first cristal phi, e.g. theta (string)\(aq}, \(aqroll2\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqchi rotation of the second cristal (datasource)\(aq}, \(aqroll1\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqchi rotation of the first cristal (datasource)\(aq}, \(aqbraggangle\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqbragg angle (datasource)\(aq}, \(aqlat2\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqhorizontal lattice translation of the second cristal (datasource)\(aq}, \(aqcrystal\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqtype of crystal i.e. 0\->Si111,1\->Si311,2\->Si111 ChannelCut (datasource)\(aq}, \(aqoxfordhorizontal\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aq horizontal translation (datasource)\(aq}, \(aqenergyfmb\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqmonochromator energy (datasource)\(aq}}, \(aqpinhole\(aq: {\(aqy\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqvertical position (datasource)\(aq}, \(aqx\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqhorizontal position (datasource)\(aq}, \(aqz\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqvertical position (datasource)\(aq}, \(aqxsign\(aq: {\(aqdefault\(aq: \(aq\(aq, \(aqdoc\(aq: "horizontal position sign, e.g. \(aq\-\(aq (string)"}}, \(aqbeamstop\(aq: {\(aqy\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqvertical position (datasource)\(aq}, \(aqx\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqhorizontal position (datasource)\(aq}, \(aqz\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqvertical position (datasource)\(aq}, \(aqdescription\(aq: {\(aqdefault\(aq: \(aqcircular\(aq, \(aqdoc\(aq: \(aq circular or  rectangular (string)\(aq}, \(aqxsign\(aq: {\(aqdefault\(aq: \(aq\(aq, \(aqdoc\(aq: "horizontal position sign, e.g. \(aq\-\(aq (string)"}}, \(aqundulator\(aq: {\(aqenergy\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqundulator energy (datasource)\(aq}, \(aqharmonic\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqundulator harmonic (datasource)\(aq}, \(aqgap\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqseparation between opposing pairs of magnetic pole (datasource)\(aq}, \(aqdependstop\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqthe first transformation, e.g. distance (string)\(aq}, \(aquname\(aq: {\(aqdefault\(aq: \(aqinsertion_device\(aq, \(aqdoc\(aq: \(aqinsertion_device group name (string)\(aq}, \(aqdistance\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqdistance from the sample in m, e.g. 0 (string)\(aq}, \(aqtransformations\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: "transformations group name i.e. \(aqtransformations\(aq. If it is  not set it is not created (string)"}, \(aqtaper\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqgap difference between upstream and downstream ends of the insertion device (datasource)\(aq}, \(aqlength\(aq: {\(aqdefault\(aq: \(aq2\(aq, \(aqdoc\(aq: \(aqlength of insertion device in meters (string)\(aq}, \(aqdistanceoffset\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aq3\-vector distance offset in m, e.g. sample\-source offset if the distance is taken from the source (string)\(aq}, \(aqtype\(aq: {\(aqdefault\(aq: \(aqundulator\(aq, \(aqdoc\(aq: \(aqundulator or wiggler (string)\(aq}}, \(aqdefault\(aq: {\(aq__configdevice__\(aq: {\(aqdefault\(aq: \(aqnxs/configserver/localhost\(aq, \(aqdoc\(aq: \(aqconfiguration server device name (string)\(aq}, \(aqsourcename\(aq: {\(aqdefault\(aq: \(aqPETRA III\(aq, \(aqdoc\(aq: \(aqsource name (string)\(aq}, \(aq__tangoport__\(aq: {\(aqdefault\(aq: \(aq10000\(aq, \(aqdoc\(aq: \(aqtango port (string)\(aq}, \(aqlongname\(aq: {\(aqdefault\(aq: \(aqP09 Resonant Scattering and Diffraction beamline\(aq, \(aqdoc\(aq: \(aqbeamline long name (string)\(aq}, \(aq__tangohost__\(aq: {\(aqdefault\(aq: \(aqlocalhost\(aq, \(aqdoc\(aq: \(aqtango host (string)\(aq}, \(aqshortname\(aq: {\(aqdefault\(aq: \(aqP09\(aq, \(aqdoc\(aq: \(aqbeamline short name (string)\(aq}}, \(aqcommon2\(aq: {\(aqdds\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqdefault read datasource name (datasource)\(aq}, \(aqods\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqoptional detasource name (datasource)\(aq}}, \(aqcommon3\(aq: {\(aqdds\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqdefault read datasource name (datasource)\(aq}, \(aqods1\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqfist optional detasource name (datasource)\(aq}, \(aqods2\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqsecond optional detasource name (datasource)\(aq}}, \(aqchcut\(aq: {\(aqtheta\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqtheta angle (datasource)\(aq}, \(aqbraggangle\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqbragg angle (datasource)\(aq}, \(aqjack2\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqsecond vertical jack of table (datasource)\(aq}, \(aqreflection\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqreflection from string (datasource)\(aq}, \(aqpara\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqdistance between the crystals (string)\(aq}, \(aqjack1\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqfirst vertical jack of table (datasource)\(aq}, \(aqenergy\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqsynchronized monochromator energy (datasource)\(aq}, \(aqcrystal\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aq type of crystal i.e. 0\->Si111,1\->Si311,2\->Si111 ChannelCut  (datasource)\(aq}, \(aqlat\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqhorizontal lattice translation of the first cristal (datasource)\(aq}, \(aqoxfordhorizontal\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aq horizontal translation (datasource)\(aq}, \(aqjack3\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqthird vertical jack of table (datasource)\(aq}, \(aqunitcalibration\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aq unit calibration from dcmmotor (datasource)\(aq}, \(aqusage\(aq: {\(aqdefault\(aq: \(aqBragg\(aq, \(aqdoc\(aq: \(aqthe crystall usage, e.g. Laue (string)\(aq}, \(aqtable\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqvertical position of table (datasource)\(aq}, \(aqyaw\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqphi rotation of the first cristal (datasource)\(aq}, \(aqenergyfmb\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqmonochromator energy (datasource)\(aq}, \(aqchcutdevice\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqFMBOxfDCMEnergy tango device name (string)\(aq}, \(aqroll1\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqchi rotation of the first cristal (datasource)\(aq}}, \(aqsource\(aq: {\(aqsourceenergy\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqring beam energy (datasource)\(aq}, \(aqbeamcurrent\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqring beam current (datasource)\(aq}, \(aqbunchmode\(aq: {\(aqdefault\(aq: \(aqMulti Bunch\(aq, \(aqdoc\(aq: \(aqbunch mode (string)\(aq}, \(aqnumberofbunches\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqnumber of source bunches (datasource)\(aq}}, \(aqslit\(aq: {\(aqright\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqright blade position (datasource)\(aq}, \(aqyoffset\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqvertiacal offset (datasource)\(aq}, \(aqxgap\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqhorizontal gap (datasource)\(aq}, \(aqxoffset\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqhorizontal offset (datasource)\(aq}, \(aqdistance\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqdistance for the sample in m, e.g. 0 (string)\(aq}, \(aqtransformations\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: "transformations group name i.e. \(aqtransformations\(aq. If it is  not set it is not created (string)"}, \(aqbottom\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqbottom blade position (datasource)\(aq}, \(aqtop\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqtop blade position (datasource)\(aq}, \(aqdependstop\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqthe first transformation, e.g. distance (string)\(aq}, \(aqdistanceoffset\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aq3\-vector distance offset in m, e.g. sample\-source offset if the distance is taken from the source (string)\(aq}, \(aqygap\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqvertical gap (datasource)\(aq}, \(aqleft\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqleft blade position (datasource)\(aq}}, \(aqcollect2\(aq: {\(aqsecond\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqname of the second component to collect (datasource)\(aq}, \(aqfirst\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqname of the first component to collect (datasource)\(aq}}, \(aqcollect3\(aq: {\(aqsecond\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqname of the second component to collect (datasource)\(aq}, \(aqthird\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqname of the third component to collect (datasource)\(aq}, \(aqfirst\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqname of the first component to collect (datasource)\(aq}}, \(aqsamplehkl\(aq: {\(aqh\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqh position in hkl space (datasource)\(aq}, \(aqpsi\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqpsi angle position of analyzer (datasource)\(aq}, \(aqsname\(aq: {\(aqdefault\(aq: \(aqsample\(aq, \(aqdoc\(aq: \(aqsample group name (string)\(aq}, \(aqk\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqk position in hkl space (datasource)\(aq}, \(aql\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aql position in hkl space (datasource)\(aq}}, \(aqbeamtimeid\(aq: {\(aqlocaldir\(aq: {\(aqdefault\(aq: \(aq/gpfs/local\(aq, \(aqdoc\(aq: \(aqlocal file directory (string)\(aq}, \(aqcurrentdir\(aq: {\(aqdefault\(aq: \(aq/gpfs/current\(aq, \(aqdoc\(aq: \(aqbeamtime file directory (string)\(aq}, \(aqcommissionprefix\(aq: {\(aqdefault\(aq: \(aqcommissioning\-metadata\-\(aq, \(aqdoc\(aq: \(aqcommission file prefix (string)\(aq}, \(aqcurrentpostfix\(aq: {\(aqdefault\(aq: \(aq.txt\(aq, \(aqdoc\(aq: \(aqbeamtime file postfix (string)\(aq}, \(aqshortname\(aq: {\(aqdefault\(aq: \(aqP09\(aq, \(aqdoc\(aq: \(aqbeamline short name (string)\(aq}, \(aqcommissionpostfix\(aq: {\(aqdefault\(aq: \(aq.txt\(aq, \(aqdoc\(aq: \(aqcommission file postfix (string)\(aq}, \(aqcommissiondir\(aq: {\(aqdefault\(aq: \(aq/gpfs/commissioning\(aq, \(aqdoc\(aq: \(aqcommission file directory (string)\(aq}, \(aqcurrentprefix\(aq: {\(aqdefault\(aq: \(aqbeamtime\-metadata\-\(aq, \(aqdoc\(aq: \(aqbeamtime file prefix (string)\(aq}}}
.INDENT 7.0
.TP
.B (\fI\%dict\fP <\fI\%str\fP , \fI\%dict\fP <\fI\%str\fP , \fI\%str\fP > >)
standard component template variables
and its [default value, doc string]
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.nxsdevicetools.storeComponent(name, xml, server, mandatory=False)
stores components in Configuration Server
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBname\fP (\fI\%str\fP) \-\- component name
.IP \(bu 2
\fBxml\fP (\fI\%str\fP) \-\- component xml string
.IP \(bu 2
\fBserver\fP (\fI\%str\fP) \-\- configuration server
.IP \(bu 2
\fBmandatory\fP (\fI\%bool\fP) \-\- set component as mandatory
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.nxsdevicetools.storeDataSource(name, xml, server)
stores datasources in Configuration Server
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBname\fP (\fI\%str\fP) \-\- datasource name
.IP \(bu 2
\fBxml\fP (\fI\%str\fP) \-\- datasource xml string
.IP \(bu 2
\fBserver\fP (\fI\%str\fP) \-\- configuration server
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.nxsdevicetools.twoDModules = [\(aqpilatus100k\(aq, \(aqpilatus300k\(aq, \(aqpilatus1m\(aq, \(aqpilatus2m\(aq, \(aqpilatus6m\(aq, \(aqpco4000\(aq, \(aqperkinelmerdetector\(aq, \(aqlambda\(aq, \(aqpedetector\(aq, \(aqperkinelmer\(aq, \(aqpco\(aq, \(aqpcoedge\(aq, \(aqmarccd\(aq, \(aqperkinelmer\(aq, \(aqlcxcamera\(aq, \(aqlimaccd\(aq, \(aqeigerpsi\(aq, \(aqeigerdectris\(aq]
(\fI\%list\fP <\fI\%str\fP>) modules of 2d detectors
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.nxsdevicetools.xmlPackageHandler = <nxstools.nxsdevicetools.PackageHandler object at 0x7f865d4b0110>
(\fBPackageHandler\fP) xml template package handler
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.nxsdevicetools.zeroDModules = [\(aqtip830\(aq]
(\fI\%list\fP <\fI\%str\fP>) modules of 0D detectors
.UNINDENT
.SS nxstools.filenamegenerator module
.sp
Filename generator
.INDENT 0.0
.TP
.B class nxstools.filenamegenerator.FilenameGenerator(fname_template, start_index=0, stop_index=None)
Bases: \fI\%object\fP
.sp
Generate image file names
.sp
(c) Copyright 2015 Eugen Wintersberger <\fI\%eugen.wintersberger@gmail.com\fP>
(c) Copyright 2015 DESY
This file is part of nx2img.
.sp
nx2img is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 2 of the License, or
(at your option) any later version.
.sp
nx2img is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.
.sp
You should have received a copy of the GNU General Public License
along with nx2img.  If not, see <\fI\%http://www.gnu.org/licenses/\fP>.
.sp
Generator class creating image file names.
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBfname_template\fP (\fI\%str\fP) \-\- file name template
.IP \(bu 2
\fBstart_index\fP (\fI\%int\fP) \-\- file start index
.IP \(bu 2
\fBstop_index\fP (\fI\%int\fP) \-\- file stop index
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B file_index = None
(\fI\%int\fP) file start index
.UNINDENT
.INDENT 7.0
.TP
.B file_template = None
(\fI\%str\fP) file name template
.UNINDENT
.INDENT 7.0
.TP
.B static from_slice(file_template)
Static factory method to create a filename_generator instance
from a sliced user input
.INDENT 7.0
.TP
.B Parameters
\fBfile_template\fP (\fI\%str\fP) \-\- file template
.TP
.B Returns
filename generator object
.TP
.B Return type
\fBFilenameGenerator\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B stop_index = None
(\fI\%int\fP) file stop index
.UNINDENT
.UNINDENT
.SS nxstools.release module
.sp
NXS tools release version
.SS Module contents
.sp
NXS tools
.sp
xml templates
.INDENT 0.0
.TP
.B nxstools.xmltemplates.moduleMultiAttributes = {\(aqmythen2\(aq: [\(aqCounts1\(aq, \(aqCounts2\(aq, \(aqCountsMax\(aq, \(aqCountsTotal\(aq, \(aqExposureTime\(aq, \(aqFileDir\(aq, \(aqFileIndex\(aq, \(aqFilePrefix\(aq, \(aqData\(aq, \(aqEnergy\(aq, \(aqNbFrames\(aq, \(aqRoI1End\(aq, \(aqRoI2End\(aq, \(aqRoI1Start\(aq, \(aqRoI2Start\(aq, \(aqThreshold\(aq], \(aqperkinelmer\(aq: [\(aqBinningMode\(aq, \(aqFileIndex\(aq, \(aqExposureTime\(aq, \(aqSkippedAtStart\(aq, \(aqSummedSaveImages\(aq, \(aqSkippedBetweenSaved\(aq, \(aqFilesAfterTrigger\(aq, \(aqFilesBeforeTrigger\(aq, \(aqSummedDarkImages\(aq, \(aqOutputDirectory\(aq, \(aqFilePattern\(aq, \(aqFileName\(aq, \(aqLogFile\(aq, \(aqUserComment1\(aq, \(aqCameraGain\(aq, \(aqUserComment2\(aq, \(aqUserComment3\(aq, \(aqUserComment4\(aq, \(aqSaveRawImages\(aq, \(aqSaveDarkImages\(aq, \(aqPerformIntegration\(aq, \(aqSaveIntegratedData\(aq, \(aqSaveSubtracted\(aq, \(aqPerformDarkSubtraction\(aq], \(aqpilatus2m\(aq: [\(aqDelayTime\(aq, \(aqExposurePeriod\(aq, \(aqExposureTime\(aq, \(aqFileDir\(aq, \(aqFilePostfix\(aq, \(aqFilePrefix\(aq, \(aqFileStartNum\(aq, \(aqLastImageTaken\(aq, \(aqNbExposures\(aq, \(aqNbFrames\(aq], \(aqpilatus1m\(aq: [\(aqDelayTime\(aq, \(aqExposurePeriod\(aq, \(aqExposureTime\(aq, \(aqFileDir\(aq, \(aqFilePostfix\(aq, \(aqFilePrefix\(aq, \(aqFileStartNum\(aq, \(aqLastImageTaken\(aq, \(aqNbExposures\(aq, \(aqNbFrames\(aq], \(aqpco4000\(aq: [\(aqDelayTime\(aq, \(aqExposureTime\(aq, \(aqNbFrames\(aq, \(aqTriggerMode\(aq, \(aqFileDir\(aq, \(aqFilePostfix\(aq, \(aqFilePrefix\(aq, \(aqFileStartNum\(aq, \(aqBinning_x\(aq, \(aqBinning_y\(aq, \(aqROI_x_min\(aq, \(aqROI_x_max\(aq, \(aqROI_y_min\(aq, \(aqROI_y_max\(aq, \(aqPixelrate\(aq, \(aqADCs\(aq, \(aqCoolingTemp\(aq, \(aqCoolingTempSet\(aq, \(aqImageTimeStamp\(aq, \(aqRecorderMode\(aq], \(aqmythen\(aq: [\(aqCounts1\(aq, \(aqCounts2\(aq, \(aqCountsMax\(aq, \(aqCountsTotal\(aq, \(aqExposureTime\(aq, \(aqFileDir\(aq, \(aqFileIndex\(aq, \(aqFilePrefix\(aq, \(aqData\(aq, \(aqRoI1\(aq, \(aqRoI2\(aq], \(aqlambda2m\(aq: [\(aqTriggerMode\(aq, \(aqShutterTime\(aq, \(aqDelayTime\(aq, \(aqFrameNumbers\(aq, \(aqThreadNo\(aq, \(aqEnergyThreshold\(aq, \(aqOperatingMode\(aq, \(aqConfigFilePath\(aq, \(aqSaveAllImages\(aq, \(aqFilePrefix\(aq, \(aqFileStartNum\(aq, \(aqFilePreExt\(aq, \(aqFilePostfix\(aq, \(aqSaveFilePath\(aq, \(aqSaveFileName\(aq, \(aqLatestImageNumber\(aq, \(aqLiveMode\(aq, \(aqTotalLossFrames\(aq, \(aqCompressorShuffle\(aq, \(aqCompressionRate\(aq, \(aqCompressionEnabled\(aq, \(aqLayout\(aq, \(aqShutterTimeMax\(aq, \(aqShutterTimeMin\(aq, \(aqWidth\(aq, \(aqHeight\(aq, \(aqDepth\(aq, \(aqLiveFrameNo\(aq, \(aqDistortionCorrection\(aq, \(aqLiveLastImageData\(aq], \(aqmca_xia\(aq: [], \(aqpilatus300k\(aq: [\(aqDelayTime\(aq, \(aqExposurePeriod\(aq, \(aqExposureTime\(aq, \(aqFileDir\(aq, \(aqFilePostfix\(aq, \(aqFilePrefix\(aq, \(aqFileStartNum\(aq, \(aqLastImageTaken\(aq, \(aqNbExposures\(aq, \(aqNbFrames\(aq], \(aqeigerdectris\(aq: [\(aqTriggerMode\(aq, \(aqNbTriggers\(aq, \(aqDescription\(aq, \(aqNbImages\(aq, \(aqBitDepth\(aq, \(aqReadoutTime\(aq, \(aqCountTime\(aq, \(aqEnergyThreshold\(aq, \(aqFrameTime\(aq, \(aqRateCorrectionEnabled\(aq, \(aqFlatFieldEnabled\(aq, \(aqTemperature\(aq, \(aqAutoSummationEnabled\(aq, \(aqHumidity\(aq, \(aqPhotonEnergy\(aq, \(aqWavelength\(aq], \(aqsamplehkl\(aq: [\(aqsamplehkl.xml\(aq], \(aqperkinelmerdetector\(aq: [\(aqBinningMode\(aq, \(aqFileIndex\(aq, \(aqExposureTime\(aq, \(aqSkippedAtStart\(aq, \(aqSummedSaveImages\(aq, \(aqSkippedBetweenSaved\(aq, \(aqFilesAfterTrigger\(aq, \(aqFilesBeforeTrigger\(aq, \(aqSummedDarkImages\(aq, \(aqOutputDirectory\(aq, \(aqFilePattern\(aq, \(aqFileName\(aq, \(aqLogFile\(aq, \(aqUserComment1\(aq, \(aqCameraGain\(aq, \(aqUserComment2\(aq, \(aqUserComment3\(aq, \(aqUserComment4\(aq, \(aqSaveRawImages\(aq, \(aqSaveDarkImages\(aq, \(aqPerformIntegration\(aq, \(aqSaveIntegratedData\(aq, \(aqSaveSubtracted\(aq, \(aqPerformDarkSubtraction\(aq], \(aqmca_xia@pool\(aq: [\(aqCountsRoI\(aq, \(aqRoIEnd\(aq, \(aqRoIStart\(aq, \(aqValue\(aq], \(aqpco\(aq: [\(aqDelayTime\(aq, \(aqExposureTime\(aq, \(aqNbFrames\(aq, \(aqTriggerMode\(aq, \(aqFileDir\(aq, \(aqFilePostfix\(aq, \(aqFilePrefix\(aq, \(aqFileStartNum\(aq, \(aqBinning_x\(aq, \(aqBinning_y\(aq, \(aqROI_x_min\(aq, \(aqROI_x_max\(aq, \(aqROI_y_min\(aq, \(aqROI_y_max\(aq, \(aqPixelrate\(aq, \(aqADCs\(aq, \(aqCoolingTemp\(aq, \(aqCoolingTempSet\(aq, \(aqImageTimeStamp\(aq, \(aqRecorderMode\(aq], \(aqpilatus\(aq: [\(aqDelayTime\(aq, \(aqExposurePeriod\(aq, \(aqExposureTime\(aq, \(aqFileDir\(aq, \(aqFilePostfix\(aq, \(aqFilePrefix\(aq, \(aqFileStartNum\(aq, \(aqLastImageTaken\(aq, \(aqNbExposures\(aq, \(aqNbFrames\(aq], \(aqpilatus6m\(aq: [\(aqDelayTime\(aq, \(aqExposurePeriod\(aq, \(aqExposureTime\(aq, \(aqFileDir\(aq, \(aqFilePostfix\(aq, \(aqFilePrefix\(aq, \(aqFileStartNum\(aq, \(aqLastImageTaken\(aq, \(aqNbExposures\(aq, \(aqNbFrames\(aq], \(aqlambda\(aq: [\(aqTriggerMode\(aq, \(aqShutterTime\(aq, \(aqDelayTime\(aq, \(aqFrameNumbers\(aq, \(aqThreadNo\(aq, \(aqEnergyThreshold\(aq, \(aqOperatingMode\(aq, \(aqConfigFilePath\(aq, \(aqSaveAllImages\(aq, \(aqFilePrefix\(aq, \(aqFileStartNum\(aq, \(aqFilePreExt\(aq, \(aqFilePostfix\(aq, \(aqSaveFilePath\(aq, \(aqSaveFileName\(aq, \(aqLatestImageNumber\(aq, \(aqLiveMode\(aq, \(aqTotalLossFrames\(aq, \(aqCompressorShuffle\(aq, \(aqCompressionRate\(aq, \(aqCompressionEnabled\(aq, \(aqLayout\(aq, \(aqShutterTimeMax\(aq, \(aqShutterTimeMin\(aq, \(aqWidth\(aq, \(aqHeight\(aq, \(aqDepth\(aq, \(aqLiveFrameNo\(aq, \(aqDistortionCorrection\(aq, \(aqLiveLastImageData\(aq], \(aqmarccd\(aq: [\(aqFrameShift\(aq, \(aqSavingDirectory\(aq, \(aqSavingPostfix\(aq, \(aqSavingPrefix\(aq], \(aqpedetector\(aq: [\(aqBinningMode\(aq, \(aqFileIndex\(aq, \(aqExposureTime\(aq, \(aqSkippedAtStart\(aq, \(aqSummedSaveImages\(aq, \(aqSkippedBetweenSaved\(aq, \(aqFilesAfterTrigger\(aq, \(aqFilesBeforeTrigger\(aq, \(aqSummedDarkImages\(aq, \(aqOutputDirectory\(aq, \(aqFilePattern\(aq, \(aqFileName\(aq, \(aqLogFile\(aq, \(aqUserComment1\(aq, \(aqCameraGain\(aq, \(aqUserComment2\(aq, \(aqUserComment3\(aq, \(aqUserComment4\(aq, \(aqSaveRawImages\(aq, \(aqSaveDarkImages\(aq, \(aqPerformIntegration\(aq, \(aqSaveIntegratedData\(aq, \(aqSaveSubtracted\(aq, \(aqPerformDarkSubtraction\(aq], \(aqpcoedge\(aq: [\(aqDelayTime\(aq, \(aqExposureTime\(aq, \(aqNbFrames\(aq, \(aqTriggerMode\(aq, \(aqFileDir\(aq, \(aqFilePostfix\(aq, \(aqFilePrefix\(aq, \(aqFileStartNum\(aq, \(aqBinning_x\(aq, \(aqBinning_y\(aq, \(aqROI_x_min\(aq, \(aqROI_x_max\(aq, \(aqROI_y_min\(aq, \(aqROI_y_max\(aq, \(aqPixelrate\(aq, \(aqADCs\(aq, \(aqCoolingTemp\(aq, \(aqCoolingTempSet\(aq, \(aqImageTimeStamp\(aq, \(aqRecorderMode\(aq], \(aqpilatus100k\(aq: [\(aqDelayTime\(aq, \(aqExposurePeriod\(aq, \(aqExposureTime\(aq, \(aqFileDir\(aq, \(aqFilePostfix\(aq, \(aqFilePrefix\(aq, \(aqFileStartNum\(aq, \(aqLastImageTaken\(aq, \(aqNbExposures\(aq, \(aqNbFrames\(aq]}
.INDENT 7.0
.TP
.B (\fI\%dict\fP <\fI\%str\fP , \fI\%list\fP <\fI\%str\fP> >)
important attributes of modules
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.xmltemplates.moduleTemplateFiles = {\(aqmythen2\(aq: [\(aqmythen2.xml\(aq], \(aqmythen\(aq: [\(aqmythen.xml\(aq, \(aqmythen_postrun.ds.xml\(aq, \(aqmythen_filestartnumber.ds.xml\(aq], \(aqeigerdectris\(aq: [\(aqeigerdectris.xml\(aq, \(aqeigerdectris_stepindex.ds.xml\(aq, \(aqeigerdectris_description_cb.ds.xml\(aq, \(aqeigerdectris_triggermode_cb.ds.xml\(aq], \(aqpilatus1m\(aq: [\(aqpilatus.xml\(aq, \(aqpilatus_postrun.ds.xml\(aq, \(aqpilatus1m_description.ds.xml\(aq, \(aqpilatus_filestartnum_cb.ds.xml\(aq], \(aqpco4000\(aq: [\(aqpco.xml\(aq, \(aqpco_postrun.ds.xml\(aq, \(aqpco_description.ds.xml\(aq, \(aqpco_filestartnum_cb.ds.xml\(aq], \(aqperkinelmer\(aq: [\(aqperkinelmerdetector.xml\(aq, \(aqperkinelmerdetector_postrun.ds.xml\(aq, \(aqperkinelmerdetector_description.ds.xml\(aq, \(aqperkinelmerdetector_fileindex_cb.ds.xml\(aq], \(aqlambda2m\(aq: [\(aqlambda2m.xml\(aq, \(aqlambda2m_m1_external_data.ds.xml\(aq, \(aqlambda2m_m2_external_data.ds.xml\(aq, \(aqlambda2m_m3_external_data.ds.xml\(aq], \(aqpco\(aq: [\(aqpco.xml\(aq, \(aqpco_postrun.ds.xml\(aq, \(aqpco_description.ds.xml\(aq, \(aqpco_filestartnum_cb.ds.xml\(aq], \(aqpilatus2m\(aq: [\(aqpilatus.xml\(aq, \(aqpilatus_postrun.ds.xml\(aq, \(aqpilatus2m_description.ds.xml\(aq, \(aqpilatus_filestartnum_cb.ds.xml\(aq], \(aqmca_xia\(aq: [\(aqmcaxia.xml\(aq], \(aqpilatus\(aq: [\(aqpilatus.xml\(aq, \(aqpilatus_postrun.ds.xml\(aq, \(aqpilatus_description.ds.xml\(aq, \(aqpilatus_filestartnum_cb.ds.xml\(aq], \(aqperkinelmerdetector\(aq: [\(aqperkinelmerdetector.xml\(aq, \(aqperkinelmerdetector_postrun.ds.xml\(aq, \(aqperkinelmerdetector_description.ds.xml\(aq, \(aqperkinelmerdetector_fileindex_cb.ds.xml\(aq], \(aqpilatus300k\(aq: [\(aqpilatus.xml\(aq, \(aqpilatus_postrun.ds.xml\(aq, \(aqpilatus300k_description.ds.xml\(aq, \(aqpilatus_filestartnum_cb.ds.xml\(aq], \(aqpilatus6m\(aq: [\(aqpilatus.xml\(aq, \(aqpilatus_postrun.ds.xml\(aq, \(aqpilatus6m_description.ds.xml\(aq, \(aqpilatus_filestartnum_cb.ds.xml\(aq], \(aqlambda\(aq: [\(aqlambda.xml\(aq, \(aqlambda_external_data.ds.xml\(aq], \(aqmarccd\(aq: [\(aqmarccd.xml\(aq, \(aqmarccd_postrun.ds.xml\(aq], \(aqpedetector\(aq: [\(aqperkinelmerdetector.xml\(aq, \(aqperkinelmerdetector_postrun.ds.xml\(aq, \(aqperkinelmerdetector_description.ds.xml\(aq, \(aqperkinelmerdetector_fileindex_cb.ds.xml\(aq], \(aqpcoedge\(aq: [\(aqpco.xml\(aq, \(aqpco_postrun.ds.xml\(aq, \(aqpco_description.ds.xml\(aq, \(aqpco_filestartnum_cb.ds.xml\(aq], \(aqpilatus100k\(aq: [\(aqpilatus.xml\(aq, \(aqpilatus_postrun.ds.xml\(aq, \(aqpilatus100k_description.ds.xml\(aq, \(aqpilatus_filestartnum_cb.ds.xml\(aq]}
.INDENT 7.0
.TP
.B (\fI\%dict\fP <\fI\%str\fP , \fI\%list\fP <\fI\%str\fP> >)
xml template files of modules
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.xmltemplates.standardComponentTemplateFiles = {\(aqqbpm\(aq: [\(aqqbpm.xml\(aq, \(aqqbpm_foil.ds.xml\(aq], \(aqkeithley\(aq: [\(aqkeithley.xml\(aq], \(aqabsorber\(aq: [\(aqabsorber.xml\(aq, \(aqabsorber_foil.ds.xml\(aq, \(aqabsorber_thickness.ds.xml\(aq], \(aqdcm\(aq: [\(aqdcm.xml\(aq, \(aqdcm_reflection.ds.xml\(aq, \(aqdcm_unitcalibration.ds.xml\(aq, \(aqdcm_crystal.ds.xml\(aq], \(aqpinhole\(aq: [\(aqpinhole.xml\(aq], \(aqbeamstop\(aq: [\(aqbeamstop.xml\(aq], \(aqundulator\(aq: [\(aqundulator.xml\(aq], \(aqdefault\(aq: [\(aqdefault.xml\(aq, \(aqsample_name.ds.xml\(aq, \(aqchemical_formula.ds.xml\(aq, \(aqbeamtime_id.ds.xml\(aq, \(aqstart_time.ds.xml\(aq, \(aqend_time.ds.xml\(aq, \(aqnexdatas_version.ds.xml\(aq, \(aqnexdatas_configuration.ds.xml\(aq, \(aqtitle.ds.xml\(aq], \(aqcommon2\(aq: [\(aqcommon2_common.ds.xml\(aq], \(aqcommon3\(aq: [\(aqcommon3_common.ds.xml\(aq], \(aqchcut\(aq: [\(aqchcut.xml\(aq, \(aqchcut_unitcalibration.ds.xml\(aq, \(aqchcut_crystal.ds.xml\(aq], \(aqsource\(aq: [\(aqsource.xml\(aq], \(aqslit\(aq: [\(aqslit.xml\(aq], \(aqcollect2\(aq: [\(aqcollect2.xml\(aq], \(aqcollect3\(aq: [\(aqcollect3.xml\(aq], \(aqbeamtimeid\(aq: [\(aqbeamtimeid.xml\(aq, \(aqbeamtimeid.ds.xml\(aq, \(aqstart_time.ds.xml\(aq]}
.INDENT 7.0
.TP
.B (\fI\%dict\fP <\fI\%str\fP , \fI\%list\fP <\fI\%str\fP> >)
xml template files of modules
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.xmltemplates.standardComponentVariables = {\(aqqbpm\(aq: {\(aqdependstop\(aq: {\(aqdefault\(aq: \(aqx\(aq, \(aqdoc\(aq: \(aqthe first transformation, e.g. distance (string)\(aq}, \(aqdistance\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqdistance for the sample in m, e.g. 0 (string)\(aq}, \(aqfoil\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqfoil type, i.e. standard <cpname>_foil (datasource)\(aq}, \(aqfoilposdict\(aq: {\(aqdefault\(aq: \(aq{"Ti": 43, "Ni": 23, "Out": 3}\(aq, \(aqdoc\(aq: \(aqfoil_type position json dictionary (string)\(aq}, \(aqdistanceoffset\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aq3\-vector distance offset in m, e.g. sample\-source offset if the distance is taken from the source (string)\(aq}, \(aqdependsony\(aq: {\(aqdefault\(aq: \(aq\(aq, \(aqdoc\(aq: \(aqthe  depends_on y field value,  e.g. distance (string)\(aq}, \(aqy\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqvertical position (datasource)\(aq}, \(aqx\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqhorizontal position (datasource)\(aq}, \(aqfoilpos\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqfoil position (datasource)\(aq}}, \(aqkeithley\(aq: {\(aqcurrent\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqcurrent in A (datasource)\(aq}, \(aqsourvoltlevel\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqsource voltage level in V (datasource)\(aq}, \(aqrisetime\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqrise time (datasource)\(aq}, \(aqgain\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqgain in V/A (datasource)\(aq}, \(aqvoltage\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqvoltage in V (datasource)\(aq}}, \(aqabsorber\(aq: {\(aqthicknesslist\(aq: {\(aqdefault\(aq: \(aq[0.5, 0.05, 0.025, 0.0125, 0, 0.1, 0.3, 0.5, 1.0]\(aq, \(aqdoc\(aq: \(aqfoil_type position json dictionary (string)\(aq}, \(aqdependstop\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqthe first transformation, e.g. distance (string)\(aq}, \(aqfoil\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqfoil type, i.e. standard <cpname>_foil (datasource)\(aq}, \(aqattenfactor\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqattenuation factor (datasource)\(aq}, \(aqdistance\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqdistance for the sample in m, e.g. 0 (string)\(aq}, \(aqtransformations\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: "transformations group name i.e. \(aqtransformations\(aq. If it is  not set it is not created (string)"}, \(aqthickness\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqfoil thickness, i.e. standard <cpname>_thickness (datasource)\(aq}, \(aqfoillist\(aq: {\(aqdefault\(aq: \(aq["Ag", "Ag", "Ag", "Ag", "", "Al", "Al", "Al", "Al"]\(aq, \(aqdoc\(aq: \(aqfoil_type position json dictionary (string)\(aq}, \(aqdistanceoffset\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aq3\-vector distance offset in m, e.g. sample\-source offset if the distance is taken from the source (string)\(aq}, \(aqy\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqvertical position (datasource)\(aq}, \(aqposition\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqwhich sliders are in [bitarray] (datasource)\(aq}}, \(aqdcm\(aq: {\(aqpitch1\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqtheta rotation of the first cristal (datasource)\(aq}, \(aqpitch2\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqtheta rotation of the second cristal (datasource)\(aq}, \(aqjack2\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqsecond vertical jack of table (datasource)\(aq}, \(aqjack3\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqthird vertical jack of table (datasource)\(aq}, \(aqjack1\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqfirst vertical jack of table (datasource)\(aq}, \(aqenergy\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqsynchronized monochromator energy (datasource)\(aq}, \(aqyaw2\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqphi rotation of the second cristal (datasource)\(aq}, \(aqpar2\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqbeam parallel translation of the second cristal (datasource)\(aq}, \(aqdcmdevice\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqFMBOxfDCMEnergy tango device (string)\(aq}, \(aqtable\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqvertical position of table (datasource)\(aq}, \(aqyaw\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqphi rotation of the first cristal (datasource)\(aq}, \(aqchi2dependson\(aq: {\(aqdefault\(aq: \(aqtheta\(aq, \(aqdoc\(aq: \(aqthe depends_on field of the second cristal chi, e.g. phi (string)\(aq}, \(aqusage\(aq: {\(aqdefault\(aq: \(aqBragg\(aq, \(aqdoc\(aq: \(aqthe crystall usage, e.g. Laue (string)\(aq}, \(aqunitcalibration\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqunit calibration from dcmmotor (datasource)\(aq}, \(aqtopdependson2\(aq: {\(aqdefault\(aq: \(aqchi\(aq, \(aqdoc\(aq: \(aqthe first transformation of the second crystal, e.g. lat (string)\(aq}, \(aqbend2\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqbending of the second cristal (datasource)\(aq}, \(aqbend1\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqbending of the first cristal (datasource)\(aq}, \(aqexitoffset\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aq exit offset (datasource)\(aq}, \(aqperp2\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqvertical translation of the second cristal (datasource)\(aq}, \(aqtheta\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqtheta angle (datasource)\(aq}, \(aqlat\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqhorizontal lattice translation of the first cristal (datasource)\(aq}, \(aqphi1dependson\(aq: {\(aqdefault\(aq: \(aq../../transformations/bragg\(aq, \(aqdoc\(aq: \(aqthe depends_on field of the first cristal phi, e.g. theta (string)\(aq}, \(aqroll2\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqchi rotation of the second cristal (datasource)\(aq}, \(aqroll1\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqchi rotation of the first cristal (datasource)\(aq}, \(aqbraggangle\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqbragg angle (datasource)\(aq}, \(aqlat2\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqhorizontal lattice translation of the second cristal (datasource)\(aq}, \(aqcrystal\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqtype of crystal i.e. 0\->Si111,1\->Si311,2\->Si111 ChannelCut (datasource)\(aq}, \(aqoxfordhorizontal\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aq horizontal translation (datasource)\(aq}, \(aqenergyfmb\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqmonochromator energy (datasource)\(aq}}, \(aqpinhole\(aq: {\(aqy\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqvertical position (datasource)\(aq}, \(aqx\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqhorizontal position (datasource)\(aq}, \(aqz\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqvertical position (datasource)\(aq}, \(aqxsign\(aq: {\(aqdefault\(aq: \(aq\(aq, \(aqdoc\(aq: "horizontal position sign, e.g. \(aq\-\(aq (string)"}}, \(aqbeamstop\(aq: {\(aqy\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqvertical position (datasource)\(aq}, \(aqx\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqhorizontal position (datasource)\(aq}, \(aqz\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqvertical position (datasource)\(aq}, \(aqdescription\(aq: {\(aqdefault\(aq: \(aqcircular\(aq, \(aqdoc\(aq: \(aq circular or  rectangular (string)\(aq}, \(aqxsign\(aq: {\(aqdefault\(aq: \(aq\(aq, \(aqdoc\(aq: "horizontal position sign, e.g. \(aq\-\(aq (string)"}}, \(aqundulator\(aq: {\(aqenergy\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqundulator energy (datasource)\(aq}, \(aqharmonic\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqundulator harmonic (datasource)\(aq}, \(aqgap\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqseparation between opposing pairs of magnetic pole (datasource)\(aq}, \(aqdependstop\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqthe first transformation, e.g. distance (string)\(aq}, \(aquname\(aq: {\(aqdefault\(aq: \(aqinsertion_device\(aq, \(aqdoc\(aq: \(aqinsertion_device group name (string)\(aq}, \(aqdistance\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqdistance from the sample in m, e.g. 0 (string)\(aq}, \(aqtransformations\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: "transformations group name i.e. \(aqtransformations\(aq. If it is  not set it is not created (string)"}, \(aqtaper\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqgap difference between upstream and downstream ends of the insertion device (datasource)\(aq}, \(aqlength\(aq: {\(aqdefault\(aq: \(aq2\(aq, \(aqdoc\(aq: \(aqlength of insertion device in meters (string)\(aq}, \(aqdistanceoffset\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aq3\-vector distance offset in m, e.g. sample\-source offset if the distance is taken from the source (string)\(aq}, \(aqtype\(aq: {\(aqdefault\(aq: \(aqundulator\(aq, \(aqdoc\(aq: \(aqundulator or wiggler (string)\(aq}}, \(aqdefault\(aq: {\(aq__configdevice__\(aq: {\(aqdefault\(aq: \(aqnxs/configserver/localhost\(aq, \(aqdoc\(aq: \(aqconfiguration server device name (string)\(aq}, \(aqsourcename\(aq: {\(aqdefault\(aq: \(aqPETRA III\(aq, \(aqdoc\(aq: \(aqsource name (string)\(aq}, \(aq__tangoport__\(aq: {\(aqdefault\(aq: \(aq10000\(aq, \(aqdoc\(aq: \(aqtango port (string)\(aq}, \(aqlongname\(aq: {\(aqdefault\(aq: \(aqP09 Resonant Scattering and Diffraction beamline\(aq, \(aqdoc\(aq: \(aqbeamline long name (string)\(aq}, \(aq__tangohost__\(aq: {\(aqdefault\(aq: \(aqlocalhost\(aq, \(aqdoc\(aq: \(aqtango host (string)\(aq}, \(aqshortname\(aq: {\(aqdefault\(aq: \(aqP09\(aq, \(aqdoc\(aq: \(aqbeamline short name (string)\(aq}}, \(aqcommon2\(aq: {\(aqdds\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqdefault read datasource name (datasource)\(aq}, \(aqods\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqoptional detasource name (datasource)\(aq}}, \(aqcommon3\(aq: {\(aqdds\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqdefault read datasource name (datasource)\(aq}, \(aqods1\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqfist optional detasource name (datasource)\(aq}, \(aqods2\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqsecond optional detasource name (datasource)\(aq}}, \(aqchcut\(aq: {\(aqtheta\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqtheta angle (datasource)\(aq}, \(aqbraggangle\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqbragg angle (datasource)\(aq}, \(aqjack2\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqsecond vertical jack of table (datasource)\(aq}, \(aqreflection\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqreflection from string (datasource)\(aq}, \(aqpara\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqdistance between the crystals (string)\(aq}, \(aqjack1\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqfirst vertical jack of table (datasource)\(aq}, \(aqenergy\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqsynchronized monochromator energy (datasource)\(aq}, \(aqcrystal\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aq type of crystal i.e. 0\->Si111,1\->Si311,2\->Si111 ChannelCut  (datasource)\(aq}, \(aqlat\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqhorizontal lattice translation of the first cristal (datasource)\(aq}, \(aqoxfordhorizontal\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aq horizontal translation (datasource)\(aq}, \(aqjack3\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqthird vertical jack of table (datasource)\(aq}, \(aqunitcalibration\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aq unit calibration from dcmmotor (datasource)\(aq}, \(aqusage\(aq: {\(aqdefault\(aq: \(aqBragg\(aq, \(aqdoc\(aq: \(aqthe crystall usage, e.g. Laue (string)\(aq}, \(aqtable\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqvertical position of table (datasource)\(aq}, \(aqyaw\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqphi rotation of the first cristal (datasource)\(aq}, \(aqenergyfmb\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqmonochromator energy (datasource)\(aq}, \(aqchcutdevice\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqFMBOxfDCMEnergy tango device name (string)\(aq}, \(aqroll1\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqchi rotation of the first cristal (datasource)\(aq}}, \(aqsource\(aq: {\(aqsourceenergy\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqring beam energy (datasource)\(aq}, \(aqbeamcurrent\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqring beam current (datasource)\(aq}, \(aqbunchmode\(aq: {\(aqdefault\(aq: \(aqMulti Bunch\(aq, \(aqdoc\(aq: \(aqbunch mode (string)\(aq}, \(aqnumberofbunches\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqnumber of source bunches (datasource)\(aq}}, \(aqslit\(aq: {\(aqright\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqright blade position (datasource)\(aq}, \(aqyoffset\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqvertiacal offset (datasource)\(aq}, \(aqxgap\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqhorizontal gap (datasource)\(aq}, \(aqxoffset\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqhorizontal offset (datasource)\(aq}, \(aqdistance\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqdistance for the sample in m, e.g. 0 (string)\(aq}, \(aqtransformations\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: "transformations group name i.e. \(aqtransformations\(aq. If it is  not set it is not created (string)"}, \(aqbottom\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqbottom blade position (datasource)\(aq}, \(aqtop\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqtop blade position (datasource)\(aq}, \(aqdependstop\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqthe first transformation, e.g. distance (string)\(aq}, \(aqdistanceoffset\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aq3\-vector distance offset in m, e.g. sample\-source offset if the distance is taken from the source (string)\(aq}, \(aqygap\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqvertical gap (datasource)\(aq}, \(aqleft\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqleft blade position (datasource)\(aq}}, \(aqcollect2\(aq: {\(aqsecond\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqname of the second component to collect (datasource)\(aq}, \(aqfirst\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqname of the first component to collect (datasource)\(aq}}, \(aqcollect3\(aq: {\(aqsecond\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqname of the second component to collect (datasource)\(aq}, \(aqthird\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqname of the third component to collect (datasource)\(aq}, \(aqfirst\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqname of the first component to collect (datasource)\(aq}}, \(aqsamplehkl\(aq: {\(aqh\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqh position in hkl space (datasource)\(aq}, \(aqpsi\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqpsi angle position of analyzer (datasource)\(aq}, \(aqsname\(aq: {\(aqdefault\(aq: \(aqsample\(aq, \(aqdoc\(aq: \(aqsample group name (string)\(aq}, \(aqk\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqk position in hkl space (datasource)\(aq}, \(aql\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aql position in hkl space (datasource)\(aq}}, \(aqbeamtimeid\(aq: {\(aqlocaldir\(aq: {\(aqdefault\(aq: \(aq/gpfs/local\(aq, \(aqdoc\(aq: \(aqlocal file directory (string)\(aq}, \(aqcurrentdir\(aq: {\(aqdefault\(aq: \(aq/gpfs/current\(aq, \(aqdoc\(aq: \(aqbeamtime file directory (string)\(aq}, \(aqcommissionprefix\(aq: {\(aqdefault\(aq: \(aqcommissioning\-metadata\-\(aq, \(aqdoc\(aq: \(aqcommission file prefix (string)\(aq}, \(aqcurrentpostfix\(aq: {\(aqdefault\(aq: \(aq.txt\(aq, \(aqdoc\(aq: \(aqbeamtime file postfix (string)\(aq}, \(aqshortname\(aq: {\(aqdefault\(aq: \(aqP09\(aq, \(aqdoc\(aq: \(aqbeamline short name (string)\(aq}, \(aqcommissionpostfix\(aq: {\(aqdefault\(aq: \(aq.txt\(aq, \(aqdoc\(aq: \(aqcommission file postfix (string)\(aq}, \(aqcommissiondir\(aq: {\(aqdefault\(aq: \(aq/gpfs/commissioning\(aq, \(aqdoc\(aq: \(aqcommission file directory (string)\(aq}, \(aqcurrentprefix\(aq: {\(aqdefault\(aq: \(aqbeamtime\-metadata\-\(aq, \(aqdoc\(aq: \(aqbeamtime file prefix (string)\(aq}}}
.INDENT 7.0
.TP
.B (\fI\%dict\fP <\fI\%str\fP , \fI\%dict\fP <\fI\%str\fP , \fI\%str\fP > >)
standard component template variables
and its [default value, doc string]
.UNINDENT
.UNINDENT
.INDENT 0.0
.IP \(bu 2
\fIgenindex\fP
.IP \(bu 2
\fImodindex\fP
.IP \(bu 2
\fIsearch\fP
.UNINDENT
.SH AUTHOR
Jan Kotanski
.SH COPYRIGHT
2012-2017 DESY, Jan Kotanski <jkotan@mail.desy.de>

GNU GENERAL PUBLIC LICENSE, version 3
.\" Generated by docutils manpage writer.
.
